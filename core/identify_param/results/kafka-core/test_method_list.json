["KafkaTest.testGetKafkaConfigFromArgs", "KafkaTest.testGetKafkaConfigFromArgsNonArgsAtTheEnd", "KafkaTest.testGetKafkaConfigFromArgsNonArgsOnly", "KafkaTest.testGetKafkaConfigFromArgsNonArgsAtTheBegging", "KafkaTest.testBrokerRoleNodeIdValidation", "KafkaTest.testControllerRoleNodeIdValidation", "KafkaTest.testColocatedRoleNodeIdValidation", "KafkaTest.testMustContainQuorumVotersIfUsingProcessRoles", "KafkaTest.testKafkaSslPasswords", "KafkaTest.testKafkaSslPasswordsWithSymbols", "KafkaTest.testZkSslClientEnable", "KafkaTest.testZkSslKeyStoreLocation", "KafkaTest.testZkSslTrustStoreLocation", "KafkaTest.testZookeeperKeyStorePassword", "KafkaTest.testZookeeperTrustStorePassword", "KafkaTest.testZkSslKeyStoreType", "KafkaTest.testZkSslTrustStoreType", "KafkaTest.testZkSslProtocol", "KafkaTest.testZkSslEnabledProtocols", "KafkaTest.testZkSslCipherSuites", "KafkaTest.testZkSslEndpointIdentificationAlgorithm", "KafkaTest.testZkSslCrlEnable", "KafkaTest.testZkSslOcspEnable", "KafkaTest.testConnectionsMaxReauthMsDefault", "KafkaTest.testConnectionsMaxReauthMsExplicit", "KafkaMetricsGroupTest.testUntaggedMetricName", "KafkaMetricsGroupTest.testTaggedMetricName", "KafkaMetricsGroupTest.testTaggedMetricNameWithEmptyValue", "KafkaTimerTest.testKafkaTimer", "PartitionLockTest.testNoLockContentionWithoutIsrUpdate", "PartitionLockTest.testAppendReplicaFetchWithSchedulerCheckForShrinkIsr", "PartitionLockTest.testAppendReplicaFetchWithUpdateIsr", "PartitionLockTest.testGetReplicaWithUpdateAssignmentAndIsr", "PartitionTest.testLastFetchedOffsetValidation", "PartitionTest.testMakeLeaderUpdatesEpochCache", "PartitionTest.testMaybeReplaceCurrentWithFutureReplica", "PartitionTest.testReplicaFetchToFollower", "PartitionTest.testFetchFromUnrecognizedFollower", "PartitionTest.testMakeFollowerWithWithFollowerAppendRecords", "PartitionTest.testMaybeReplaceCurrentWithFutureReplicaDifferentBaseOffsets", "PartitionTest.testFetchOffsetSnapshotEpochValidationForLeader", "PartitionTest.testFetchOffsetSnapshotEpochValidationForFollower", "PartitionTest.testOffsetForLeaderEpochValidationForLeader", "PartitionTest.testOffsetForLeaderEpochValidationForFollower", "PartitionTest.testLeaderEpochValidationOnLeader", "PartitionTest.testLeaderEpochValidationOnFollower", "PartitionTest.testFetchOffsetForTimestampEpochValidationForLeader", "PartitionTest.testFetchOffsetForTimestampEpochValidationForFollower", "PartitionTest.testFetchLatestOffsetIncludesLeaderEpoch", "PartitionTest.testMonotonicOffsetsAfterLeaderChange", "PartitionTest.testAppendRecordsAsFollowerBelowLogStartOffset", "PartitionTest.testListOffsetIsolationLevels", "PartitionTest.testGetReplica", "PartitionTest.testAppendRecordsToFollowerWithNoReplicaThrowsException", "PartitionTest.testMakeFollowerWithNoLeaderIdChange", "PartitionTest.testFollowerDoesNotJoinISRUntilCaughtUpToOffsetWithinCurrentLeaderEpoch", "PartitionTest.testAtMinIsr", "PartitionTest.testUpdateFollowerFetchState", "PartitionTest.testInvalidAlterPartitionRequestsAreNotRetried", "PartitionTest.testIsrExpansion", "PartitionTest.testIsrNotExpandedIfUpdateFails", "PartitionTest.testIsrNotExpandedIfReplicaIsInControlledShutdown", "PartitionTest.testRetryShrinkIsr", "PartitionTest.testMaybeShrinkIsr", "PartitionTest.testAlterIsrLeaderAndIsrRace", "PartitionTest.testShouldNotShrinkIsrIfPreviousFetchIsCaughtUp", "PartitionTest.testShouldNotShrinkIsrIfFollowerCaughtUpToLogEnd", "PartitionTest.testIsrNotShrunkIfUpdateFails", "PartitionTest.testAlterIsrNewLeaderElected", "PartitionTest.testAlterIsrUnknownTopic", "PartitionTest.testAlterIsrInvalidVersion", "PartitionTest.testAlterIsrUnexpectedError", "PartitionTest.testPartitionShouldRetryAlterPartitionRequest", "PartitionTest.testSingleInFlightAlterIsr", "PartitionTest.testZkIsrManagerAsyncCallback", "PartitionTest.testUseCheckpointToInitializeHighWatermark", "PartitionTest.testTopicIdAndPartitionMetadataFileForLeader", "PartitionTest.testTopicIdAndPartitionMetadataFileForFollower", "PartitionTest.testAddAndRemoveMetrics", "PartitionTest.testUnderReplicatedPartitionsCorrectSemantics", "PartitionTest.testUpdateAssignmentAndIsr", "PartitionTest.testLogConfigNotDirty", "PartitionTest.testLogConfigDirtyAsTopicUpdated", "PartitionTest.testLogConfigDirtyAsBrokerUpdated", "PartitionTest.testDoNotResetReplicaStateIfLeaderEpochIsNotBumped", "PartitionTest.testDoNotUpdateEpochStartOffsetIfLeaderEpochIsNotBumped", "PartitionTest.testIgnoreLeaderPartitionStateChangeWithOlderPartitionEpoch", "PartitionTest.testIgnoreFollowerPartitionStateChangeWithOlderPartitionEpoch", "PartitionTest.testFollowerShouldNotHaveAnyRemoteReplicaStates", "ReplicaTest.testInitialState", "ReplicaTest.testUpdateFetchState", "ReplicaTest.testResetReplicaStateWhenLeaderIsReelectedAndReplicaIsInSync", "ReplicaTest.testResetReplicaStateWhenLeaderIsReelectedAndReplicaIsNotInSync", "ReplicaTest.testResetReplicaStateWhenNewLeaderIsElectedAndReplicaIsInSync", "ReplicaTest.testResetReplicaStateWhenNewLeaderIsElectedAndReplicaIsNotInSync", "ReplicaTest.testIsCaughtUpWhenReplicaIsCaughtUpToLogEnd", "ReplicaTest.testIsCaughtUpWhenReplicaIsNotCaughtUpToLogEnd", "BrokerEndPointTest.testHashAndEquals", "BrokerEndPointTest.testFromJsonFutureVersion", "BrokerEndPointTest.testFromJsonV2", "BrokerEndPointTest.testFromJsonV1", "BrokerEndPointTest.testFromJsonV3", "BrokerEndPointTest.testFromJsonV4WithNullRack", "BrokerEndPointTest.testFromJsonV4WithNoRack", "BrokerEndPointTest.testFromJsonV4WithNoFeatures", "BrokerEndPointTest.testFromJsonV5", "BrokerEndPointTest.testEndpointFromUri", "PartitionWithLegacyMessageFormatTest.testMakeLeaderDoesNotUpdateEpochCacheForOldFormats", "KafkaZkClientTest.testConnectionViaNettyClient", "KafkaZkClientTest.testChrootExistsAndRootIsLocked", "KafkaZkClientTest.testSetAndGetConsumerOffset", "KafkaZkClientTest.testGetConsumerOffsetNoData", "KafkaZkClientTest.testDeleteRecursive", "KafkaZkClientTest.testDeleteRecursiveWithControllerEpochVersionCheck", "KafkaZkClientTest.testCreateRecursive", "KafkaZkClientTest.testTopicAssignmentMethods", "KafkaZkClientTest.testGetAllTopicsInClusterTriggersWatch", "KafkaZkClientTest.testGetAllTopicsInClusterDoesNotTriggerWatch", "KafkaZkClientTest.testGetDataAndVersion", "KafkaZkClientTest.testConditionalUpdatePath", "KafkaZkClientTest.testCreateSequentialPersistentPath", "KafkaZkClientTest.testPropagateIsrChanges", "KafkaZkClientTest.testIsrChangeNotificationGetters", "KafkaZkClientTest.testIsrChangeNotificationsDeletion", "KafkaZkClientTest.testPropagateLogDir", "KafkaZkClientTest.testLogDirGetters", "KafkaZkClientTest.testLogDirEventNotificationsDeletion", "KafkaZkClientTest.testSetGetAndDeletePartitionReassignment", "KafkaZkClientTest.testGetDataAndStat", "KafkaZkClientTest.testGetChildren", "KafkaZkClientTest.testAclManagementMethods", "KafkaZkClientTest.testDeletePath", "KafkaZkClientTest.testDeleteTopicZNode", "KafkaZkClientTest.testDeleteTopicPathMethods", "KafkaZkClientTest.testCreateTokenChangeNotification", "KafkaZkClientTest.testEntityConfigManagementMethods", "KafkaZkClientTest.testCreateConfigChangeNotification", "KafkaZkClientTest.testGetLogConfigs", "KafkaZkClientTest.testRegisterBrokerInfo", "KafkaZkClientTest.testRetryRegisterBrokerInfo", "KafkaZkClientTest.testGetBrokerMethods", "KafkaZkClientTest.testUpdateBrokerInfo", "KafkaZkClientTest.testTopicAssignments", "KafkaZkClientTest.testUpdateLeaderAndIsr", "KafkaZkClientTest.testGetTopicsAndPartitions", "KafkaZkClientTest.testCreateAndGetTopicPartitionStatesRaw", "KafkaZkClientTest.testSetTopicPartitionStatesRaw", "KafkaZkClientTest.testReassignPartitionsInProgress", "KafkaZkClientTest.testGetTopicPartitionStates", "KafkaZkClientTest.testControllerEpochMethods", "KafkaZkClientTest.testControllerManagementMethods", "KafkaZkClientTest.testZNodeChangeHandlerForDataChange", "KafkaZkClientTest.testClusterIdMethods", "KafkaZkClientTest.testBrokerSequenceIdMethods", "KafkaZkClientTest.testCreateTopLevelPaths", "KafkaZkClientTest.testPreferredReplicaElectionMethods", "KafkaZkClientTest.testDelegationTokenMethods", "KafkaZkClientTest.testConsumerOffsetPath", "KafkaZkClientTest.testAclMethods", "KafkaZkClientTest.testJuteMaxBufffer", "AdminZkClientTest.testManualReplicaAssignment", "AdminZkClientTest.testTopicCreationInZK", "AdminZkClientTest.testTopicCreationWithCollision", "AdminZkClientTest.testMarkedDeletionTopicCreation", "AdminZkClientTest.testMockedConcurrentTopicCreation", "AdminZkClientTest.testConcurrentTopicCreation", "AdminZkClientTest.testTopicConfigChange", "AdminZkClientTest.shouldPropagateDynamicBrokerConfigs", "AdminZkClientTest.testBootstrapClientIdConfig", "AdminZkClientTest.testGetBrokerMetadatas", "ReassignPartitionsZNodeTest.testEncode", "ReassignPartitionsZNodeTest.testDecodeInvalidJson", "ReassignPartitionsZNodeTest.testDecodeValidJson", "ClusterToolTest.testPrintClusterId", "ClusterToolTest.testClusterTooOldToHaveId", "ClusterToolTest.testUnregisterBroker", "ClusterToolTest.testLegacyModeClusterCannotUnregisterBroker", "StorageToolTest.testConfigToLogDirectories", "StorageToolTest.testConfigToLogDirectoriesWithMetaLogDir", "StorageToolTest.testInfoCommandOnEmptyDirectory", "StorageToolTest.testInfoCommandOnMissingDirectory", "StorageToolTest.testInfoCommandOnDirectoryAsFile", "StorageToolTest.testInfoWithMismatchedLegacyKafkaConfig", "StorageToolTest.testInfoWithMismatchedSelfManagedKafkaConfig", "StorageToolTest.testFormatEmptyDirectory", "StorageToolTest.testFormatWithInvalidClusterId", "StorageToolTest.testDefaultMetadataVersion", "StorageToolTest.testConfiguredMetadataVersion", "StorageToolTest.testMetadataVersionFlags", "MirrorMakerTest.testDefaultMirrorMakerMessageHandler", "MirrorMakerTest.testDefaultMirrorMakerMessageHandlerWithNoTimestampInSourceMessage", "MirrorMakerTest.testDefaultMirrorMakerMessageHandlerWithHeaders", "ConsoleConsumerTest.shouldThrowTimeoutExceptionWhenTimeoutIsReached", "ConsoleConsumerTest.shouldResetUnConsumedOffsetsBeforeExit", "ConsoleConsumerTest.shouldLimitReadsToMaxMessageLimit", "ConsoleConsumerTest.shouldStopWhenOutputCheckErrorFails", "ConsoleConsumerTest.shouldParseValidConsumerValidConfig", "ConsoleConsumerTest.shouldParseIncludeArgument", "ConsoleConsumerTest.shouldParseWhitelistArgument", "ConsoleConsumerTest.shouldIgnoreWhitelistArgumentIfIncludeSpecified", "ConsoleConsumerTest.shouldParseValidSimpleConsumerValidConfigWithNumericOffset", "ConsoleConsumerTest.shouldExitOnUnrecognizedNewConsumerOption", "ConsoleConsumerTest.shouldParseValidSimpleConsumerValidConfigWithStringOffset", "ConsoleConsumerTest.shouldParseValidConsumerConfigWithAutoOffsetResetLatest", "ConsoleConsumerTest.shouldParseValidConsumerConfigWithAutoOffsetResetEarliest", "ConsoleConsumerTest.shouldParseValidConsumerConfigWithAutoOffsetResetAndMatchingFromBeginning", "ConsoleConsumerTest.shouldParseValidConsumerConfigWithNoOffsetReset", "ConsoleConsumerTest.shouldExitOnInvalidConfigWithAutoOffsetResetAndConflictingFromBeginning", "ConsoleConsumerTest.shouldParseConfigsFromFile", "ConsoleConsumerTest.groupIdsProvidedInDifferentPlacesMustMatch", "ConsoleConsumerTest.testCustomPropertyShouldBePassedToConfigureMethod", "ConsoleConsumerTest.shouldParseGroupIdFromBeginningGivenTogether", "ConsoleConsumerTest.shouldExitOnGroupIdAndPartitionGivenTogether", "ConsoleConsumerTest.shouldExitOnOffsetWithoutPartition", "ConsoleConsumerTest.testDefaultMessageFormatter", "ConsoleConsumerTest.testNoOpMessageFormatter", "ConsoleConsumerTest.shouldExitIfNoTopicOrFilterSpecified", "ConsoleConsumerTest.shouldExitIfTopicAndIncludeSpecified", "ConsoleConsumerTest.shouldExitIfTopicAndWhitelistSpecified", "ConsoleConsumerTest.testClientIdOverride", "ConsoleConsumerTest.testDefaultClientId", "DumpLogSegmentsTest.testBatchAndRecordMetadataOutput", "DumpLogSegmentsTest.testPrintDataLog", "DumpLogSegmentsTest.testDumpIndexMismatches", "DumpLogSegmentsTest.testDumpTimeIndexErrors", "DumpLogSegmentsTest.testDumpMetadataRecords", "DumpLogSegmentsTest.testDumpMetadataSnapshot", "DumpLogSegmentsTest.testDumpEmptyIndex", "DumpLogSegmentsTest.testPrintDataLogPartialBatches", "LineMessageReaderTest.testLineReader", "LineMessageReaderTest.testLineReaderHeader", "LineMessageReaderTest.testMinimalValidInputWithHeaderKeyAndValue", "LineMessageReaderTest.testKeyMissingValue", "LineMessageReaderTest.testDemarcationsLongerThanOne", "LineMessageReaderTest.testLineReaderHeaderNoKey", "LineMessageReaderTest.testLineReaderOnlyValue", "LineMessageReaderTest.testParseHeaderEnabledWithCustomDelimiterAndVaryingNumberOfKeyValueHeaderPairs", "LineMessageReaderTest.testMissingKeySeparator", "LineMessageReaderTest.testMissingHeaderKeySeparator", "LineMessageReaderTest.testHeaderDemarcationCollision", "LineMessageReaderTest.testIgnoreErrorInInput", "LineMessageReaderTest.testMalformedHeaderIgnoreError", "LineMessageReaderTest.testNullMarker", "LineMessageReaderTest.testNullMarkerWithHeaders", "LineMessageReaderTest.testNullMarkerHeaderKeyThrows", "LineMessageReaderTest.testInvalidNullMarker", "ConsoleProducerTest.testValidConfigsBrokerList", "ConsoleProducerTest.testValidConfigsBootstrapServer", "ConsoleProducerTest.testInvalidConfigs", "ConsoleProducerTest.testParseKeyProp", "ConsoleProducerTest.testBootstrapServerOverride", "ConsoleProducerTest.testClientIdOverride", "ConsoleProducerTest.testDefaultClientId", "ConsoleProducerTest.testBatchSizeOverriddenByMaxPartitionMemoryBytesValue", "ConsoleProducerTest.testBatchSizeSetAndMaxPartitionMemoryBytesNotSet", "ConsoleProducerTest.testDefaultBatchSize", "ConsoleProducerTest.testBatchSizeNotSetAndMaxPartitionMemoryBytes", "ConsumerPerformanceTest.testDetailedHeaderMatchBody", "ConsumerPerformanceTest.testNonDetailedHeaderMatchBody", "ConsumerPerformanceTest.testConfigBrokerList", "ConsumerPerformanceTest.testConfigBootStrapServer", "ConsumerPerformanceTest.testBrokerListOverride", "ConsumerPerformanceTest.testConfigWithUnrecognizedOption", "ConsumerPerformanceTest.testClientIdOverride", "ConsumerPerformanceTest.testDefaultClientId", "TransactionMarkerRequestCompletionHandlerTest.shouldReEnqueuePartitionsWhenBrokerDisconnected", "TransactionMarkerRequestCompletionHandlerTest.shouldThrowIllegalStateExceptionIfErrorCodeNotAvailableForPid", "TransactionMarkerRequestCompletionHandlerTest.shouldCompleteDelayedOperationWhenNoErrors", "TransactionMarkerRequestCompletionHandlerTest.shouldCompleteDelayedOperationWhenNotCoordinator", "TransactionMarkerRequestCompletionHandlerTest.shouldCompleteDelayedOperationWhenCoordinatorLoading", "TransactionMarkerRequestCompletionHandlerTest.shouldCompleteDelayedOperationWhenCoordinatorEpochChanged", "TransactionMarkerRequestCompletionHandlerTest.shouldCompleteDelayedOperationWhenInvalidProducerEpoch", "TransactionMarkerRequestCompletionHandlerTest.shouldCompleteDelayedOperationWheCoordinatorEpochFenced", "TransactionMarkerRequestCompletionHandlerTest.shouldThrowIllegalStateExceptionWhenUnknownError", "TransactionMarkerRequestCompletionHandlerTest.shouldThrowIllegalStateExceptionWhenCorruptMessageError", "TransactionMarkerRequestCompletionHandlerTest.shouldThrowIllegalStateExceptionWhenMessageTooLargeError", "TransactionMarkerRequestCompletionHandlerTest.shouldThrowIllegalStateExceptionWhenRecordListTooLargeError", "TransactionMarkerRequestCompletionHandlerTest.shouldThrowIllegalStateExceptionWhenInvalidRequiredAcksError", "TransactionMarkerRequestCompletionHandlerTest.shouldRetryPartitionWhenUnknownTopicOrPartitionError", "TransactionMarkerRequestCompletionHandlerTest.shouldRetryPartitionWhenNotLeaderOrFollowerError", "TransactionMarkerRequestCompletionHandlerTest.shouldRetryPartitionWhenNotEnoughReplicasError", "TransactionMarkerRequestCompletionHandlerTest.shouldRetryPartitionWhenNotEnoughReplicasAfterAppendError", "TransactionMarkerRequestCompletionHandlerTest.shouldRetryPartitionWhenKafkaStorageError", "TransactionMarkerRequestCompletionHandlerTest.shouldRemoveTopicPartitionFromWaitingSetOnUnsupportedForMessageFormat", "TransactionCoordinatorTest.shouldReturnInvalidRequestWhenTransactionalIdIsEmpty", "TransactionCoordinatorTest.shouldAcceptInitPidAndReturnNextPidWhenTransactionalIdIsNull", "TransactionCoordinatorTest.shouldInitPidWithEpochZeroForNewTransactionalId", "TransactionCoordinatorTest.shouldGenerateNewProducerIdIfNoStateAndProducerIdAndEpochProvided", "TransactionCoordinatorTest.shouldGenerateNewProducerIdIfEpochsExhausted", "TransactionCoordinatorTest.shouldRespondWithNotCoordinatorOnInitPidWhenNotCoordinator", "TransactionCoordinatorTest.shouldRespondWithCoordinatorLoadInProgressOnInitPidWhenCoordinatorLoading", "TransactionCoordinatorTest.shouldRespondWithInvalidPidMappingOnAddPartitionsToTransactionWhenTransactionalIdNotPresent", "TransactionCoordinatorTest.shouldRespondWithInvalidRequestAddPartitionsToTransactionWhenTransactionalIdIsEmpty", "TransactionCoordinatorTest.shouldRespondWithInvalidRequestAddPartitionsToTransactionWhenTransactionalIdIsNull", "TransactionCoordinatorTest.shouldRespondWithNotCoordinatorOnAddPartitionsWhenNotCoordinator", "TransactionCoordinatorTest.shouldRespondWithCoordinatorLoadInProgressOnAddPartitionsWhenCoordinatorLoading", "TransactionCoordinatorTest.shouldRespondWithConcurrentTransactionsOnAddPartitionsWhenStateIsPrepareCommit", "TransactionCoordinatorTest.shouldRespondWithConcurrentTransactionOnAddPartitionsWhenStateIsPrepareAbort", "TransactionCoordinatorTest.shouldRespondWithProducerFencedOnAddPartitionsWhenEpochsAreDifferent", "TransactionCoordinatorTest.shouldAppendNewMetadataToLogOnAddPartitionsWhenPartitionsAdded", "TransactionCoordinatorTest.shouldRespondWithSuccessOnAddPartitionsWhenStateIsOngoing", "TransactionCoordinatorTest.shouldRespondWithSuccessOnAddPartitionsWhenStateIsCompleteCommit", "TransactionCoordinatorTest.shouldRespondWithSuccessOnAddPartitionsWhenStateIsCompleteAbort", "TransactionCoordinatorTest.shouldRespondWithErrorsNoneOnAddPartitionWhenNoErrorsAndPartitionsTheSame", "TransactionCoordinatorTest.shouldReplyWithInvalidPidMappingOnEndTxnWhenTxnIdDoesntExist", "TransactionCoordinatorTest.shouldReplyWithInvalidPidMappingOnEndTxnWhenPidDosentMatchMapped", "TransactionCoordinatorTest.shouldReplyWithProducerFencedOnEndTxnWhenEpochIsNotSameAsTransaction", "TransactionCoordinatorTest.shouldReturnOkOnEndTxnWhenStatusIsCompleteCommitAndResultIsCommit", "TransactionCoordinatorTest.shouldReturnOkOnEndTxnWhenStatusIsCompleteAbortAndResultIsAbort", "TransactionCoordinatorTest.shouldReturnInvalidTxnRequestOnEndTxnRequestWhenStatusIsCompleteAbortAndResultIsNotAbort", "TransactionCoordinatorTest.shouldReturnInvalidTxnRequestOnEndTxnRequestWhenStatusIsCompleteCommitAndResultIsNotCommit", "TransactionCoordinatorTest.shouldReturnConcurrentTxnRequestOnEndTxnRequestWhenStatusIsPrepareCommit", "TransactionCoordinatorTest.shouldReturnInvalidTxnRequestOnEndTxnRequestWhenStatusIsPrepareAbort", "TransactionCoordinatorTest.shouldAppendPrepareCommitToLogOnEndTxnWhenStatusIsOngoingAndResultIsCommit", "TransactionCoordinatorTest.shouldAppendPrepareAbortToLogOnEndTxnWhenStatusIsOngoingAndResultIsAbort", "TransactionCoordinatorTest.shouldRespondWithInvalidRequestOnEndTxnWhenTransactionalIdIsNull", "TransactionCoordinatorTest.shouldRespondWithInvalidRequestOnEndTxnWhenTransactionalIdIsEmpty", "TransactionCoordinatorTest.shouldRespondWithNotCoordinatorOnEndTxnWhenIsNotCoordinatorForId", "TransactionCoordinatorTest.shouldRespondWithCoordinatorLoadInProgressOnEndTxnWhenCoordinatorIsLoading", "TransactionCoordinatorTest.shouldReturnInvalidEpochOnEndTxnWhenEpochIsLarger", "TransactionCoordinatorTest.shouldReturnInvalidEpochOnEndTxnWhenEpochIsSmaller", "TransactionCoordinatorTest.shouldIncrementEpochAndUpdateMetadataOnHandleInitPidWhenExistingEmptyTransaction", "TransactionCoordinatorTest.shouldIncrementEpochAndUpdateMetadataOnHandleInitPidWhenExistingCompleteTransaction", "TransactionCoordinatorTest.shouldIncrementEpochAndUpdateMetadataOnHandleInitPidWhenExistingCompleteCommitTransaction", "TransactionCoordinatorTest.shouldWaitForCommitToCompleteOnHandleInitPidAndExistingTransactionInPrepareCommitState", "TransactionCoordinatorTest.shouldWaitForCommitToCompleteOnHandleInitPidAndExistingTransactionInPrepareAbortState", "TransactionCoordinatorTest.shouldAbortTransactionOnHandleInitPidWhenExistingTransactionInOngoingState", "TransactionCoordinatorTest.shouldFailToAbortTransactionOnHandleInitPidWhenProducerEpochIsSmaller", "TransactionCoordinatorTest.shouldNotRepeatedlyBumpEpochDueToInitPidDuringOngoingTxnIfAppendToLogFails", "TransactionCoordinatorTest.shouldUseLastEpochToFenceWhenEpochsAreExhausted", "TransactionCoordinatorTest.testInitProducerIdWithNoLastProducerData", "TransactionCoordinatorTest.testFenceProducerWhenMappingExistsWithDifferentProducerId", "TransactionCoordinatorTest.testInitProducerIdWithCurrentEpochProvided", "TransactionCoordinatorTest.testInitProducerIdStaleCurrentEpochProvided", "TransactionCoordinatorTest.testRetryInitProducerIdAfterProducerIdRotation", "TransactionCoordinatorTest.testInitProducerIdWithInvalidEpochAfterProducerIdRotation", "TransactionCoordinatorTest.shouldRemoveTransactionsForPartitionOnEmigration", "TransactionCoordinatorTest.shouldAbortExpiredTransactionsInOngoingStateAndBumpEpoch", "TransactionCoordinatorTest.shouldNotAcceptSmallerEpochDuringTransactionExpiration", "TransactionCoordinatorTest.shouldNotAbortExpiredTransactionsThatHaveAPendingStateTransition", "TransactionCoordinatorTest.shouldNotBumpEpochWhenAbortingExpiredTransactionIfAppendToLogFails", "TransactionCoordinatorTest.shouldNotBumpEpochWithPendingTransaction", "TransactionCoordinatorTest.testDescribeTransactionsWithEmptyTransactionalId", "TransactionCoordinatorTest.testDescribeTransactionsWithExpiringTransactionalId", "TransactionCoordinatorTest.testDescribeTransactionsWhileCoordinatorLoading", "TransactionCoordinatorTest.testDescribeTransactions", "TransactionLogTest.shouldThrowExceptionWriteInvalidTxn", "TransactionLogTest.shouldReadWriteMessages", "TransactionLogTest.testTransactionMetadataParsing", "TransactionLogTest.testTransactionMetadataTombstoneParsing", "TransactionCoordinatorConcurrencyTest.testConcurrentGoodPathWithConcurrentPartitionLoading", "TransactionCoordinatorConcurrencyTest.testConcurrentGoodPathSequence", "TransactionCoordinatorConcurrencyTest.testConcurrentRandomSequences", "TransactionCoordinatorConcurrencyTest.testConcurrentLoadUnloadPartitions", "TransactionCoordinatorConcurrencyTest.testConcurrentTransactionExpiration", "TransactionCoordinatorConcurrencyTest.testConcurrentNewInitProducerIdRequests", "TransactionCoordinatorConcurrencyTest.testConcurrentInitProducerIdRequestsOneNewOneContinuing", "TransactionCoordinatorConcurrencyTest.testConcurrentContinuingInitProducerIdRequests", "TransactionCoordinatorConcurrencyTest.testConcurrentInitProducerIdRequestsWithRetry", "TransactionCoordinatorConcurrencyTest.testConcurrentInitProducerRequestsAtPidBoundary", "TransactionCoordinatorConcurrencyTest.testConcurrentInitProducerRequestsWithRetryAtPidBoundary", "TransactionMetadataTest.testInitializeEpoch", "TransactionMetadataTest.testNormalEpochBump", "TransactionMetadataTest.testBumpEpochNotAllowedIfEpochsExhausted", "TransactionMetadataTest.testTolerateUpdateTimeShiftDuringEpochBump", "TransactionMetadataTest.testTolerateUpdateTimeResetDuringProducerIdRotation", "TransactionMetadataTest.testTolerateTimeShiftDuringAddPartitions", "TransactionMetadataTest.testTolerateTimeShiftDuringPrepareCommit", "TransactionMetadataTest.testTolerateTimeShiftDuringPrepareAbort", "TransactionMetadataTest.testTolerateTimeShiftDuringCompleteCommit", "TransactionMetadataTest.testTolerateTimeShiftDuringCompleteAbort", "TransactionMetadataTest.testFenceProducerAfterEpochsExhausted", "TransactionMetadataTest.testFenceProducerNotAllowedIfItWouldOverflow", "TransactionMetadataTest.testRotateProducerId", "TransactionMetadataTest.testRotateProducerIdInOngoingState", "TransactionMetadataTest.testRotateProducerIdInPrepareAbortState", "TransactionMetadataTest.testRotateProducerIdInPrepareCommitState", "TransactionMetadataTest.testAttemptedEpochBumpWithNewlyCreatedMetadata", "TransactionMetadataTest.testEpochBumpWithCurrentEpochProvided", "TransactionMetadataTest.testAttemptedEpochBumpWithLastEpoch", "TransactionMetadataTest.testAttemptedEpochBumpWithFencedEpoch", "TransactionMetadataTest.testTransactionStateIdAndNameMapping", "TransactionMetadataTest.testAllTransactionStatesAreMapped", "ProducerIdManagerTest.testGetProducerIdZk", "ProducerIdManagerTest.testExceedProducerIdLimitZk", "ProducerIdManagerTest.testInvalidRanges", "TransactionMarkerChannelManagerTest.shouldOnlyWriteTxnCompletionOnce", "TransactionMarkerChannelManagerTest.shouldGenerateEmptyMapWhenNoRequestsOutstanding", "TransactionMarkerChannelManagerTest.shouldGenerateRequestPerPartitionPerBroker", "TransactionMarkerChannelManagerTest.shouldSkipSendMarkersWhenLeaderNotFound", "TransactionMarkerChannelManagerTest.shouldSaveForLaterWhenLeaderUnknownButNotAvailable", "TransactionMarkerChannelManagerTest.shouldRemoveMarkersForTxnPartitionWhenPartitionEmigrated", "TransactionMarkerChannelManagerTest.shouldCompleteAppendToLogOnEndTxnWhenSendMarkersSucceed", "TransactionMarkerChannelManagerTest.shouldAbortAppendToLogOnEndTxnWhenNotCoordinatorError", "TransactionMarkerChannelManagerTest.shouldRetryAppendToLogOnEndTxnWhenCoordinatorNotAvailableError", "TransactionMarkerChannelManagerTest.shouldCreateMetricsOnStarting", "TransactionStateManagerTest.testValidateTransactionTimeout", "TransactionStateManagerTest.testAddGetPids", "TransactionStateManagerTest.testDeletePartition", "TransactionStateManagerTest.testDeleteLoadingPartition", "TransactionStateManagerTest.testLoadAndRemoveTransactionsForPartition", "TransactionStateManagerTest.testCompleteTransitionWhenAppendSucceeded", "TransactionStateManagerTest.testAppendFailToCoordinatorNotAvailableError", "TransactionStateManagerTest.testAppendFailToNotCoordinatorError", "TransactionStateManagerTest.testAppendFailToCoordinatorLoadingError", "TransactionStateManagerTest.testAppendFailToUnknownError", "TransactionStateManagerTest.testPendingStateNotResetOnRetryAppend", "TransactionStateManagerTest.testAppendTransactionToLogWhileProducerFenced", "TransactionStateManagerTest.testAppendTransactionToLogWhilePendingStateChanged", "TransactionStateManagerTest.shouldReturnNotCoordinatorErrorIfTransactionIdPartitionNotOwned", "TransactionStateManagerTest.testListTransactionsWithCoordinatorLoadingInProgress", "TransactionStateManagerTest.testListTransactionsFiltering", "TransactionStateManagerTest.shouldOnlyConsiderTransactionsInTheOngoingStateToAbort", "TransactionStateManagerTest.shouldWriteTxnMarkersForTransactionInPreparedCommitState", "TransactionStateManagerTest.shouldWriteTxnMarkersForTransactionInPreparedAbortState", "TransactionStateManagerTest.shouldRemoveCompleteCommitExpiredTransactionalIds", "TransactionStateManagerTest.shouldRemoveCompleteAbortExpiredTransactionalIds", "TransactionStateManagerTest.shouldRemoveEmptyExpiredTransactionalIds", "TransactionStateManagerTest.shouldNotRemoveExpiredTransactionalIdsIfLogAppendFails", "TransactionStateManagerTest.shouldNotRemoveOngoingTransactionalIds", "TransactionStateManagerTest.shouldNotRemovePrepareAbortTransactionalIds", "TransactionStateManagerTest.shouldNotRemovePrepareCommitTransactionalIds", "TransactionStateManagerTest.testTransactionalExpirationWithTooSmallBatchSize", "TransactionStateManagerTest.testTransactionalExpirationWithOfflineLogDir", "TransactionStateManagerTest.testTransactionExpirationShouldRespectBatchSize", "TransactionStateManagerTest.testSuccessfulReimmigration", "TransactionStateManagerTest.testLoadTransactionMetadataWithCorruptedLog", "TransactionStateManagerTest.testPartitionLoadMetric", "GroupCoordinatorTest.testRequestHandlingWhileLoadingInProgress", "GroupCoordinatorTest.testOffsetsRetentionMsIntegerOverflow", "GroupCoordinatorTest.testJoinGroupWrongCoordinator", "GroupCoordinatorTest.testJoinGroupShouldReceiveErrorIfGroupOverMaxSize", "GroupCoordinatorTest.testDynamicMembersJoinGroupWithMaxSizeAndRequiredKnownMember", "GroupCoordinatorTest.testDynamicMembersJoinGroupWithMaxSize", "GroupCoordinatorTest.testStaticMembersJoinGroupWithMaxSize", "GroupCoordinatorTest.testDynamicMembersCanReJoinGroupWithMaxSizeWhileRebalancing", "GroupCoordinatorTest.testLastJoiningMembersAreKickedOutWhenReJoiningGroupWithMaxSize", "GroupCoordinatorTest.testJoinGroupSessionTimeoutTooSmall", "GroupCoordinatorTest.testJoinGroupSessionTimeoutTooLarge", "GroupCoordinatorTest.testJoinGroupUnknownConsumerNewGroup", "GroupCoordinatorTest.testInvalidGroupId", "GroupCoordinatorTest.testValidJoinGroup", "GroupCoordinatorTest.testJoinGroupInconsistentProtocolType", "GroupCoordinatorTest.testJoinGroupWithEmptyProtocolType", "GroupCoordinatorTest.testJoinGroupWithEmptyGroupProtocol", "GroupCoordinatorTest.testNewMemberTimeoutCompletion", "GroupCoordinatorTest.testNewMemberJoinExpiration", "GroupCoordinatorTest.testNewMemberFailureAfterJoinGroupCompletion", "GroupCoordinatorTest.testNewMemberFailureAfterSyncGroupCompletion", "GroupCoordinatorTest.testJoinGroupInconsistentGroupProtocol", "GroupCoordinatorTest.testJoinGroupUnknownConsumerExistingGroup", "GroupCoordinatorTest.testJoinGroupUnknownConsumerNewDeadGroup", "GroupCoordinatorTest.testSyncDeadGroup", "GroupCoordinatorTest.testJoinGroupSecondJoinInconsistentProtocol", "GroupCoordinatorTest.staticMemberJoinAsFirstMember", "GroupCoordinatorTest.staticMemberReJoinWithExplicitUnknownMemberId", "GroupCoordinatorTest.staticMemberFenceDuplicateRejoinedFollower", "GroupCoordinatorTest.staticMemberFenceDuplicateSyncingFollowerAfterMemberIdChanged", "GroupCoordinatorTest.staticMemberFenceDuplicateRejoiningFollowerAfterMemberIdChanged", "GroupCoordinatorTest.staticMemberRejoinWithKnownMemberId", "GroupCoordinatorTest.staticMemberRejoinWithLeaderIdAndKnownMemberId", "GroupCoordinatorTest.staticMemberRejoinWithLeaderIdAndUnexpectedDeadGroup", "GroupCoordinatorTest.staticMemberRejoinWithLeaderIdAndUnexpectedEmptyGroup", "GroupCoordinatorTest.staticMemberRejoinWithFollowerIdAndChangeOfProtocol", "GroupCoordinatorTest.staticMemberRejoinWithUnknownMemberIdAndChangeOfProtocolWithSelectedProtocolChanged", "GroupCoordinatorTest.staticMemberRejoinWithUnknownMemberIdAndChangeOfProtocolWhileSelectProtocolUnchangedPersistenceFailure", "GroupCoordinatorTest.staticMemberRejoinWithUnknownMemberIdAndChangeOfProtocolWhileSelectProtocolUnchanged", "GroupCoordinatorTest.staticMemberRejoinWithKnownLeaderIdToTriggerRebalanceAndFollowerWithChangeofProtocol", "GroupCoordinatorTest.staticMemberRejoinAsFollowerWithUnknownMemberId", "GroupCoordinatorTest.staticMemberRejoinAsFollowerWithKnownMemberIdAndNoProtocolChange", "GroupCoordinatorTest.staticMemberRejoinAsFollowerWithMismatchedMemberId", "GroupCoordinatorTest.staticMemberRejoinAsLeaderWithMismatchedMemberId", "GroupCoordinatorTest.staticMemberSyncAsLeaderWithInvalidMemberId", "GroupCoordinatorTest.staticMemberHeartbeatLeaderWithInvalidMemberId", "GroupCoordinatorTest.shouldGetDifferentStaticMemberIdAfterEachRejoin", "GroupCoordinatorTest.testOffsetCommitDeadGroup", "GroupCoordinatorTest.staticMemberCommitOffsetWithInvalidMemberId", "GroupCoordinatorTest.staticMemberJoinWithUnknownInstanceIdAndKnownMemberId", "GroupCoordinatorTest.staticMemberReJoinWithIllegalStateAsUnknownMember", "GroupCoordinatorTest.testLeaderFailToRejoinBeforeFinalRebalanceTimeoutWithLongSessionTimeout", "GroupCoordinatorTest.testLeaderRejoinBeforeFinalRebalanceTimeoutWithLongSessionTimeout", "GroupCoordinatorTest.testStaticMemberFollowerFailToRejoinBeforeRebalanceTimeout", "GroupCoordinatorTest.testStaticMemberLeaderFailToRejoinBeforeRebalanceTimeout", "GroupCoordinatorTest.testJoinGroupProtocolTypeIsNotProvidedWhenAnErrorOccurs", "GroupCoordinatorTest.testJoinGroupReturnsTheProtocolType", "GroupCoordinatorTest.testSyncGroupReturnsAnErrorWhenProtocolTypeIsInconsistent", "GroupCoordinatorTest.testSyncGroupReturnsAnErrorWhenProtocolNameIsInconsistent", "GroupCoordinatorTest.testSyncGroupSucceedWhenProtocolTypeAndNameAreNotProvided", "GroupCoordinatorTest.testSyncGroupSucceedWhenProtocolTypeAndNameAreConsistent", "GroupCoordinatorTest.testHeartbeatWrongCoordinator", "GroupCoordinatorTest.testHeartbeatUnknownGroup", "GroupCoordinatorTest.testHeartbeatDeadGroup", "GroupCoordinatorTest.testHeartbeatEmptyGroup", "GroupCoordinatorTest.testHeartbeatUnknownConsumerExistingGroup", "GroupCoordinatorTest.testHeartbeatRebalanceInProgress", "GroupCoordinatorTest.testHeartbeatIllegalGeneration", "GroupCoordinatorTest.testValidHeartbeat", "GroupCoordinatorTest.testSessionTimeout", "GroupCoordinatorTest.testHeartbeatMaintainsSession", "GroupCoordinatorTest.testCommitMaintainsSession", "GroupCoordinatorTest.testSessionTimeoutDuringRebalance", "GroupCoordinatorTest.testRebalanceCompletesBeforeMemberJoins", "GroupCoordinatorTest.testSyncGroupEmptyAssignment", "GroupCoordinatorTest.testSyncGroupNotCoordinator", "GroupCoordinatorTest.testSyncGroupFromUnknownGroup", "GroupCoordinatorTest.testSyncGroupFromUnknownMember", "GroupCoordinatorTest.testSyncGroupFromIllegalGeneration", "GroupCoordinatorTest.testJoinGroupFromUnchangedFollowerDoesNotRebalance", "GroupCoordinatorTest.testJoinGroupFromUnchangedLeaderShouldRebalance", "GroupCoordinatorTest.testSecondMemberPartiallyJoinAndTimeout", "GroupCoordinatorTest.testJoinGroupCompletionWhenPendingMemberJoins", "GroupCoordinatorTest.testJoinGroupCompletionWhenPendingMemberTimesOut", "GroupCoordinatorTest.testPendingMembersLeavesGroup", "GroupCoordinatorTest.testRebalanceTimesOutWhenSyncRequestIsNotReceived", "GroupCoordinatorTest.testRebalanceTimesOutWhenSyncRequestIsNotReceivedFromFollowers", "GroupCoordinatorTest.testRebalanceTimesOutWhenSyncRequestIsNotReceivedFromLeaders", "GroupCoordinatorTest.testRebalanceDoesNotTimeOutWhenAllSyncAreReceived", "GroupCoordinatorTest.testLeaderFailureInSyncGroup", "GroupCoordinatorTest.testSyncGroupFollowerAfterLeader", "GroupCoordinatorTest.testSyncGroupLeaderAfterFollower", "GroupCoordinatorTest.testCommitOffsetFromUnknownGroup", "GroupCoordinatorTest.testCommitOffsetWithDefaultGeneration", "GroupCoordinatorTest.testCommitOffsetsAfterGroupIsEmpty", "GroupCoordinatorTest.testFetchOffsets", "GroupCoordinatorTest.testCommitAndFetchOffsetsWithEmptyGroup", "GroupCoordinatorTest.testBasicFetchTxnOffsets", "GroupCoordinatorTest.testFetchTxnOffsetsWithAbort", "GroupCoordinatorTest.testFetchPendingTxnOffsetsWithAbort", "GroupCoordinatorTest.testFetchPendingTxnOffsetsWithCommit", "GroupCoordinatorTest.testFetchTxnOffsetsIgnoreSpuriousCommit", "GroupCoordinatorTest.testFetchTxnOffsetsOneProducerMultipleGroups", "GroupCoordinatorTest.testFetchTxnOffsetsMultipleProducersOneGroup", "GroupCoordinatorTest.testFetchOffsetForUnknownPartition", "GroupCoordinatorTest.testFetchOffsetNotCoordinatorForGroup", "GroupCoordinatorTest.testFetchAllOffsets", "GroupCoordinatorTest.testCommitOffsetInCompletingRebalance", "GroupCoordinatorTest.testCommitOffsetInCompletingRebalanceFromUnknownMemberId", "GroupCoordinatorTest.testCommitOffsetInCompletingRebalanceFromIllegalGeneration", "GroupCoordinatorTest.testManualCommitOffsetShouldNotValidateMemberIdAndInstanceId", "GroupCoordinatorTest.testTxnCommitOffsetWithFencedInstanceId", "GroupCoordinatorTest.testTxnCommitOffsetWithInvalidMemberId", "GroupCoordinatorTest.testTxnCommitOffsetWithKnownMemberId", "GroupCoordinatorTest.testTxnCommitOffsetWithIllegalGeneration", "GroupCoordinatorTest.testTxnCommitOffsetWithLegalGeneration", "GroupCoordinatorTest.testHeartbeatDuringRebalanceCausesRebalanceInProgress", "GroupCoordinatorTest.testGenerationIdIncrementsOnRebalance", "GroupCoordinatorTest.testLeaveGroupWrongCoordinator", "GroupCoordinatorTest.testLeaveGroupUnknownGroup", "GroupCoordinatorTest.testLeaveGroupUnknownConsumerExistingGroup", "GroupCoordinatorTest.testSingleLeaveDeadGroup", "GroupCoordinatorTest.testBatchLeaveDeadGroup", "GroupCoordinatorTest.testValidLeaveGroup", "GroupCoordinatorTest.testLeaveGroupWithFencedInstanceId", "GroupCoordinatorTest.testLeaveGroupStaticMemberWithUnknownMemberId", "GroupCoordinatorTest.testStaticMembersValidBatchLeaveGroup", "GroupCoordinatorTest.testStaticMembersWrongCoordinatorBatchLeaveGroup", "GroupCoordinatorTest.testStaticMembersUnknownGroupBatchLeaveGroup", "GroupCoordinatorTest.testStaticMembersFencedInstanceBatchLeaveGroup", "GroupCoordinatorTest.testStaticMembersUnknownInstanceBatchLeaveGroup", "GroupCoordinatorTest.testPendingMemberBatchLeaveGroup", "GroupCoordinatorTest.testListGroupsIncludesStableGroups", "GroupCoordinatorTest.testListGroupsIncludesRebalancingGroups", "GroupCoordinatorTest.testListGroupsWithStates", "GroupCoordinatorTest.testDescribeGroupWrongCoordinator", "GroupCoordinatorTest.testDescribeGroupInactiveGroup", "GroupCoordinatorTest.testDescribeGroupStableForDynamicMember", "GroupCoordinatorTest.testDescribeGroupStableForStaticMember", "GroupCoordinatorTest.testDescribeGroupRebalancing", "GroupCoordinatorTest.testDeleteNonEmptyGroup", "GroupCoordinatorTest.testDeleteGroupWithInvalidGroupId", "GroupCoordinatorTest.testDeleteGroupWithWrongCoordinator", "GroupCoordinatorTest.testDeleteEmptyGroup", "GroupCoordinatorTest.testDeleteEmptyGroupWithStoredOffsets", "GroupCoordinatorTest.testDeleteOffsetOfNonExistingGroup", "GroupCoordinatorTest.testDeleteOffsetOfNonEmptyNonConsumerGroup", "GroupCoordinatorTest.testDeleteOffsetOfEmptyNonConsumerGroup", "GroupCoordinatorTest.testDeleteOffsetOfConsumerGroupWithUnparsableProtocol", "GroupCoordinatorTest.testDeleteOffsetOfDeadConsumerGroup", "GroupCoordinatorTest.testDeleteOffsetOfEmptyConsumerGroup", "GroupCoordinatorTest.testDeleteOffsetOfStableConsumerGroup", "GroupCoordinatorTest.shouldDelayInitialRebalanceByGroupInitialRebalanceDelayOnEmptyGroup", "GroupCoordinatorTest.shouldResetRebalanceDelayWhenNewMemberJoinsGroupInInitialRebalance", "GroupCoordinatorTest.shouldDelayRebalanceUptoRebalanceTimeout", "GroupCoordinatorTest.testCompleteHeartbeatWithGroupDead", "GroupCoordinatorTest.testCompleteHeartbeatWithMemberAlreadyRemoved", "GroupMetadataTest.testCanRebalanceWhenStable", "GroupMetadataTest.testCanRebalanceWhenCompletingRebalance", "GroupMetadataTest.testCannotRebalanceWhenPreparingRebalance", "GroupMetadataTest.testCannotRebalanceWhenDead", "GroupMetadataTest.testStableToPreparingRebalanceTransition", "GroupMetadataTest.testStableToDeadTransition", "GroupMetadataTest.testAwaitingRebalanceToPreparingRebalanceTransition", "GroupMetadataTest.testPreparingRebalanceToDeadTransition", "GroupMetadataTest.testPreparingRebalanceToEmptyTransition", "GroupMetadataTest.testEmptyToDeadTransition", "GroupMetadataTest.testAwaitingRebalanceToStableTransition", "GroupMetadataTest.testEmptyToStableIllegalTransition", "GroupMetadataTest.testStableToStableIllegalTransition", "GroupMetadataTest.testEmptyToAwaitingRebalanceIllegalTransition", "GroupMetadataTest.testPreparingRebalanceToPreparingRebalanceIllegalTransition", "GroupMetadataTest.testPreparingRebalanceToStableIllegalTransition", "GroupMetadataTest.testAwaitingRebalanceToAwaitingRebalanceIllegalTransition", "GroupMetadataTest.testDeadToStableIllegalTransition", "GroupMetadataTest.testDeadToPreparingRebalanceIllegalTransition", "GroupMetadataTest.testDeadToAwaitingRebalanceIllegalTransition", "GroupMetadataTest.testSelectProtocol", "GroupMetadataTest.testSelectProtocolRaisesIfNoMembers", "GroupMetadataTest.testSelectProtocolChoosesCompatibleProtocol", "GroupMetadataTest.testSupportsProtocols", "GroupMetadataTest.testOffsetRemovalDuringTransitionFromEmptyToNonEmpty", "GroupMetadataTest.testSubscribedTopics", "GroupMetadataTest.testSubscribedTopicsNonConsumerGroup", "GroupMetadataTest.testInitNextGeneration", "GroupMetadataTest.testInitNextGenerationEmptyGroup", "GroupMetadataTest.testOffsetCommit", "GroupMetadataTest.testOffsetCommitFailure", "GroupMetadataTest.testOffsetCommitFailureWithAnotherPending", "GroupMetadataTest.testOffsetCommitWithAnotherPending", "GroupMetadataTest.testConsumerBeatsTransactionalOffsetCommit", "GroupMetadataTest.testTransactionBeatsConsumerOffsetCommit", "GroupMetadataTest.testTransactionalCommitIsAbortedAndConsumerCommitWins", "GroupMetadataTest.testFailedTxnOffsetCommitLeavesNoPendingState", "GroupMetadataTest.testReplaceGroupInstanceWithNonExistingMember", "GroupMetadataTest.testReplaceGroupInstance", "GroupMetadataTest.testInvokeJoinCallback", "GroupMetadataTest.testNotInvokeJoinCallback", "GroupMetadataTest.testInvokeSyncCallback", "GroupMetadataTest.testNotInvokeSyncCallback", "GroupMetadataTest.testHasPendingNonTxnOffsets", "GroupMetadataTest.testHasPendingTxnOffsets", "GroupMetadataTest.testCannotAddPendingMemberIfStable", "GroupMetadataTest.testRemovalFromPendingAfterMemberIsStable", "GroupMetadataTest.testRemovalFromPendingWhenMemberIsRemoved", "GroupMetadataTest.testCannotAddStaticMemberIfAlreadyPresent", "GroupMetadataTest.testCannotAddPendingSyncOfUnknownMember", "GroupMetadataTest.testCannotRemovePendingSyncOfUnknownMember", "GroupMetadataTest.testCanAddAndRemovePendingSyncMember", "GroupMetadataTest.testRemovalFromPendingSyncWhenMemberIsRemoved", "GroupMetadataTest.testNewGenerationClearsPendingSyncMembers", "GroupCoordinatorConcurrencyTest.testConcurrentGoodPathSequence", "GroupCoordinatorConcurrencyTest.testConcurrentTxnGoodPathSequence", "GroupCoordinatorConcurrencyTest.testConcurrentRandomSequence", "GroupCoordinatorConcurrencyTest.testConcurrentJoinGroupEnforceGroupMaxSize", "GroupMetadataManagerTest.testLogInfoFromCleanupGroupMetadata", "GroupMetadataManagerTest.testLoadOffsetsWithoutGroup", "GroupMetadataManagerTest.testLoadEmptyGroupWithOffsets", "GroupMetadataManagerTest.testLoadTransactionalOffsetsWithoutGroup", "GroupMetadataManagerTest.testDoNotLoadAbortedTransactionalOffsetCommits", "GroupMetadataManagerTest.testGroupLoadedWithPendingCommits", "GroupMetadataManagerTest.testLoadWithCommittedAndAbortedTransactionalOffsetCommits", "GroupMetadataManagerTest.testLoadWithCommittedAndAbortedAndPendingTransactionalOffsetCommits", "GroupMetadataManagerTest.testLoadTransactionalOffsetCommitsFromMultipleProducers", "GroupMetadataManagerTest.testGroupLoadWithConsumerAndTransactionalOffsetCommitsConsumerWins", "GroupMetadataManagerTest.testGroupLoadWithConsumerAndTransactionalOffsetCommitsTransactionWins", "GroupMetadataManagerTest.testGroupNotExists", "GroupMetadataManagerTest.testLoadOffsetsWithTombstones", "GroupMetadataManagerTest.testLoadOffsetsAndGroup", "GroupMetadataManagerTest.testLoadOffsetsAndGroupIgnored", "GroupMetadataManagerTest.testUnloadOffsetsAndGroup", "GroupMetadataManagerTest.testUnloadOffsetsAndGroupIgnored", "GroupMetadataManagerTest.testUnloadOffsetsAndGroupIgnoredAfterStopReplica", "GroupMetadataManagerTest.testLoadGroupWithTombstone", "GroupMetadataManagerTest.testLoadGroupWithLargeGroupMetadataRecord", "GroupMetadataManagerTest.testLoadGroupAndOffsetsWithCorruptedLog", "GroupMetadataManagerTest.testOffsetWriteAfterGroupRemoved", "GroupMetadataManagerTest.testLoadGroupAndOffsetsFromDifferentSegments", "GroupMetadataManagerTest.testAddGroup", "GroupMetadataManagerTest.testloadGroupWithStaticMember", "GroupMetadataManagerTest.testLoadConsumerGroup", "GroupMetadataManagerTest.testLoadEmptyConsumerGroup", "GroupMetadataManagerTest.testLoadConsumerGroupWithFaultyConsumerProtocol", "GroupMetadataManagerTest.testShouldThrowExceptionForUnsupportedGroupMetadataVersion", "GroupMetadataManagerTest.testCurrentStateTimestampForAllGroupMetadataVersions", "GroupMetadataManagerTest.testReadFromOldGroupMetadata", "GroupMetadataManagerTest.testStoreEmptyGroup", "GroupMetadataManagerTest.testStoreEmptySimpleGroup", "GroupMetadataManagerTest.testStoreGroupErrorMapping", "GroupMetadataManagerTest.testStoreNonEmptyGroup", "GroupMetadataManagerTest.testStoreNonEmptyGroupWhenCoordinatorHasMoved", "GroupMetadataManagerTest.testCommitOffset", "GroupMetadataManagerTest.testTransactionalCommitOffsetCommitted", "GroupMetadataManagerTest.testTransactionalCommitOffsetAppendFailure", "GroupMetadataManagerTest.testTransactionalCommitOffsetAborted", "GroupMetadataManagerTest.testCommitOffsetWhenCoordinatorHasMoved", "GroupMetadataManagerTest.testCommitOffsetFailure", "GroupMetadataManagerTest.testCommitOffsetPartialFailure", "GroupMetadataManagerTest.testOffsetMetadataTooLarge", "GroupMetadataManagerTest.testExpireOffset", "GroupMetadataManagerTest.testGroupMetadataRemoval", "GroupMetadataManagerTest.testGroupMetadataRemovalWithLogAppendTime", "GroupMetadataManagerTest.testExpireGroupWithOffsetsOnly", "GroupMetadataManagerTest.testOffsetExpirationSemantics", "GroupMetadataManagerTest.testOffsetExpirationOfSimpleConsumer", "GroupMetadataManagerTest.testOffsetExpirationOfActiveGroupSemantics", "GroupMetadataManagerTest.testLoadOffsetFromOldCommit", "GroupMetadataManagerTest.testLoadOffsetWithExplicitRetention", "GroupMetadataManagerTest.testSerdeOffsetCommitValue", "GroupMetadataManagerTest.testSerdeOffsetCommitValueWithExpireTimestamp", "GroupMetadataManagerTest.testSerdeOffsetCommitValueWithNoneExpireTimestamp", "GroupMetadataManagerTest.testLoadOffsetsWithEmptyControlBatch", "GroupMetadataManagerTest.testCommittedOffsetParsing", "GroupMetadataManagerTest.testCommittedOffsetTombstoneParsing", "GroupMetadataManagerTest.testGroupMetadataParsingWithNullUserData", "GroupMetadataManagerTest.testGroupMetadataTombstoneParsing", "GroupMetadataManagerTest.testMetrics", "GroupMetadataManagerTest.testPartitionLoadMetric", "MemberMetadataTest.testMatchesSupportedProtocols", "MemberMetadataTest.testVoteForPreferredProtocol", "MemberMetadataTest.testMetadata", "MemberMetadataTest.testMetadataRaisesOnUnsupportedProtocol", "MemberMetadataTest.testVoteRaisesOnNoSupportedProtocols", "MemberMetadataTest.testHasValidGroupInstanceId", "DelegationTokenManagerTest.testTokenRequestsWithDelegationTokenDisabled", "DelegationTokenManagerTest.testCreateToken", "DelegationTokenManagerTest.testRenewToken", "DelegationTokenManagerTest.testExpireToken", "DelegationTokenManagerTest.testRemoveTokenHmac():U", "DelegationTokenManagerTest.testDescribeToken", "DelegationTokenManagerTest.testPeriodicTokenExpiry", "ZkAuthorizationTest.testIsZkSecurityEnabled", "ZkAuthorizationTest.testKafkaZkClient", "ZkAuthorizationTest.testZkMigration", "ZkAuthorizationTest.testZkAntiMigration", "ZkAuthorizationTest.testDelete", "ZkAuthorizationTest.testDeleteRecursive", "ZkAuthorizationTest.testChroot", "ZkAuthorizationTest.testConsumerOffsetPathAcls", "AclAuthorizerTest.testAuthorizeThrowsOnNonLiteralResource", "AclAuthorizerTest.testAuthorizeWithEmptyResourceName", "AclAuthorizerTest.testEmptyAclThrowsException", "AclAuthorizerTest.testTopicAcl", "AclAuthorizerTest.testAllowAccessWithCustomPrincipal", "AclAuthorizerTest.testDenyTakesPrecedence", "AclAuthorizerTest.testAllowAllAccess", "AclAuthorizerTest.testSuperUserHasAccess", "AclAuthorizerTest.testSuperUserWithCustomPrincipalHasAccess", "AclAuthorizerTest.testWildCardAcls", "AclAuthorizerTest.testNoAclFound", "AclAuthorizerTest.testNoAclFoundOverride", "AclAuthorizerTest.testAclManagementAPIs", "AclAuthorizerTest.testLoadCache", "AclAuthorizerTest.testChangeListenerTiming", "AclAuthorizerTest.testLocalConcurrentModificationOfResourceAcls", "AclAuthorizerTest.testDistributedConcurrentModificationOfResourceAcls", "AclAuthorizerTest.testHighConcurrencyModificationOfResourceAcls", "AclAuthorizerTest.testAclInheritance", "AclAuthorizerTest.testHighConcurrencyDeletionOfResourceAcls", "AclAuthorizerTest.testAccessAllowedIfAllowAclExistsOnWildcardResource", "AclAuthorizerTest.testDeleteAclOnWildcardResource", "AclAuthorizerTest.testDeleteAllAclOnWildcardResource", "AclAuthorizerTest.testAccessAllowedIfAllowAclExistsOnPrefixedResource", "AclAuthorizerTest.testDeleteAclOnPrefixedResource", "AclAuthorizerTest.testDeleteAllAclOnPrefixedResource", "AclAuthorizerTest.testAddAclsOnLiteralResource", "AclAuthorizerTest.testAddAclsOnWildcardResource", "AclAuthorizerTest.testAddAclsOnPrefixedResource", "AclAuthorizerTest.testAuthorizeWithPrefixedResource", "AclAuthorizerTest.testSingleCharacterResourceAcls", "AclAuthorizerTest.testGetAclsPrincipal", "AclAuthorizerTest.testAclsFilter", "AclAuthorizerTest.testThrowsOnAddPrefixedAclIfInterBrokerProtocolVersionTooLow", "AclAuthorizerTest.testCreateAclWithInvalidResourceName", "AclAuthorizerTest.testWritesExtendedAclChangeEventIfInterBrokerProtocolNotSet", "AclAuthorizerTest.testWritesExtendedAclChangeEventWhenInterBrokerProtocolAtLeastKafkaV2", "AclAuthorizerTest.testWritesLiteralWritesLiteralAclChangeEventWhenInterBrokerProtocolLessThanKafkaV2eralAclChangesForOlderProtocolVersions", "AclAuthorizerTest.testWritesLiteralAclChangeEventWhenInterBrokerProtocolIsKafkaV2", "AclAuthorizerTest.testAuthorizerNoZkConfig", "AclAuthorizerTest.testAuthorizerZkConfigFromKafkaConfigWithDefaults", "AclAuthorizerTest.testAuthorizerZkConfigFromKafkaConfig", "AclAuthorizerTest.testAuthorizerZkConfigFromPrefixOverrides", "AclAuthorizerTest.testCreateDeleteTiming", "AclAuthorizerTest.testAuthorizeByResourceTypeNoAclFoundOverride", "AclAuthorizerWithZkSaslTest.testAclUpdateWithSessionExpiration", "AclAuthorizerWithZkSaslTest.testAclUpdateWithAuthFailure", ".testAuthorizeByResourceTypeMultipleAddAndRemove", ".testAuthorizeByResourceTypeIsolationUnrelatedDenyWontDominateAllow", ".testAuthorizeByResourceTypeDenyTakesPrecedence", ".testAuthorizeByResourceTypePrefixedResourceDenyDominate", ".testAuthorizeByResourceTypeWildcardResourceDenyDominate", ".testAuthorizeByResourceTypeWithAllOperationAce", ".testAuthorizeByResourceTypeWithAllHostAce", ".testAuthorizeByResourceTypeWithAllPrincipalAce", ".testAuthorzeByResourceTypeSuperUserHasAccess", "AclEntryTest.testAclJsonConversion", "UncleanLeaderElectionTest.testUncleanLeaderElectionEnabled", "UncleanLeaderElectionTest.testUncleanLeaderElectionDisabled", "UncleanLeaderElectionTest.testUncleanLeaderElectionEnabledByTopicOverride", "UncleanLeaderElectionTest.testUncleanLeaderElectionDisabledByTopicOverride", "UncleanLeaderElectionTest.testUncleanLeaderElectionInvalidTopicOverride", "UncleanLeaderElectionTest.testTopicUncleanLeaderElectionEnable", "MetricsDuringTopicCreationDeletionTest.testMetricsDuringTopicCreateDelete", "ConnectionQuotasTest.testFailWhenNoListeners", "ConnectionQuotasTest.testFailDecrementForUnknownIp", "ConnectionQuotasTest.testNoConnectionLimitsByDefault", "ConnectionQuotasTest.testMaxConnectionsPerIp", "ConnectionQuotasTest.testMaxBrokerWideConnectionLimit", "ConnectionQuotasTest.testMaxListenerConnectionLimits", "ConnectionQuotasTest.testBrokerConnectionRateLimitWhenActualRateBelowLimit", "ConnectionQuotasTest.testBrokerConnectionRateLimitWhenActualRateAboveLimit", "ConnectionQuotasTest.testListenerConnectionRateLimitWhenActualRateBelowLimit", "ConnectionQuotasTest.testListenerConnectionRateLimitWhenActualRateAboveLimit", "ConnectionQuotasTest.testIpConnectionRateWhenActualRateBelowLimit", "ConnectionQuotasTest.testIpConnectionRateWhenActualRateAboveLimit", "ConnectionQuotasTest.testIpConnectionRateWithListenerConnectionRate", "ConnectionQuotasTest.testRejectedIpConnectionUnrecordedFromConnectionRateQuotas", "ConnectionQuotasTest.testMaxListenerConnectionListenerMustBeAboveZero", "ConnectionQuotasTest.testMaxListenerConnectionRateReconfiguration", "ConnectionQuotasTest.testMaxBrokerConnectionRateReconfiguration", "ConnectionQuotasTest.testIpConnectionRateMetricUpdate", "ConnectionQuotasTest.testEnforcedIpConnectionRateQuotaUpdate", "ConnectionQuotasTest.testNonDefaultConnectionCountLimitAndRateLimit", "RequestConvertToJsonTest.testAllRequestTypesHandled", "RequestConvertToJsonTest.testAllApiVersionsResponseHandled", "RequestConvertToJsonTest.testAllResponseTypesHandled", "RequestConvertToJsonTest.testRequestHeaderNode", "RequestConvertToJsonTest.testClientInfoNode", "RequestConvertToJsonTest.testRequestDesc", "RequestConvertToJsonTest.testRequestDescMetrics", "SocketServerTest.simpleRequest", "SocketServerTest.testClientInformationWithLatestApiVersionsRequest", "SocketServerTest.testClientInformationWithOldestApiVersionsRequest", "SocketServerTest.testStagedListenerStartup", "SocketServerTest.testStagedListenerShutdownWhenConnectionQueueIsFull", "SocketServerTest.testDisabledRequestIsRejected", "SocketServerTest.tooBigRequestIsRejected", "SocketServerTest.testGracefulClose", "SocketServerTest.testNoOpAction", "SocketServerTest.testConnectionId", "SocketServerTest.testIdleConnection", "SocketServerTest.testConnectionIdReuse", "SocketServerTest.testSendActionResponseWithThrottledChannelWhereThrottlingInProgress", "SocketServerTest.testSendActionResponseWithThrottledChannelWhereThrottlingAlreadyDone", "SocketServerTest.testNoOpActionResponseWithThrottledChannelWhereThrottlingInProgress", "SocketServerTest.testNoOpActionResponseWithThrottledChannelWhereThrottlingAlreadyDone", "SocketServerTest.testSocketsCloseOnShutdown", "SocketServerTest.testMaxConnectionsPerIp", "SocketServerTest.testZeroMaxConnectionsPerIp", "SocketServerTest.testMaxConnectionsPerIpOverrides", "SocketServerTest.testExceptionInAcceptor", "SocketServerTest.testConnectionRatePerIp", "SocketServerTest.testThrottledSocketsClosedOnShutdown", "SocketServerTest.testSslSocketServer", "SocketServerTest.testSaslReauthenticationFailureWithKip152SaslAuthenticate", "SocketServerTest.testSaslReauthenticationFailureNoKip152SaslAuthenticate", "SocketServerTest.testSessionPrincipal", "SocketServerTest.testClientDisconnectionUpdatesRequestMetrics", "SocketServerTest.testClientDisconnectionWithOutstandingReceivesProcessedUntilFailedSend", "SocketServerTest.testBrokerSendAfterChannelClosedUpdatesRequestMetrics", "SocketServerTest.testRequestMetricsAfterStop", "SocketServerTest.testMetricCollectionAfterShutdown", "SocketServerTest.testProcessorMetricsTags", "SocketServerTest.configureNewConnectionException", "SocketServerTest.processNewResponseException", "SocketServerTest.sendCancelledKeyException", "SocketServerTest.remoteCloseSendFailure", "SocketServerTest.closingChannelSendFailure", "SocketServerTest.remoteCloseWithBufferedReceives", "SocketServerTest.remoteCloseWithoutBufferedReceives", "SocketServerTest.remoteCloseWithIncompleteBufferedReceive", "SocketServerTest.remoteCloseWithCompleteAndIncompleteBufferedReceives", "SocketServerTest.remoteCloseWithBufferedReceivesFailedSend", "SocketServerTest.closingChannelWithBufferedReceives", "SocketServerTest.closingChannelWithCompleteAndIncompleteBufferedReceives", "SocketServerTest.closingChannelWithBufferedReceivesFailedSend", "SocketServerTest.idleExpiryWithBufferedReceives", "SocketServerTest.testUnmuteChannelWithBufferedReceives", "SocketServerTest.processCompletedReceiveException", "SocketServerTest.processCompletedSendException", "SocketServerTest.processDisconnectedException", "SocketServerTest.pollException", "SocketServerTest.controlThrowable", "SocketServerTest.testConnectionRateLimit", "SocketServerTest.testControlPlaneAsPrivilegedListener", "SocketServerTest.testInterBrokerListenerAsPrivilegedListener", "SocketServerTest.testControlPlaneTakePrecedenceOverInterBrokerListenerAsPrivilegedListener", "SocketServerTest.testListenBacklogSize", "RequestChannelTest.testAlterRequests", "RequestChannelTest.testIncrementalAlterRequests", "RequestChannelTest.testNonAlterRequestsNotTransformed", "RequestChannelTest.testJsonRequests", "LeaderElectionCommandErrorTest.testTopicWithoutPartition", "LeaderElectionCommandErrorTest.testPartitionWithoutTopic", "LeaderElectionCommandErrorTest.testMissingElectionType", "LeaderElectionCommandErrorTest.testMissingTopicPartitionSelection", "LeaderElectionCommandErrorTest.testInvalidBroker", "AdminRackAwareTest.testGetRackAlternatedBrokerListAndAssignReplicasToBrokers", "AdminRackAwareTest.testAssignmentWithRackAware", "AdminRackAwareTest.testAssignmentWithRackAwareWithRandomStartIndex", "AdminRackAwareTest.testAssignmentWithRackAwareWithUnevenReplicas", "AdminRackAwareTest.testAssignmentWithRackAwareWithUnevenRacks", "AdminRackAwareTest.testAssignmentWith2ReplicasRackAware", "AdminRackAwareTest.testRackAwareExpansion", "AdminRackAwareTest.testAssignmentWith2ReplicasRackAwareWith6Partitions", "AdminRackAwareTest.testAssignmentWith2ReplicasRackAwareWith6PartitionsAnd3Brokers", "AdminRackAwareTest.testLargeNumberPartitionsAssignment", "AdminRackAwareTest.testMoreReplicasThanRacks", "AdminRackAwareTest.testLessReplicasThanRacks", "AdminRackAwareTest.testSingleRack", "AdminRackAwareTest.testSkipBrokerWithReplicaAlreadyAssigned", "AdminRackAwareTest.testReplicaAssignment", "DescribeConsumerGroupTest.testDescribeNonExistingGroup", "DescribeConsumerGroupTest.testDescribeWithMultipleSubActions", "DescribeConsumerGroupTest.testDescribeWithStateValue", "DescribeConsumerGroupTest.testDescribeOffsetsOfNonExistingGroup", "DescribeConsumerGroupTest.testDescribeMembersOfNonExistingGroup", "DescribeConsumerGroupTest.testDescribeStateOfNonExistingGroup", "DescribeConsumerGroupTest.testDescribeExistingGroup", "DescribeConsumerGroupTest.testDescribeExistingGroups", "DescribeConsumerGroupTest.testDescribeAllExistingGroups", "DescribeConsumerGroupTest.testDescribeOffsetsOfExistingGroup", "DescribeConsumerGroupTest.testDescribeMembersOfExistingGroup", "DescribeConsumerGroupTest.testDescribeStateOfExistingGroup", "DescribeConsumerGroupTest.testDescribeStateOfExistingGroupWithRoundRobinAssignor", "DescribeConsumerGroupTest.testDescribeExistingGroupWithNoMembers", "DescribeConsumerGroupTest.testDescribeOffsetsOfExistingGroupWithNoMembers", "DescribeConsumerGroupTest.testDescribeMembersOfExistingGroupWithNoMembers", "DescribeConsumerGroupTest.testDescribeStateOfExistingGroupWithNoMembers", "DescribeConsumerGroupTest.testDescribeWithConsumersWithoutAssignedPartitions", "DescribeConsumerGroupTest.testDescribeOffsetsWithConsumersWithoutAssignedPartitions", "DescribeConsumerGroupTest.testDescribeMembersWithConsumersWithoutAssignedPartitions", "DescribeConsumerGroupTest.testDescribeStateWithConsumersWithoutAssignedPartitions", "DescribeConsumerGroupTest.testDescribeWithMultiPartitionTopicAndMultipleConsumers", "DescribeConsumerGroupTest.testDescribeOffsetsWithMultiPartitionTopicAndMultipleConsumers", "DescribeConsumerGroupTest.testDescribeMembersWithMultiPartitionTopicAndMultipleConsumers", "DescribeConsumerGroupTest.testDescribeStateWithMultiPartitionTopicAndMultipleConsumers", "DescribeConsumerGroupTest.testDescribeSimpleConsumerGroup", "DescribeConsumerGroupTest.testDescribeGroupWithShortInitializationTimeout", "DescribeConsumerGroupTest.testDescribeGroupOffsetsWithShortInitializationTimeout", "DescribeConsumerGroupTest.testDescribeGroupMembersWithShortInitializationTimeout", "DescribeConsumerGroupTest.testDescribeGroupStateWithShortInitializationTimeout", "DescribeConsumerGroupTest.testDescribeWithUnrecognizedNewConsumerOption", "DescribeConsumerGroupTest.testDescribeNonOffsetCommitGroup", "DeleteTopicTest.testDeleteTopicWithAllAliveReplicas", "DeleteTopicTest.testResumeDeleteTopicWithRecoveredFollower", "DeleteTopicTest.testResumeDeleteTopicOnControllerFailover", "DeleteTopicTest.testPartitionReassignmentDuringDeleteTopic", "DeleteTopicTest.testIncreasePartitionCountDuringDeleteTopic", "DeleteTopicTest.testDeleteTopicDuringAddPartition", "DeleteTopicTest.testAddPartitionDuringDeleteTopic", "DeleteTopicTest.testRecreateTopicAfterDeletion", "DeleteTopicTest.testDeleteNonExistingTopic", "DeleteTopicTest.testDeleteTopicWithCleaner", "DeleteTopicTest.testDeleteTopicAlreadyMarkedAsDeleted", "DeleteTopicTest.testDisableDeleteTopic", "DeleteTopicTest.testDeletingPartiallyDeletedTopic", "UserScramCredentialsCommandTest.testUserScramCredentialsRequests", "UserScramCredentialsCommandTest.testAlterWithEmptyPassword", "UserScramCredentialsCommandTest.testDescribeUnknownUser", "MetadataQuorumCommandTest(cluster:.testPropertiesFileDoesNotExists", "MetadataQuorumCommandTest(cluster:.testDescribeOptions", "ReassignPartitionsUnitTest.testCompareTopicPartitions", "ReassignPartitionsUnitTest.testCompareTopicPartitionReplicas", "ReassignPartitionsUnitTest.testPartitionReassignStatesToString", "ReassignPartitionsUnitTest.testFindPartitionReassignmentStates", "ReassignPartitionsUnitTest.testFindLogDirMoveStates", "ReassignPartitionsUnitTest.testReplicaMoveStatesToString", "ReassignPartitionsUnitTest.testGetReplicaAssignments", "ReassignPartitionsUnitTest.testGetBrokerRackInformation", "ReassignPartitionsUnitTest.testParseGenerateAssignmentArgs", "ReassignPartitionsUnitTest.testGenerateAssignmentFailsWithoutEnoughReplicas", "ReassignPartitionsUnitTest.testGenerateAssignmentWithInvalidPartitionsFails", "ReassignPartitionsUnitTest.testGenerateAssignmentWithInconsistentRacks", "ReassignPartitionsUnitTest.testGenerateAssignmentWithFewerBrokers", "ReassignPartitionsUnitTest.testCurrentPartitionReplicaAssignmentToString", "ReassignPartitionsUnitTest.testMoveMap", "ReassignPartitionsUnitTest.testParseExecuteAssignmentArgs", "ReassignPartitionsUnitTest.testExecuteWithInvalidPartitionsFails", "ReassignPartitionsUnitTest.testExecuteWithInvalidBrokerIdFails", "ReassignPartitionsUnitTest.testModifyBrokerInterBrokerThrottle", "ReassignPartitionsUnitTest.testModifyLogDirThrottle", "ReassignPartitionsUnitTest.testCurReassignmentsToString", "ReassignPartitionsUnitTest.testModifyTopicThrottles", "ReassignPartitionsUnitTest.testAlterReplicaLogDirs", "ReassignPartitionsUnitTest.testPropagateInvalidJsonError", "TopicCommandTest.testIsNotUnderReplicatedWhenAdding", "TopicCommandTest.testAlterWithUnspecifiedPartitionCount", "TopicCommandTest.testConfigOptWithBootstrapServers", "TopicCommandTest.testCreateWithPartitionCountWithoutReplicationFactorShouldSucceed", "TopicCommandTest.testCreateWithReplicationFactorWithoutPartitionCountShouldSucceed", "TopicCommandTest.testCreateWithAssignmentAndPartitionCount", "TopicCommandTest.testCreateWithAssignmentAndReplicationFactor", "TopicCommandTest.testCreateWithoutPartitionCountAndReplicationFactorShouldSucceed", "TopicCommandTest.testDescribeShouldSucceed", "TopicCommandTest.testParseAssignmentDuplicateEntries", "TopicCommandTest.testParseAssignmentPartitionsOfDifferentSize", "TopicCommandTest.testParseAssignment", "TopicCommandTest.testCreateTopicDoesNotRetryThrottlingQuotaExceededException", "TopicCommandTest.testDeleteTopicDoesNotRetryThrottlingQuotaExceededException", "TopicCommandTest.testCreatePartitionsDoesNotRetryThrottlingQuotaExceededException", "ConfigCommandTest.shouldExitWithNonZeroStatusOnArgError", "ConfigCommandTest.shouldExitWithNonZeroStatusOnZkCommandWithTopicsEntity", "ConfigCommandTest.shouldExitWithNonZeroStatusOnZkCommandWithClientsEntity", "ConfigCommandTest.shouldExitWithNonZeroStatusOnZkCommandWithIpsEntity", "ConfigCommandTest.shouldExitWithNonZeroStatusAlterUserQuotaWithoutEntityName", "ConfigCommandTest.shouldExitWithNonZeroStatusOnBrokerCommandError", "ConfigCommandTest.shouldExitWithNonZeroStatusOnBrokerCommandWithZkTlsConfigFile", "ConfigCommandTest.shouldFailParseArgumentsForClientsEntityTypeUsingZookeeper", "ConfigCommandTest.shouldParseArgumentsForClientsEntityType", "ConfigCommandTest.shouldParseArgumentsForUsersEntityTypeUsingZookeeper", "ConfigCommandTest.shouldParseArgumentsForUsersEntityType", "ConfigCommandTest.shouldFailParseArgumentsForTopicsEntityTypeUsingZookeeper", "ConfigCommandTest.shouldParseArgumentsForTopicsEntityType", "ConfigCommandTest.shouldParseArgumentsForBrokersEntityTypeUsingZookeeper", "ConfigCommandTest.shouldParseArgumentsForBrokersEntityType", "ConfigCommandTest.shouldParseArgumentsForBrokerLoggersEntityType", "ConfigCommandTest.shouldFailParseArgumentsForIpEntityTypeUsingZookeeper", "ConfigCommandTest.shouldParseArgumentsForIpEntityType", "ConfigCommandTest.shouldFailIfAddAndAddFile", "ConfigCommandTest.testParseConfigsToBeAddedForAddConfigFile", "ConfigCommandTest.testOptionEntityTypeNamesUsingZookeeper", "ConfigCommandTest.testOptionEntityTypeNames", "ConfigCommandTest.shouldFailIfUnrecognisedEntityTypeUsingZookeeper", "ConfigCommandTest.shouldFailIfUnrecognisedEntityType", "ConfigCommandTest.shouldFailIfBrokerEntityTypeIsNotAnIntegerUsingZookeeper", "ConfigCommandTest.shouldFailIfBrokerEntityTypeIsNotAnInteger", "ConfigCommandTest.shouldFailIfShortBrokerEntityTypeIsNotAnIntegerUsingZookeeper", "ConfigCommandTest.shouldFailIfShortBrokerEntityTypeIsNotAnInteger", "ConfigCommandTest.shouldFailIfMixedEntityTypeFlagsUsingZookeeper", "ConfigCommandTest.shouldFailIfMixedEntityTypeFlags", "ConfigCommandTest.shouldFailIfInvalidHost", "ConfigCommandTest.shouldFailIfInvalidHostUsingZookeeper", "ConfigCommandTest.shouldFailIfUnresolvableHost", "ConfigCommandTest.shouldFailIfUnresolvableHostUsingZookeeper", "ConfigCommandTest.shouldAddClientConfigUsingZookeeper", "ConfigCommandTest.shouldAddIpConfigsUsingZookeeper", "ConfigCommandTest.shouldNotAlterNonQuotaIpConfigsUsingBootstrapServer", "ConfigCommandTest.testDescribeIpConfigs", "ConfigCommandTest.testAlterIpConfig", "ConfigCommandTest.shouldAddClientConfig", "ConfigCommandTest.shouldNotAlterNonQuotaNonScramUserOrClientConfigUsingBootstrapServer", "ConfigCommandTest.shouldNotAlterScramClientConfigUsingBootstrapServer", "ConfigCommandTest.shouldNotCreateUserScramCredentialConfigWithUnderMinimumIterationsUsingBootstrapServer", "ConfigCommandTest.shouldNotAlterUserScramCredentialAndClientQuotaConfigsSimultaneouslyUsingBootstrapServer", "ConfigCommandTest.shouldNotDescribeUserScramCredentialsWithEntityDefaultUsingBootstrapServer", "ConfigCommandTest.shouldAddTopicConfigUsingZookeeper", "ConfigCommandTest.shouldAlterTopicConfig", "ConfigCommandTest.shouldAlterTopicConfigFile", "ConfigCommandTest.shouldDescribeConfigSynonyms", "ConfigCommandTest.shouldNotAllowAddBrokerQuotaConfigWhileBrokerUpUsingZookeeper", "ConfigCommandTest.shouldNotAllowDescribeBrokerWhileBrokerUpUsingZookeeper", "ConfigCommandTest.shouldSupportDescribeBrokerBeforeBrokerUpUsingZookeeper", "ConfigCommandTest.shouldAddBrokerLoggerConfig", "ConfigCommandTest.testNoSpecifiedEntityOptionWithDescribeBrokersInZKIsAllowed", "ConfigCommandTest.testNoSpecifiedEntityOptionWithDescribeBrokersInBootstrapServerIsAllowed", "ConfigCommandTest.testDescribeAllBrokerConfig", "ConfigCommandTest.testDescribeAllTopicConfig", "ConfigCommandTest.testDescribeAllBrokerConfigBootstrapServerRequired", "ConfigCommandTest.testEntityDefaultOptionWithDescribeBrokerLoggerIsNotAllowed", "ConfigCommandTest.testEntityDefaultOptionWithAlterBrokerLoggerIsNotAllowed", "ConfigCommandTest.shouldRaiseInvalidConfigurationExceptionWhenAddingInvalidBrokerLoggerConfig", "ConfigCommandTest.shouldAddDefaultBrokerDynamicConfig", "ConfigCommandTest.shouldAddBrokerDynamicConfig", "ConfigCommandTest.shouldDescribeConfigBrokerWithoutEntityName", "ConfigCommandTest.shouldSupportCommaSeparatedValuesUsingZookeeper", "ConfigCommandTest.shouldNotUpdateBrokerConfigIfMalformedEntityNameUsingZookeeper", "ConfigCommandTest.shouldNotUpdateBrokerConfigIfMalformedEntityName", "ConfigCommandTest.shouldNotUpdateBrokerConfigIfMalformedConfigUsingZookeeper", "ConfigCommandTest.shouldNotUpdateBrokerConfigIfMalformedConfig", "ConfigCommandTest.shouldNotUpdateBrokerConfigIfMalformedBracketConfigUsingZookeeper", "ConfigCommandTest.shouldNotUpdateBrokerConfigIfMalformedBracketConfig", "ConfigCommandTest.shouldNotUpdateConfigIfNonExistingConfigIsDeletedUsingZookeeper", "ConfigCommandTest.shouldNotUpdateConfigIfNonExistingConfigIsDeleted", "ConfigCommandTest.shouldNotDeleteBrokerConfigWhileBrokerUpUsingZookeeper", "ConfigCommandTest.testScramCredentials", "ConfigCommandTest.testQuotaConfigEntityUsingZookeeperNotAllowed", "ConfigCommandTest.testQuotaConfigEntity", "ConfigCommandTest.testUserClientQuotaOptsUsingZookeeperNotAllowed", "ConfigCommandTest.testUserClientQuotaOpts", "ConfigCommandTest.testQuotaDescribeEntities", "AclCommandTest.testAclCliWithAuthorizer", "AclCommandTest.testAclCliWithAdminAPI", "AclCommandTest.testProducerConsumerCliWithAuthorizer", "AclCommandTest.testProducerConsumerCliWithAdminAPI", "AclCommandTest.testAclCliWithClientId", "AclCommandTest.testAclsOnPrefixedResourcesWithAuthorizer", "AclCommandTest.testAclsOnPrefixedResourcesWithAdminAPI", "AclCommandTest.testInvalidAuthorizerProperty", "AclCommandTest.testPatternTypes", "DelegationTokenCommandTest.testDelegationTokenRequests", "ResetConsumerGroupOffsetTest.testResetOffsetsNotExistingGroup", "ResetConsumerGroupOffsetTest.testResetOffsetsExistingTopic", "ResetConsumerGroupOffsetTest.testResetOffsetsExistingTopicSelectedGroups", "ResetConsumerGroupOffsetTest.testResetOffsetsExistingTopicAllGroups", "ResetConsumerGroupOffsetTest.testResetOffsetsAllTopicsAllGroups", "ResetConsumerGroupOffsetTest.testResetOffsetsToLocalDateTime", "ResetConsumerGroupOffsetTest.testResetOffsetsToZonedDateTime", "ResetConsumerGroupOffsetTest.testResetOffsetsByDuration", "ResetConsumerGroupOffsetTest.testResetOffsetsByDurationToEarliest", "ResetConsumerGroupOffsetTest.testResetOffsetsByDurationFallbackToLatestWhenNoRecords", "ResetConsumerGroupOffsetTest.testResetOffsetsToEarliest", "ResetConsumerGroupOffsetTest.testResetOffsetsToLatest", "ResetConsumerGroupOffsetTest.testResetOffsetsToCurrentOffset", "ResetConsumerGroupOffsetTest.testResetOffsetsToSpecificOffset", "ResetConsumerGroupOffsetTest.testResetOffsetsShiftPlus", "ResetConsumerGroupOffsetTest.testResetOffsetsShiftMinus", "ResetConsumerGroupOffsetTest.testResetOffsetsShiftByLowerThanEarliest", "ResetConsumerGroupOffsetTest.testResetOffsetsShiftByHigherThanLatest", "ResetConsumerGroupOffsetTest.testResetOffsetsToEarliestOnOneTopic", "ResetConsumerGroupOffsetTest.testResetOffsetsToEarliestOnOneTopicAndPartition", "ResetConsumerGroupOffsetTest.testResetOffsetsToEarliestOnTopics", "ResetConsumerGroupOffsetTest.testResetOffsetsToEarliestOnTopicsAndPartitions", "ResetConsumerGroupOffsetTest.testResetOffsetsExportImportPlanSingleGroupArg", "ResetConsumerGroupOffsetTest.testResetOffsetsExportImportPlan", "ResetConsumerGroupOffsetTest.testResetWithUnrecognizedNewConsumerOption", "ReassignPartitionsCommandArgsTest.shouldCorrectlyParseValidMinimumGenerateOptions", "ReassignPartitionsCommandArgsTest.shouldCorrectlyParseValidMinimumExecuteOptions", "ReassignPartitionsCommandArgsTest.shouldCorrectlyParseValidMinimumVerifyOptions", "ReassignPartitionsCommandArgsTest.shouldAllowThrottleOptionOnExecute", "ReassignPartitionsCommandArgsTest.shouldUseDefaultsIfEnabled", "ReassignPartitionsCommandArgsTest.testList", "ReassignPartitionsCommandArgsTest.testCancelWithPreserveThrottlesOption", "ReassignPartitionsCommandArgsTest.shouldFailIfNoArgs", "ReassignPartitionsCommandArgsTest.shouldFailIfBlankArg", "ReassignPartitionsCommandArgsTest.shouldFailIfMultipleActions", "ReassignPartitionsCommandArgsTest.shouldNotAllowExecuteWithTopicsOption", "ReassignPartitionsCommandArgsTest.shouldNotAllowExecuteWithBrokerList", "ReassignPartitionsCommandArgsTest.shouldNotAllowExecuteWithoutReassignmentOption", "ReassignPartitionsCommandArgsTest.testMissingBootstrapServerArgumentForExecute", "ReassignPartitionsCommandArgsTest.shouldNotAllowGenerateWithoutBrokersAndTopicsOptions", "ReassignPartitionsCommandArgsTest.shouldNotAllowGenerateWithoutBrokersOption", "ReassignPartitionsCommandArgsTest.shouldNotAllowGenerateWithoutTopicsOption", "ReassignPartitionsCommandArgsTest.shouldNotAllowGenerateWithThrottleOption", "ReassignPartitionsCommandArgsTest.shouldNotAllowGenerateWithReassignmentOption", "ReassignPartitionsCommandArgsTest.shouldPrintHelpTextIfHelpArg", "ReassignPartitionsCommandArgsTest.shouldNotAllowVerifyWithoutReassignmentOption", "ReassignPartitionsCommandArgsTest.shouldNotAllowBrokersListWithVerifyOption", "ReassignPartitionsCommandArgsTest.shouldNotAllowThrottleWithVerifyOption", "ReassignPartitionsCommandArgsTest.shouldNotAllowTopicsOptionWithVerify", "ReassignPartitionsCommandArgsTest.shouldNotAllowCancelWithoutBootstrapServerOption", "ReassignPartitionsCommandArgsTest.shouldNotAllowCancelWithoutReassignmentJsonFile", "ConsumerGroupServiceTest.testAdminRequestsForDescribeOffsets", "ConsumerGroupServiceTest.testAdminRequestsForDescribeNegativeOffsets", "ConsumerGroupServiceTest.testAdminRequestsForResetOffsets", "FeatureCommandTest.testLevelToString", "FeatureCommandTest.testMetadataVersionsToString", "FeatureCommandTest.testdowngradeType", "FeatureCommandTest.testParseNameAndLevel", "FeatureCommandTest.testHandleDescribe", "FeatureCommandTest.testHandleUpgrade", "FeatureCommandTest.testHandleUpgradeDryRun", "FeatureCommandTest.testHandleDowngrade", "FeatureCommandTest.testHandleDowngradeDryRun", "FeatureCommandTest.testHandleDisable", "FeatureCommandTest.testHandleDisableDryRun", "DeleteOffsetsConsumerGroupCommandIntegrationTest.testDeleteOffsetsNonExistingGroup", "DeleteOffsetsConsumerGroupCommandIntegrationTest.testDeleteOffsetsOfStableConsumerGroupWithTopicPartition", "DeleteOffsetsConsumerGroupCommandIntegrationTest.testDeleteOffsetsOfStableConsumerGroupWithTopicOnly", "DeleteOffsetsConsumerGroupCommandIntegrationTest.testDeleteOffsetsOfStableConsumerGroupWithUnknownTopicPartition", "DeleteOffsetsConsumerGroupCommandIntegrationTest.testDeleteOffsetsOfStableConsumerGroupWithUnknownTopicOnly", "DeleteOffsetsConsumerGroupCommandIntegrationTest.testDeleteOffsetsOfEmptyConsumerGroupWithTopicPartition", "DeleteOffsetsConsumerGroupCommandIntegrationTest.testDeleteOffsetsOfEmptyConsumerGroupWithTopicOnly", "DeleteOffsetsConsumerGroupCommandIntegrationTest.testDeleteOffsetsOfEmptyConsumerGroupWithUnknownTopicPartition", "DeleteOffsetsConsumerGroupCommandIntegrationTest.testDeleteOffsetsOfEmptyConsumerGroupWithUnknownTopicOnly", "LogDirsCommandTest.checkLogDirsCommandOutput", "DeleteConsumerGroupsTest.testDeleteWithTopicOption", "DeleteConsumerGroupsTest.testDeleteCmdNonExistingGroup", "DeleteConsumerGroupsTest.testDeleteNonExistingGroup", "DeleteConsumerGroupsTest.testDeleteCmdNonEmptyGroup", "DeleteConsumerGroupsTest.testDeleteNonEmptyGroup", "DeleteConsumerGroupsTest.testDeleteCmdEmptyGroup", "DeleteConsumerGroupsTest.testDeleteCmdAllGroups", "DeleteConsumerGroupsTest.testDeleteEmptyGroup", "DeleteConsumerGroupsTest.testDeleteCmdWithMixOfSuccessAndError", "DeleteConsumerGroupsTest.testDeleteWithMixOfSuccessAndError", "DeleteConsumerGroupsTest.testDeleteWithUnrecognizedNewConsumerOption", "LeaderElectionTest.testLeaderElectionAndEpoch", "LeaderElectionTest.testLeaderElectionWithStaleControllerEpoch", "ServerGenerateBrokerIdTest.testAutoGenerateBrokerId", "ServerGenerateBrokerIdTest.testUserConfigAndGeneratedBrokerId", "ServerGenerateBrokerIdTest.testDisableGeneratedBrokerId", "ServerGenerateBrokerIdTest.testMultipleLogDirsMetaProps", "ServerGenerateBrokerIdTest.testConsistentBrokerIdFromUserConfigAndMetaProps", "ServerGenerateBrokerIdTest.testBrokerMetadataOnIdCollision", "KafkaRaftServerTest.testSuccessfulLoadMetaProperties", "KafkaRaftServerTest.testLoadMetaPropertiesWithInconsistentNodeId", "KafkaRaftServerTest.testStartupFailsIfMetaPropertiesMissingInSomeLogDir", "KafkaRaftServerTest.testStartupFailsIfMetaLogDirIsOffline", "KafkaRaftServerTest.testStartupDoesNotFailIfDataDirIsOffline", "KafkaRaftServerTest.testStartupFailsIfUnexpectedMetadataDir", "KafkaRaftServerTest.testLoadPropertiesWithInconsistentClusterIds", "KafkaRaftServerTest.testKRaftUpdateWithIBP", "KafkaRaftServerTest.testKRaftUpdateWithoutIBP", "RequestQuotaTest.testResponseThrottleTime", "RequestQuotaTest.testResponseThrottleTimeWhenBothProduceAndRequestQuotasViolated", "RequestQuotaTest.testResponseThrottleTimeWhenBothFetchAndRequestQuotasViolated", "RequestQuotaTest.testUnthrottledClient", "RequestQuotaTest.testExemptRequestTime", "RequestQuotaTest.testUnauthorizedThrottle", "ReplicationQuotaManagerTest.shouldThrottleOnlyDefinedReplicas", "ReplicationQuotaManagerTest.shouldExceedQuotaThenReturnBackBelowBoundAsTimePasses", "ReplicationQuotaManagerTest.shouldSupportWildcardThrottledReplicas", "ClientQuotaManagerTest.testClientIdQuotaParsing", "ClientQuotaManagerTest.testUserQuotaParsing", "ClientQuotaManagerTest.testUserClientIdQuotaParsing", "ClientQuotaManagerTest.testUserQuotaParsingWithDefaultClientIdQuota", "ClientQuotaManagerTest.testUserClientQuotaParsingIdWithDefaultClientIdQuota", "ClientQuotaManagerTest.testGetMaxValueInQuotaWindowWithNonDefaultQuotaWindow", "ClientQuotaManagerTest.testSetAndRemoveDefaultUserQuota", "ClientQuotaManagerTest.testSetAndRemoveUserQuota", "ClientQuotaManagerTest.testSetAndRemoveUserClientQuota", "ClientQuotaManagerTest.testQuotaConfigPrecedence", "ClientQuotaManagerTest.testQuotaViolation", "ClientQuotaManagerTest.testExpireThrottleTimeSensor", "ClientQuotaManagerTest.testExpireQuotaSensors", "ClientQuotaManagerTest.testClientIdNotSanitized", "KafkaServerTest.testAlreadyRegisteredAdvertisedListeners", "KafkaServerTest.testCreatesProperZkConfigWhenSaslDisabled", "KafkaServerTest.testCreatesProperZkTlsConfigWhenDisabled", "KafkaServerTest.testCreatesProperZkTlsConfigWithTrueValues", "KafkaServerTest.testCreatesProperZkTlsConfigWithFalseAndListValues", "KafkaServerTest.testZkIsrManager", "KafkaServerTest.testAlterIsrManager", "AdvertiseBrokerTest.testBrokerAdvertiseListenersToZK", "AdvertiseBrokerTest.testBrokerAdvertiseListenersWithCustomNamesToZK", "IsrExpirationTest.testIsrExpirationForStuckFollowers", "IsrExpirationTest.testIsrExpirationIfNoFetchRequestMade", "IsrExpirationTest.testIsrExpirationForSlowFollowers", "IsrExpirationTest.testIsrExpirationForCaughtUpFollowers", "MockKafkaMetricsReporter.testClusterIdPresent", "ServerStartupTest.testBrokerCreatesZKChroot", "ServerStartupTest.testConflictBrokerStartupWithSamePort", "ServerStartupTest.testConflictBrokerRegistration", "ServerStartupTest.testBrokerSelfAware", "ServerStartupTest.testBrokerStateRunningAfterZK", "DescribeUserScramCredentialsRequestTest.testDescribeNothing", "DescribeUserScramCredentialsRequestTest.testDescribeWithNull", "DescribeUserScramCredentialsRequestTest.testDescribeNotController", "DescribeUserScramCredentialsRequestTest.testDescribeSameUserTwice", "DescribeUserScramCredentialsRequestTest.testUnknownUser", "DynamicConfigChangeTest.testIpHandlerUnresolvableAddress", "DynamicConfigChangeTest.shouldParseReplicationQuotaProperties", "DynamicConfigChangeTest.shouldParseWildcardReplicationQuotaProperties", "DynamicConfigChangeTest.shouldParseRegardlessOfWhitespaceAroundValues", "DynamicConfigChangeTest.shouldParseReplicationQuotaReset", "ReplicaAlterLogDirsThreadTest.shouldNotAddPartitionIfFutureLogIsNotDefined", "ReplicaAlterLogDirsThreadTest.shouldUpdateLeaderEpochAfterFencedEpochError", "ReplicaAlterLogDirsThreadTest.shouldReplaceCurrentLogDirWhenCaughtUp", "ReplicaAlterLogDirsThreadTest.issuesEpochRequestFromLocalReplica", "ReplicaAlterLogDirsThreadTest.fetchEpochsFromLeaderShouldHandleExceptionFromGetLocalReplica", "ReplicaAlterLogDirsThreadTest.shouldTruncateToReplicaOffset", "ReplicaAlterLogDirsThreadTest.shouldTruncateToEndOffsetOfLargestCommonEpoch", "ReplicaAlterLogDirsThreadTest.shouldTruncateToInitialFetchOffsetIfReplicaReturnsUndefinedOffset", "ReplicaAlterLogDirsThreadTest.shouldPollIndefinitelyIfReplicaNotAvailable", "ReplicaAlterLogDirsThreadTest.shouldFetchLeaderEpochOnFirstFetchOnly", "ReplicaAlterLogDirsThreadTest.shouldFetchOneReplicaAtATime", "ReplicaAlterLogDirsThreadTest.shouldFetchNonDelayedAndNonTruncatingReplicas", "FetchRequestWithLegacyMessageFormatTest.testFetchRequestV2WithOversizedMessage", "FetchRequestMaxBytesTest.testConsumeMultipleRecords", "HighwatermarkPersistenceTest.testHighWatermarkPersistenceSinglePartition", "HighwatermarkPersistenceTest.testHighWatermarkPersistenceMultiplePartitions", "ReplicationQuotasTest.shouldBootstrapTwoBrokersWithLeaderThrottle", "ReplicationQuotasTest.shouldBootstrapTwoBrokersWithFollowerThrottle", "ReplicationQuotasTest.shouldThrottleOldSegments", "FinalizedFeatureCacheTest.testEmpty", "FinalizedFeatureCacheTest.testUpdateOrThrowFailedDueToInvalidEpoch", "FinalizedFeatureCacheTest.testUpdateOrThrowFailedDueToInvalidFeatures", "FinalizedFeatureCacheTest.testUpdateOrThrowSuccess", "FinalizedFeatureCacheTest.testClear", "MetadataCacheTest.testIsBrokerFenced", "MetadataCacheTest.testIsBrokerInControlledShutdown", "KafkaApisTest.testDescribeConfigsWithAuthorizer", "KafkaApisTest.testEnvelopeRequestHandlingAsController", "KafkaApisTest.testEnvelopeRequestWithAlterConfigUnhandledError", "KafkaApisTest.testInvalidEnvelopeRequestWithNonForwardableAPI", "KafkaApisTest.testEnvelopeRequestWithNotFromPrivilegedListener", "KafkaApisTest.testEnvelopeRequestNotAuthorized", "KafkaApisTest.testEnvelopeRequestNotControllerHandling", "KafkaApisTest.testAlterConfigsWithAuthorizer", "KafkaApisTest.testElectLeadersForwarding", "KafkaApisTest.testDescribeQuorumNotAllowedForZkClusters", "KafkaApisTest.testDescribeQuorumForwardedForKRaftClusters", "KafkaApisTest.testIncrementalAlterConfigsWithAuthorizer", "KafkaApisTest.testAlterClientQuotasWithAuthorizer", "KafkaApisTest.testAlterClientQuotasWithForwarding", "KafkaApisTest.testCreateTopicsWithAuthorizer", "KafkaApisTest.testCreateTopicsWithForwarding", "KafkaApisTest.testCreatePartitionsAuthorization", "KafkaApisTest.testCreateAclWithForwarding", "KafkaApisTest.testDeleteAclWithForwarding", "KafkaApisTest.testCreateDelegationTokenWithForwarding", "KafkaApisTest.testRenewDelegationTokenWithForwarding", "KafkaApisTest.testExpireDelegationTokenWithForwarding", "KafkaApisTest.testAlterPartitionReassignmentsWithForwarding", "KafkaApisTest.testCreatePartitionsWithForwarding", "KafkaApisTest.testUpdateFeaturesWithForwarding", "KafkaApisTest.testDeleteTopicsWithForwarding", "KafkaApisTest.testAlterScramWithForwarding", "KafkaApisTest.testFindCoordinatorAutoTopicCreationForOffsetTopic", "KafkaApisTest.testFindCoordinatorAutoTopicCreationForTxnTopic", "KafkaApisTest.testFindCoordinatorNotEnoughBrokersForOffsetTopic", "KafkaApisTest.testFindCoordinatorNotEnoughBrokersForTxnTopic", "KafkaApisTest.testOldFindCoordinatorAutoTopicCreationForOffsetTopic", "KafkaApisTest.testOldFindCoordinatorAutoTopicCreationForTxnTopic", "KafkaApisTest.testOldFindCoordinatorNotEnoughBrokersForOffsetTopic", "KafkaApisTest.testOldFindCoordinatorNotEnoughBrokersForTxnTopic", "KafkaApisTest.testMetadataAutoTopicCreationForOffsetTopic", "KafkaApisTest.testMetadataAutoTopicCreationForTxnTopic", "KafkaApisTest.testMetadataAutoTopicCreationForNonInternalTopic", "KafkaApisTest.testMetadataAutoTopicCreationDisabledForOffsetTopic", "KafkaApisTest.testMetadataAutoTopicCreationDisabledForTxnTopic", "KafkaApisTest.testMetadataAutoTopicCreationDisabledForNonInternalTopic", "KafkaApisTest.testMetadataAutoCreationDisabledForNonInternal", "KafkaApisTest.testInvalidMetadataRequestReturnsError", "KafkaApisTest.testOffsetCommitWithInvalidPartition", "KafkaApisTest.testTxnOffsetCommitWithInvalidPartition", "KafkaApisTest.shouldReplaceCoordinatorNotAvailableWithLoadInProcessInTxnOffsetCommitWithOlderClient", "KafkaApisTest.shouldReplaceProducerFencedWithInvalidProducerEpochInInitProducerIdWithOlderClient", "KafkaApisTest.shouldReplaceProducerFencedWithInvalidProducerEpochInAddOffsetToTxnWithOlderClient", "KafkaApisTest.shouldReplaceProducerFencedWithInvalidProducerEpochInAddPartitionToTxnWithOlderClient", "KafkaApisTest.shouldReplaceProducerFencedWithInvalidProducerEpochInEndTxnWithOlderClient", "KafkaApisTest.shouldReplaceProducerFencedWithInvalidProducerEpochInProduceResponse", "KafkaApisTest.testAddPartitionsToTxnWithInvalidPartition", "KafkaApisTest.shouldThrowUnsupportedVersionExceptionOnHandleAddOffsetToTxnRequestWhenInterBrokerProtocolNotSupported", "KafkaApisTest.shouldThrowUnsupportedVersionExceptionOnHandleAddPartitionsToTxnRequestWhenInterBrokerProtocolNotSupported", "KafkaApisTest.shouldThrowUnsupportedVersionExceptionOnHandleTxnOffsetCommitRequestWhenInterBrokerProtocolNotSupported", "KafkaApisTest.shouldThrowUnsupportedVersionExceptionOnHandleEndTxnRequestWhenInterBrokerProtocolNotSupported", "KafkaApisTest.shouldThrowUnsupportedVersionExceptionOnHandleWriteTxnMarkersRequestWhenInterBrokerProtocolNotSupported", "KafkaApisTest.shouldRespondWithUnsupportedForMessageFormatOnHandleWriteTxnMarkersWhenMagicLowerThanRequired", "KafkaApisTest.shouldRespondWithUnknownTopicWhenPartitionIsNotHosted", "KafkaApisTest.shouldRespondWithUnsupportedMessageFormatForBadPartitionAndNoErrorsForGoodPartition", "KafkaApisTest.shouldResignCoordinatorsIfStopReplicaReceivedWithDeleteFlagAndLeaderEpoch", "KafkaApisTest.shouldResignCoordinatorsIfStopReplicaReceivedWithDeleteFlagAndDeleteSentinel", "KafkaApisTest.shouldResignCoordinatorsIfStopReplicaReceivedWithDeleteFlagAndNoEpochSentinel", "KafkaApisTest.shouldNotResignCoordinatorsIfStopReplicaReceivedWithoutDeleteFlag", "KafkaApisTest.shouldRespondWithUnknownTopicOrPartitionForBadPartitionAndNoErrorsForGoodPartition", "KafkaApisTest.shouldAppendToLogOnWriteTxnMarkersWhenCorrectMagicVersion", "KafkaApisTest.testLeaderReplicaIfLocalRaisesFencedLeaderEpoch", "KafkaApisTest.testLeaderReplicaIfLocalRaisesUnknownLeaderEpoch", "KafkaApisTest.testLeaderReplicaIfLocalRaisesNotLeaderOrFollower", "KafkaApisTest.testLeaderReplicaIfLocalRaisesUnknownTopicOrPartition", "KafkaApisTest.testDescribeGroups", "KafkaApisTest.testOffsetDelete", "KafkaApisTest.testOffsetDeleteWithInvalidPartition", "KafkaApisTest.testOffsetDeleteWithInvalidGroup", "KafkaApisTest.testReadUncommittedConsumerListOffsetLatest", "KafkaApisTest.testReadCommittedConsumerListOffsetLatest", "KafkaApisTest.testMetadataRequestOnSharedListenerWithInconsistentListenersAcrossBrokers", "KafkaApisTest.testMetadataRequestOnDistinctListenerWithInconsistentListenersAcrossBrokers", "KafkaApisTest.testGetAllTopicMetadataShouldNotCreateTopicOrReturnUnknownTopicPartition", "KafkaApisTest.testUnauthorizedTopicMetadataRequest", "KafkaApisTest.testFetchRequestV9WithNoLogConfig", "KafkaApisTest.testJoinGroupProtocolsOrder", "KafkaApisTest.testJoinGroupWhenAnErrorOccurs", "KafkaApisTest.testJoinGroupProtocolType", "KafkaApisTest.testSyncGroupProtocolTypeAndName", "KafkaApisTest.testSyncGroupProtocolTypeAndNameAreMandatorySinceV5", "KafkaApisTest.rejectJoinGroupRequestWhenStaticMembershipNotSupported", "KafkaApisTest.rejectSyncGroupRequestWhenStaticMembershipNotSupported", "KafkaApisTest.rejectHeartbeatRequestWhenStaticMembershipNotSupported", "KafkaApisTest.rejectOffsetCommitRequestWhenStaticMembershipNotSupported", "KafkaApisTest.testMultipleLeaveGroup", "KafkaApisTest.testSingleLeaveGroup", "KafkaApisTest.testReassignmentAndReplicationBytesOutRateWhenReassigning", "KafkaApisTest.testReassignmentAndReplicationBytesOutRateWhenNotReassigning", "KafkaApisTest.rejectInitProducerIdWhenIdButNotEpochProvided", "KafkaApisTest.rejectInitProducerIdWhenEpochButNotIdProvided", "KafkaApisTest.testUpdateMetadataRequestWithCurrentBrokerEpoch", "KafkaApisTest.testUpdateMetadataRequestWithNewerBrokerEpochIsValid", "KafkaApisTest.testUpdateMetadataRequestWithStaleBrokerEpochIsRejected", "KafkaApisTest.testLeaderAndIsrRequestWithCurrentBrokerEpoch", "KafkaApisTest.testLeaderAndIsrRequestWithNewerBrokerEpochIsValid", "KafkaApisTest.testLeaderAndIsrRequestWithStaleBrokerEpochIsRejected", "KafkaApisTest.testStopReplicaRequestWithCurrentBrokerEpoch", "KafkaApisTest.testStopReplicaRequestWithNewerBrokerEpochIsValid", "KafkaApisTest.testStopReplicaRequestWithStaleBrokerEpochIsRejected", "KafkaApisTest.testListGroupsRequest", "KafkaApisTest.testListGroupsRequestWithState", "KafkaApisTest.testDescribeClusterRequest", "KafkaApisTest.testAlterReplicaLogDirs", "KafkaApisTest.testSizeOfThrottledPartitions", "KafkaApisTest.testDescribeProducers", "KafkaApisTest.testDescribeTransactions", "KafkaApisTest.testDescribeTransactionsFiltersUnauthorizedTopics", "KafkaApisTest.testListTransactionsErrorResponse", "KafkaApisTest.testListTransactionsAuthorization", "KafkaApisTest.testDeleteTopicsByIdAuthorization", "KafkaApisTest.testRaftShouldNeverHandleLeaderAndIsrRequest", "KafkaApisTest.testRaftShouldNeverHandleStopReplicaRequest", "KafkaApisTest.testRaftShouldNeverHandleUpdateMetadataRequest", "KafkaApisTest.testRaftShouldNeverHandleControlledShutdownRequest", "KafkaApisTest.testRaftShouldNeverHandleAlterPartitionRequest", "KafkaApisTest.testRaftShouldNeverHandleEnvelope", "KafkaApisTest.testRaftShouldAlwaysForwardCreateTopicsRequest", "KafkaApisTest.testRaftShouldAlwaysForwardCreatePartitionsRequest", "KafkaApisTest.testRaftShouldAlwaysForwardDeleteTopicsRequest", "KafkaApisTest.testRaftShouldAlwaysForwardCreateAcls", "KafkaApisTest.testRaftShouldAlwaysForwardDeleteAcls", "KafkaApisTest.testEmptyLegacyAlterConfigsRequestWithKRaft", "KafkaApisTest.testInvalidLegacyAlterConfigsRequestWithKRaft", "KafkaApisTest.testRaftShouldAlwaysForwardAlterPartitionReassignmentsRequest", "KafkaApisTest.testEmptyIncrementalAlterConfigsRequestWithKRaft", "KafkaApisTest.testLog4jIncrementalAlterConfigsRequestWithKRaft", "KafkaApisTest.testRaftShouldAlwaysForwardCreateTokenRequest", "KafkaApisTest.testRaftShouldAlwaysForwardRenewTokenRequest", "KafkaApisTest.testRaftShouldAlwaysForwardExpireTokenRequest", "KafkaApisTest.testRaftShouldAlwaysForwardAlterClientQuotasRequest", "KafkaApisTest.testRaftShouldAlwaysForwardAlterUserScramCredentialsRequest", "KafkaApisTest.testRaftShouldAlwaysForwardUpdateFeatures", "KafkaApisTest.testRaftShouldAlwaysForwardElectLeaders", "KafkaApisTest.testRaftShouldAlwaysForwardListPartitionReassignments", "ServerMetricsTest.testMetricsConfig", "ApiVersionManagerTest.testControllerApiIntersection", "ApiVersionManagerTest.testEnvelopeDisabledForKRaftBroker", "ApiVersionManagerTest.testEnvelopeEnabledWhenForwardingManagerPresent", "ApiVersionManagerTest.testEnvelopeDisabledWhenForwardingManagerEmpty", "BrokerFeaturesTest.testEmpty", "BrokerFeaturesTest.testIncompatibilitiesDueToAbsentFeature", "BrokerFeaturesTest.testIncompatibilitiesDueToIncompatibleFeature", "BrokerFeaturesTest.testCompatibleFeatures", "BrokerFeaturesTest.testDefaultFinalizedFeatures", "TopicIdWithOldInterBrokerProtocolTest.testMetadataTopicIdsWithOldIBP", "TopicIdWithOldInterBrokerProtocolTest.testFetchTopicIdsWithOldIBPWrongFetchVersion", "TopicIdWithOldInterBrokerProtocolTest.testFetchTopicIdsWithOldIBPCorrectFetchVersion", "TopicIdWithOldInterBrokerProtocolTest.testDeleteTopicsWithOldIBP", "TopicIdWithOldInterBrokerProtocolTest.testDeleteTopicsWithOldIBPUsingIDs", "DescribeUserScramCredentialsRequestNotAuthorizedTest.testDescribeNotAuthorized", "OffsetsForLeaderEpochRequestTest.testOffsetsForLeaderEpochErrorCodes", "OffsetsForLeaderEpochRequestTest.testCurrentEpochValidation", "AlterUserScramCredentialsRequestNotAuthorizedTest.testAlterNothingNotAuthorized", "AlterUserScramCredentialsRequestNotAuthorizedTest.testAlterSomethingNotAuthorized", "StopReplicaRequestTest.testStopReplicaRequest", "UpdateFeaturesTest.testShouldFailRequestIfNotController", "UpdateFeaturesTest.testShouldFailRequestWhenDowngradeFlagIsNotSetDuringDowngrade", "UpdateFeaturesTest.testShouldFailRequestWhenDowngradeToHigherVersionLevelIsAttempted", "UpdateFeaturesTest.testShouldFailRequestInServerWhenDowngradeFlagIsNotSetDuringDeletion", "UpdateFeaturesTest.testShouldFailRequestDuringDeletionOfNonExistingFeature", "UpdateFeaturesTest.testShouldFailRequestWhenUpgradingToSameVersionLevel", "UpdateFeaturesTest.testShouldFailRequestDuringBrokerMaxVersionLevelIncompatibilityForExistingFinalizedFeature", "UpdateFeaturesTest.testShouldFailRequestDuringBrokerMaxVersionLevelIncompatibilityWithNoExistingFinalizedFeature", "UpdateFeaturesTest.testSuccessfulFeatureUpgradeAndWithNoExistingFinalizedFeatures", "UpdateFeaturesTest.testSuccessfulFeatureUpgradeAndDowngrade", "UpdateFeaturesTest.testPartialSuccessDuringValidFeatureUpgradeAndInvalidDowngrade", "UpdateFeaturesTest.testPartialSuccessDuringInvalidFeatureUpgradeAndValidDowngrade", "DelegationTokenRequestsTest.testDelegationTokenRequests", "ServerGenerateClusterIdTest.testAutoGenerateClusterId", "ServerGenerateClusterIdTest.testAutoGenerateClusterIdForKafkaClusterSequential", "ServerGenerateClusterIdTest.testAutoGenerateClusterIdForKafkaClusterParallel", "ServerGenerateClusterIdTest.testConsistentClusterIdFromZookeeperAndFromMetaProp", "ServerGenerateClusterIdTest.testInconsistentClusterIdFromZookeeperAndFromMetaProp", "ServerGenerateClusterIdTest.testInconsistentBrokerMetadataBetweenMultipleLogDirs", "LogDirFailureTest.testProduceErrorFromFailureOnLogRoll", "LogDirFailureTest.testIOExceptionDuringLogRoll", "LogDirFailureTest.brokerWithOldInterBrokerProtocolShouldHaltOnLogDirFailure", "LogDirFailureTest.testProduceErrorFromFailureOnCheckpoint", "LogDirFailureTest.testIOExceptionDuringCheckpoint", "LogDirFailureTest.testReplicaFetcherThreadAfterLogDirFailureOnFollower", "AlterUserScramCredentialsRequestTest.testAlterNothing", "AlterUserScramCredentialsRequestTest.testAlterSameThingTwice", "AlterUserScramCredentialsRequestTest.testAlterEmptyUser", "AlterUserScramCredentialsRequestTest.testAlterUnknownMechanism", "AlterUserScramCredentialsRequestTest.testAlterTooFewIterations", "AlterUserScramCredentialsRequestTest.testAlterTooManyIterations", "AlterUserScramCredentialsRequestTest.testDeleteSomethingThatDoesNotExist", "AlterUserScramCredentialsRequestTest.testAlterNotController", "AlterUserScramCredentialsRequestTest.testAlterAndDescribe", "FetchRequestDownConversionConfigTest.testV1FetchWithDownConversionDisabled", "FetchRequestDownConversionConfigTest.testLatestFetchWithDownConversionDisabled", "FetchRequestDownConversionConfigTest.testV12WithDownConversionDisabled", "AlterReplicaLogDirsRequestTest.testAlterReplicaLogDirsRequest", "AlterReplicaLogDirsRequestTest.testAlterReplicaLogDirsRequestErrorCode", "ReplicaFetcherThreadTest.shouldSendLatestRequestVersionsByDefault", "ReplicaFetcherThreadTest.testFetchLeaderEpochRequestIfLastEpochDefinedForSomePartitions", "ReplicaFetcherThreadTest.shouldHandleExceptionFromBlockingSend", "ReplicaFetcherThreadTest.shouldFetchLeaderEpochOnFirstFetchOnlyIfLeaderEpochKnownToBothIbp26", "ReplicaFetcherThreadTest.shouldNotFetchLeaderEpochOnFirstFetchWithTruncateOnFetch", "ReplicaFetcherThreadTest.shouldTruncateToOffsetSpecifiedInEpochOffsetResponse", "ReplicaFetcherThreadTest.shouldTruncateToOffsetSpecifiedInEpochOffsetResponseIfFollowerHasNoMoreEpochs", "ReplicaFetcherThreadTest.shouldFetchLeaderEpochSecondTimeIfLeaderRepliesWithEpochNotKnownToFollower", "ReplicaFetcherThreadTest.shouldTruncateIfLeaderRepliesWithDivergingEpochNotKnownToFollower", "ReplicaFetcherThreadTest.shouldUseLeaderEndOffsetIfInterBrokerVersionBelow20", "ReplicaFetcherThreadTest.shouldTruncateToInitialFetchOffsetIfLeaderReturnsUndefinedOffset", "ReplicaFetcherThreadTest.shouldPollIndefinitelyIfLeaderReturnsAnyException", "ReplicaFetcherThreadTest.shouldMovePartitionsOutOfTruncatingLogState", "ReplicaFetcherThreadTest.shouldFilterPartitionsMadeLeaderDuringLeaderEpochRequest", "ReplicaFetcherThreadTest.shouldCatchExceptionFromBlockingSendWhenShuttingDownReplicaFetcherThread", "ReplicaFetcherThreadTest.shouldUpdateReassignmentBytesInMetrics", "ReplicaFetcherThreadTest.shouldNotUpdateReassignmentBytesInMetricsWhenNoReassignmentsInProgress", "ReplicaFetcherThreadTest.testBuildFetch", "BrokerLifecycleManagerTest.testCreateAndClose", "BrokerLifecycleManagerTest.testCreateStartAndClose", "BrokerLifecycleManagerTest.testSuccessfulRegistration", "BrokerLifecycleManagerTest.testRegistrationTimeout", "BrokerLifecycleManagerTest.testControlledShutdown", "ReplicaManagerConcurrencyTest.testIsrExpandAndShrinkWithConcurrentProduce", "AlterPartitionManagerTest.testSubmitFromCallback", "AlterPartitionManagerTest.testAuthorizationFailed", "AlterPartitionManagerTest.testStaleBrokerEpoch", "AlterPartitionManagerTest.testUnknownServer", "AlterPartitionManagerTest.testRetryOnAuthenticationFailure", "AlterPartitionManagerTest.testRetryOnUnsupportedVersionError", "AlterPartitionManagerTest.testInvalidUpdateVersion", "AlterPartitionManagerTest.testUnknownTopicPartition", "AlterPartitionManagerTest.testNotLeaderOrFollower", "AlterPartitionManagerTest.testInvalidRequest", "AlterPartitionManagerTest.testZkBasic", "FinalizedFeatureChangeListenerTest.testInitSuccessAndNotificationSuccess", "FinalizedFeatureChangeListenerTest.testFeatureZNodeDeleteNotificationProcessing", "FinalizedFeatureChangeListenerTest.testFeatureZNodeDisablingNotificationProcessing", "FinalizedFeatureChangeListenerTest.testCacheUpdateWaitFailsForUnreachableVersion", "FinalizedFeatureChangeListenerTest.testInitFailureDueToFeatureIncompatibility", "FinalizedFeatureChangeListenerTest.testInitFailureDueToInvalidWaitTime", "FinalizedFeatureChangeListenerTest.testNotificationFailureDueToFeatureIncompatibility", "ThrottledChannelExpirationTest.testCallbackInvocationAfterExpiration", "ThrottledChannelExpirationTest.testThrottledChannelDelay", "ListOffsetsRequestTest.testListOffsetsErrorCodes", "ListOffsetsRequestTest.testListOffsetsMaxTimeStampOldestVersion", "ListOffsetsRequestTest.testCurrentEpochValidation", "ListOffsetsRequestTest.testResponseIncludesLeaderEpoch", "ListOffsetsRequestTest.testResponseDefaultOffsetAndLeaderEpochForAllVersions", "ControllerApisTest.testUnauthorizedFetch", "ControllerApisTest.testFetchSentToKRaft", "ControllerApisTest.testFetchLocalTimeComputedCorrectly", "ControllerApisTest.testUnauthorizedFetchSnapshot", "ControllerApisTest.testFetchSnapshotSentToKRaft", "ControllerApisTest.testUnauthorizedVote", "ControllerApisTest.testHandleLegacyAlterConfigsErrors", "ControllerApisTest.testUnauthorizedBeginQuorumEpoch", "ControllerApisTest.testUnauthorizedEndQuorumEpoch", "ControllerApisTest.testUnauthorizedDescribeQuorum", "ControllerApisTest.testUnauthorizedHandleAlterPartitionRequest", "ControllerApisTest.testUnauthorizedHandleBrokerHeartBeatRequest", "ControllerApisTest.testUnauthorizedHandleUnregisterBroker", "ControllerApisTest.testClose", "ControllerApisTest.testUnauthorizedBrokerRegistration", "ControllerApisTest.testUnauthorizedHandleAlterClientQuotas", "ControllerApisTest.testUnauthorizedHandleIncrementalAlterConfigs", "ControllerApisTest.testInvalidIncrementalAlterConfigsResources", "ControllerApisTest.testUnauthorizedHandleAlterPartitionReassignments", "ControllerApisTest.testUnauthorizedHandleAllocateProducerIds", "ControllerApisTest.testUnauthorizedHandleListPartitionReassignments", "ControllerApisTest.testCreateTopics", "ControllerApisTest.testDeleteTopicsByName", "ControllerApisTest.testDeleteTopicsById", "ControllerApisTest.testInvalidDeleteTopicsRequest", "ControllerApisTest.testNotAuthorizedToDeleteWithTopicExisting", "ControllerApisTest.testNotAuthorizedToDeleteWithTopicNotExisting", "ControllerApisTest.testNotControllerErrorPreventsDeletingTopics", "ControllerApisTest.testDeleteTopicsDisabled", "ControllerApisTest.testCreatePartitionsAuthorization", "ControllerApisTest.testElectLeadersAuthorization", "ControllerApisTest.testElectLeadersHandledByController", "ControllerApisTest.testDeleteTopicsReturnsNotController", "ControllerApisTest.testAllocateProducerIdsReturnsNotController", "ControllerApisTest.testCompletableFutureExceptions", "KafkaMetricReporterExceptionHandlingTest.testBothReportersAreInvoked", "ServerTest.testCreateSelfManagedKafkaMetricsContext", "ServerTest.testCreateZkKafkaMetricsContext", "FetchSessionTest.testNewSessionId", "FetchSessionTest.testSessionCache", "FetchSessionTest.testResizeCachedSessions", "FetchSessionTest.testCachedLeaderEpoch", "FetchSessionTest.testLastFetchedEpoch", "FetchSessionTest.testFetchRequests", "FetchSessionTest.testFetchSessionWithUnknownIdOldRequestVersion", "FetchSessionTest.testFetchSessionWithUnknownId", "FetchSessionTest.testIncrementalFetchSessionWithIdsWhenSessionDoesNotUseId", "FetchSessionTest.testIncrementalFetchSessionWithoutIdsWhenSessionUsesId", "FetchSessionTest.testFetchSessionUpdateTopicIdsBrokerSide", "FetchSessionTest.testResolveUnknownPartitions", "FetchSessionTest.testUpdateAndGenerateResponseData", "FetchSessionTest.testFetchSessionExpiration", "FetchSessionTest.testPrivilegedSessionHandling", "FetchSessionTest.testZeroSizeFetchSession", "FetchSessionTest.testDivergingEpoch", "FetchSessionTest.testDeprioritizesPartitionsWithRecordsOnly", "FetchSessionTest.testCachedPartitionEqualsAndHashCode", "FetchSessionTest.testMaybeResolveUnknownName", "LogRecoveryTest.testHWCheckpointNoFailuresSingleLogSegment", "LogRecoveryTest.testHWCheckpointWithFailuresSingleLogSegment", "LogRecoveryTest.testHWCheckpointNoFailuresMultipleLogSegments", "LogRecoveryTest.testHWCheckpointWithFailuresMultipleLogSegments", "ProduceRequestTest.testSimpleProduceRequest", "ProduceRequestTest.testProduceWithInvalidTimestamp", "ProduceRequestTest.testProduceToNonReplica", "ProduceRequestTest.testCorruptLz4ProduceRequest", "ProduceRequestTest.testZSTDProduceRequest", "AuthHelperTest.testAuthorize", "AuthHelperTest.testFilterByAuthorized", "DynamicBrokerConfigTest.testConfigUpdate", "DynamicBrokerConfigTest.testEnableDefaultUncleanLeaderElection", "DynamicBrokerConfigTest.testUpdateDynamicThreadPool", "DynamicBrokerConfigTest.testConfigUpdateWithSomeInvalidConfigs", "DynamicBrokerConfigTest.testConfigUpdateWithReconfigurableValidationFailure", "DynamicBrokerConfigTest.testReconfigurableValidation", "DynamicBrokerConfigTest.testSecurityConfigs", "DynamicBrokerConfigTest.testConnectionQuota", "DynamicBrokerConfigTest.testConnectionRateQuota", "DynamicBrokerConfigTest.testPasswordConfigEncryption", "DynamicBrokerConfigTest.testPasswordConfigEncoderSecretChange", "DynamicBrokerConfigTest.testDynamicListenerConfig", "DynamicBrokerConfigTest.testAuthorizerConfig", "DynamicBrokerConfigTest.testSynonyms", "DynamicBrokerConfigTest.testDynamicConfigInitializationWithoutConfigsInZK", "DynamicBrokerConfigTest.testImproperConfigsAreRemoved", "ConfigAdminManagerTest.testCopyWithoutPreprocessedForIncremental", "ConfigAdminManagerTest.testCopyWithoutPreprocessedForLegacy", "ConfigAdminManagerTest.testReassembleIncrementalResponse", "ConfigAdminManagerTest.testReassembleLegacyResponse", "ConfigAdminManagerTest.testValidateResourceNameIsCurrentNodeId", "ConfigAdminManagerTest.testValidateLogLevelConfigs", "ConfigAdminManagerTest.testValidateRootLogLevelConfigs", "ConfigAdminManagerTest.testPreprocessIncrementalWithUnauthorizedBrokerLoggerChanges", "ConfigAdminManagerTest.testPreprocessIncrementalWithNulls", "ConfigAdminManagerTest.testPreprocessIncrementalWithLoggerChanges", "ConfigAdminManagerTest.testPreprocessIncrementalWithDuplicates", "ConfigAdminManagerTest.testPreprocessLegacyWithBrokerLoggerChanges", "ConfigAdminManagerTest.testPreprocessLegacyWithNulls", "ConfigAdminManagerTest.testPreprocessLegacyWithDuplicates", "ConfigAdminManagerTest.testPreprocessIncrementalWithUnknownResource", "ConfigAdminManagerTest.testPreprocessLegacyWithUnknownResource", "ConfigAdminManagerTest.testContainsDuplicates", "ReplicaManagerTest.testHighWaterMarkDirectoryMapping", "ReplicaManagerTest.testHighwaterMarkRelativeDirectoryMapping", "ReplicaManagerTest.testIllegalRequiredAcks", "ReplicaManagerTest.testClearPurgatoryOnBecomingFollower", "ReplicaManagerTest.testFencedErrorCausedByBecomeLeader", "ReplicaManagerTest.testReceiveOutOfOrderSequenceExceptionWithLogStartOffset", "ReplicaManagerTest.testPartitionsWithLateTransactionsCount", "ReplicaManagerTest.testReadCommittedFetchLimitedAtLSO", "ReplicaManagerTest.testDelayedFetchIncludesAbortedTransactions", "ReplicaManagerTest.testFetchBeyondHighWatermark", "ReplicaManagerTest.testFollowerStateNotUpdatedIfLogReadFails", "ReplicaManagerTest.testFetchMessagesWithInconsistentTopicId", "ReplicaManagerTest.testFetchMessagesWhenNotFollowerForOnePartition", "ReplicaManagerTest.testBecomeFollowerWhenLeaderIsUnchangedButMissedLeaderUpdate", "ReplicaManagerTest.testBecomeFollowerWhenLeaderIsUnchangedButMissedLeaderUpdateIbp26", "ReplicaManagerTest.testReplicaSelector", "ReplicaManagerTest.testPreferredReplicaAsFollower", "ReplicaManagerTest.testPreferredReplicaAsLeader", "ReplicaManagerTest.testFetchFromFollowerShouldNotRunPreferLeaderSelect", "ReplicaManagerTest.testFetchShouldReturnImmediatelyWhenPreferredReadReplicaIsDefined", "ReplicaManagerTest.testFollowerFetchWithDefaultSelectorNoForcedHwPropagation", "ReplicaManagerTest.testUnknownReplicaSelector", "ReplicaManagerTest.testDefaultReplicaSelector", "ReplicaManagerTest.testFetchFollowerNotAllowedForOlderClients", "ReplicaManagerTest.testFetchRequestRateMetrics", "ReplicaManagerTest.testBecomeFollowerWhileOldClientFetchInPurgatory", "ReplicaManagerTest.testBecomeFollowerWhileNewClientFetchInPurgatory", "ReplicaManagerTest.testFetchFromLeaderAlwaysAllowed", "ReplicaManagerTest.testClearFetchPurgatoryOnStopReplica", "ReplicaManagerTest.testClearProducePurgatoryOnStopReplica", "ReplicaManagerTest.testOldLeaderLosesMetricsWhenReassignPartitions", "ReplicaManagerTest.testOldFollowerLosesMetricsWhenReassignPartitions", "ReplicaManagerTest.testStopReplicaWithStaleControllerEpoch", "ReplicaManagerTest.testStopReplicaWithOfflinePartition", "ReplicaManagerTest.testStopReplicaWithInexistentPartition", "ReplicaManagerTest.testStopReplicaWithInexistentPartitionAndPartitionsDelete", "ReplicaManagerTest.testStopReplicaWithInexistentPartitionAndPartitionsDeleteAndIOException", "ReplicaManagerTest.testStopReplicaWithExistingPartitionAndNewerLeaderEpoch", "ReplicaManagerTest.testStopReplicaWithExistingPartitionAndOlderLeaderEpoch", "ReplicaManagerTest.testStopReplicaWithExistingPartitionAndEqualLeaderEpoch", "ReplicaManagerTest.testStopReplicaWithExistingPartitionAndDeleteSentinel", "ReplicaManagerTest.testStopReplicaWithExistingPartitionAndLeaderEpochNotProvided", "ReplicaManagerTest.testStopReplicaWithDeletePartitionAndExistingPartitionAndNewerLeaderEpoch", "ReplicaManagerTest.testStopReplicaWithDeletePartitionAndExistingPartitionAndNewerLeaderEpochAndIOException", "ReplicaManagerTest.testStopReplicaWithDeletePartitionAndExistingPartitionAndOlderLeaderEpoch", "ReplicaManagerTest.testStopReplicaWithDeletePartitionAndExistingPartitionAndEqualLeaderEpoch", "ReplicaManagerTest.testStopReplicaWithDeletePartitionAndExistingPartitionAndDeleteSentinel", "ReplicaManagerTest.testStopReplicaWithDeletePartitionAndExistingPartitionAndLeaderEpochNotProvided", "ReplicaManagerTest.testReplicaNotAvailable", "ReplicaManagerTest.testPartitionMetadataFile", "ReplicaManagerTest.testPartitionMetadataFileCreatedWithExistingLog", "ReplicaManagerTest.testPartitionMetadataFileCreatedAfterPreviousRequestWithoutIds", "ReplicaManagerTest.testInconsistentIdReturnsError", "ReplicaManagerTest.testPartitionMetadataFileNotCreated", "ReplicaManagerTest.testActiveProducerState", "ReplicaManagerTest.testGetOrCreatePartition", "ReplicaManagerTest.testDeltaFromLeaderToFollower", "ReplicaManagerTest.testDeltaFromFollowerToLeader", "ReplicaManagerTest.testDeltaFollowerWithNoChange", "ReplicaManagerTest.testDeltaFollowerToNotReplica", "ReplicaManagerTest.testDeltaFollowerRemovedTopic", "ReplicaManagerTest.testDeltaLeaderToNotReplica", "ReplicaManagerTest.testDeltaLeaderToRemovedTopic", "ReplicaManagerTest.testDeltaToFollowerCompletesProduce", "ReplicaManagerTest.testDeltaToFollowerCompletesFetch", "ReplicaManagerTest.testDeltaFollowerStopFetcherBeforeCreatingInitialFetchOffset", "ReplicaManagerTest.testFetcherAreNotRestartedIfLeaderEpochIsNotBumpedWithZkPath", "ReplicaManagerTest.testFetcherAreNotRestartedIfLeaderEpochIsNotBumpedWithKRaftPath", "ReplicaManagerTest.testReplicasAreStoppedWhileInControlledShutdownWithKRaft", "ReplicaManagerTest.testDescribeLogDirs", "DelegationTokenRequestsWithDisableTokenFeatureTest.testDelegationTokenRequests", "AbstractFetcherThreadTest.testMetricsRemovedOnShutdown", "AbstractFetcherThreadTest.testConsumerLagRemovedWithPartition", "AbstractFetcherThreadTest.testSimpleFetch", "AbstractFetcherThreadTest.testDelay", "AbstractFetcherThreadTest.testPartitionsInError", "AbstractFetcherThreadTest.testFencedTruncation", "AbstractFetcherThreadTest.testFencedFetch", "AbstractFetcherThreadTest.testUnknownLeaderEpochInTruncation", "AbstractFetcherThreadTest.testUnknownLeaderEpochWhileFetching", "AbstractFetcherThreadTest.testTruncation", "AbstractFetcherThreadTest.testTruncateToHighWatermarkIfLeaderEpochRequestNotSupported", "AbstractFetcherThreadTest.testTruncateToHighWatermarkIfLeaderEpochInfoNotAvailable", "AbstractFetcherThreadTest.testTruncateToHighWatermarkDuringRemovePartitions", "AbstractFetcherThreadTest.testTruncationSkippedIfNoEpochChange", "AbstractFetcherThreadTest.testTruncationOnFetchSkippedIfPartitionRemoved", "AbstractFetcherThreadTest.testFollowerFetchOutOfRangeHigh", "AbstractFetcherThreadTest.testFencedOffsetResetAfterOutOfRange", "AbstractFetcherThreadTest.testFollowerFetchOutOfRangeLow", "AbstractFetcherThreadTest.testRetryAfterUnknownLeaderEpochInLatestOffsetFetch", "AbstractFetcherThreadTest.testCorruptMessage", "AbstractFetcherThreadTest.testLeaderEpochChangeDuringFencedFetchEpochsFromLeader", "AbstractFetcherThreadTest.testLeaderEpochChangeDuringSuccessfulFetchEpochsFromLeader", "AbstractFetcherThreadTest.testTruncateToEpochEndOffsetsDuringRemovePartitions", "AbstractFetcherThreadTest.testTruncationThrowsExceptionIfLeaderReturnsPartitionsNotRequestedInFetchEpochs", "AbstractFetcherThreadTest.testFetcherThreadHandlingPartitionFailureDuringAppending", "AbstractFetcherThreadTest.testFetcherThreadHandlingPartitionFailureDuringTruncation", "AbstractFetcherThreadTest.testDivergingEpochs", "AbstractFetcherThreadTest.testMaybeUpdateTopicIds", "ForwardingManagerTest.testResponseCorrelationIdMismatch", "ForwardingManagerTest.testUnsupportedVersions", "ForwardingManagerTest.testForwardingTimeoutWaitingForControllerDiscovery", "ForwardingManagerTest.testForwardingTimeoutAfterRetry", "ForwardingManagerTest.testUnsupportedVersionFromNetworkClient", "ForwardingManagerTest.testFailedAuthentication", "DelegationTokenRequestsOnPlainTextTest.testDelegationTokenRequests", "DelayedOperationTest.testLockInTryCompleteElseWatch", "DelayedOperationTest.testSafeTryCompleteOrElse", "DelayedOperationTest.testRequestSatisfaction", "DelayedOperationTest.testRequestExpiry", "DelayedOperationTest.testDelayedFuture", "DelayedOperationTest.testRequestPurge", "DelayedOperationTest.shouldCancelForKeyReturningCancelledOperations", "DelayedOperationTest.shouldReturnNilOperationsOnCancelForKeyWhenKeyDoesntExist", "DelayedOperationTest.testTryCompleteWithMultipleThreads", "DynamicConfigTest.shouldFailWhenChangingClientIdUnknownConfig", "DynamicConfigTest.shouldFailWhenChangingUserUnknownConfig", "DynamicConfigTest.shouldFailLeaderConfigsWithInvalidValues", "DynamicConfigTest.shouldFailFollowerConfigsWithInvalidValues", "DynamicConfigTest.shouldFailIpConfigsWithInvalidValues", "DynamicConfigTest.shouldFailIpConfigsWithInvalidIpv4Entity", "DynamicConfigTest.shouldFailIpConfigsWithBadHost", "OffsetFetchRequestTest.testOffsetFetchRequestSingleGroup", "OffsetFetchRequestTest.testOffsetFetchRequestWithMultipleGroups", "OffsetFetchRequestTest.testOffsetFetchRequestWithMultipleGroupsWithOneGroupRepeating", "DeleteTopicsRequestWithDeletionDisabledTest.testDeleteRecordsRequest", "DescribeClusterRequestTest.testDescribeClusterRequestIncludingClusterAuthorizedOperations", "DescribeClusterRequestTest.testDescribeClusterRequestExcludingClusterAuthorizedOperations", "ClientRequestQuotaManagerTest.testRequestPercentageQuotaViolation", "ReplicaManagerQuotasTest.shouldExcludeSubsequentThrottledPartitions", "ReplicaManagerQuotasTest.shouldGetNoMessagesIfQuotasExceededOnSubsequentPartitions", "ReplicaManagerQuotasTest.shouldGetBothMessagesIfQuotasAllow", "ReplicaManagerQuotasTest.shouldIncludeInSyncThrottledReplicas", "ReplicaManagerQuotasTest.shouldIncludeThrottledReplicasForConsumerFetch", "ReplicaManagerQuotasTest.testCompleteInDelayedFetchWithReplicaThrottling", "ReplicaManagerQuotasTest.testCompleteInDelayedFetchConsumerFetch", "AbstractFetcherManagerTest.testAddAndRemovePartition", "AbstractFetcherManagerTest.testMetricFailedPartitionCount", "AbstractFetcherManagerTest.testDeadThreadCountMetric", "AbstractFetcherManagerTest.testMaybeUpdateTopicIds", "AbstractFetcherManagerTest.testExpandThreadPool", "AbstractFetcherManagerTest.testShrinkThreadPool", "StrictControllerMutationQuotaTest.testControllerMutationQuotaViolation", "StrictControllerMutationQuotaTest.testControllerMutationQuotaViolation", "StrictControllerMutationQuotaTest.testThrottleTime", "StrictControllerMutationQuotaTest.testControllerMutationQuotaViolation", "StrictControllerMutationQuotaTest.testNewStrictQuotaForReturnsUnboundedQuotaWhenQuotaIsDisabled", "StrictControllerMutationQuotaTest.testNewStrictQuotaForReturnsStrictQuotaWhenQuotaIsEnabled", "StrictControllerMutationQuotaTest.testNewPermissiveQuotaForReturnsUnboundedQuotaWhenQuotaIsDisabled", "StrictControllerMutationQuotaTest.testNewPermissiveQuotaForReturnsStrictQuotaWhenQuotaIsEnabled", "TestPrincipalBuilder.testSetUnsetQuota", "TestPrincipalBuilder.testQuotaMetric", "TestPrincipalBuilder.testStrictCreateTopicsRequest", "TestPrincipalBuilder.testPermissiveCreateTopicsRequest", "TestPrincipalBuilder.testUnboundedCreateTopicsRequest", "TestPrincipalBuilder.testStrictDeleteTopicsRequest", "TestPrincipalBuilder.testPermissiveDeleteTopicsRequest", "TestPrincipalBuilder.testUnboundedDeleteTopicsRequest", "TestPrincipalBuilder.testStrictCreatePartitionsRequest", "TestPrincipalBuilder.testPermissiveCreatePartitionsRequest", "TestPrincipalBuilder.testUnboundedCreatePartitionsRequest", "AutoTopicCreationManagerTest.testCreateOffsetTopic", "AutoTopicCreationManagerTest.testCreateTxnTopic", "AutoTopicCreationManagerTest.testCreateNonInternalTopic", "AutoTopicCreationManagerTest.testCreateTopicsWithForwardingDisabled", "AutoTopicCreationManagerTest.testInvalidReplicationFactorForNonInternalTopics", "AutoTopicCreationManagerTest.testInvalidReplicationFactorForConsumerOffsetsTopic", "AutoTopicCreationManagerTest.testInvalidReplicationFactorForTxnOffsetTopic", "AutoTopicCreationManagerTest.testTopicExistsErrorSwapForNonInternalTopics", "AutoTopicCreationManagerTest.testTopicExistsErrorSwapForConsumerOffsetsTopic", "AutoTopicCreationManagerTest.testTopicExistsErrorSwapForTxnOffsetTopic", "AutoTopicCreationManagerTest.testRequestTimeoutErrorSwapForNonInternalTopics", "AutoTopicCreationManagerTest.testRequestTimeoutErrorSwapForConsumerOffsetTopic", "AutoTopicCreationManagerTest.testRequestTimeoutErrorSwapForTxnOffsetTopic", "AutoTopicCreationManagerTest.testUnknownTopicPartitionForNonIntervalTopic", "AutoTopicCreationManagerTest.testUnknownTopicPartitionForConsumerOffsetTopic", "AutoTopicCreationManagerTest.testUnknownTopicPartitionForTxnOffsetTopic", "AutoTopicCreationManagerTest.testTopicCreationWithMetadataContextPassPrincipal", "AutoTopicCreationManagerTest.testTopicCreationWithMetadataContextWhenPrincipalSerdeNotDefined", "AutoTopicCreationManagerTest.testTopicCreationWithMetadataContextNoRetryUponUnsupportedVersion", "ControllerConfigurationValidatorTest.testDefaultTopicResourceIsRejected", "ControllerConfigurationValidatorTest.testInvalidTopicNameRejected", "ControllerConfigurationValidatorTest.testUnknownResourceType", "ControllerConfigurationValidatorTest.testNullTopicConfigValue", "ControllerConfigurationValidatorTest.testValidTopicConfig", "ControllerConfigurationValidatorTest.testInvalidTopicConfig", "ControllerConfigurationValidatorTest.testInvalidBrokerEntity", "ControllerConfigurationValidatorTest.testInvalidNegativeBrokerId", "BrokerEpochIntegrationTest.testReplicaManagerBrokerEpochMatchesWithZk", "BrokerEpochIntegrationTest.testControllerBrokerEpochCacheMatchesWithZk", "BrokerEpochIntegrationTest.testControlRequestWithCorrectBrokerEpoch", "BrokerEpochIntegrationTest.testControlRequestWithStaleBrokerEpoch", "BrokerEpochIntegrationTest.testControlRequestWithNewerBrokerEpoch", "FetchRequestTest.testBrokerRespectsPartitionsOrderAndSizeLimits", "FetchRequestTest.testFetchRequestV4WithReadCommitted", "FetchRequestTest.testFetchRequestToNonReplica", "FetchRequestTest.testLastFetchedEpochValidation", "FetchRequestTest.testLastFetchedEpochValidationV12", "FetchRequestTest.testCurrentEpochValidation", "FetchRequestTest.testCurrentEpochValidationV12", "FetchRequestTest.testEpochValidationWithinFetchSession", "FetchRequestTest.testEpochValidationWithinFetchSessionV12", "FetchRequestTest.testDownConversionWithConnectionFailure", "FetchRequestTest.testDownConversionFromBatchedToUnbatchedRespectsOffset", "FetchRequestTest.testCreateIncrementalFetchWithPartitionsInErrorV12", "FetchRequestTest.testFetchWithPartitionsWithIdError", "FetchRequestTest.testZStdCompressedTopic", "FetchRequestTest.testZStdCompressedRecords", "DescribeLogDirsRequestTest.testDescribeLogDirsRequest", "ZkAdminManagerTest.testDescribeConfigsWithNullConfigurationKeys", "ZkAdminManagerTest.testDescribeConfigsWithEmptyConfigurationKeys", "ZkAdminManagerTest.testDescribeConfigsWithConfigurationKeys", "ZkAdminManagerTest.testDescribeConfigsWithDocumentation", "KafkaConfigTest.testLogRetentionTimeHoursProvided", "KafkaConfigTest.testLogRetentionTimeMinutesProvided", "KafkaConfigTest.testLogRetentionTimeMsProvided", "KafkaConfigTest.testLogRetentionTimeNoConfigProvided", "KafkaConfigTest.testLogRetentionTimeBothMinutesAndHoursProvided", "KafkaConfigTest.testLogRetentionTimeBothMinutesAndMsProvided", "KafkaConfigTest.testLogRetentionUnlimited", "KafkaConfigTest.testLogRetentionValid", "KafkaConfigTest.testAdvertiseDefaults", "KafkaConfigTest.testAdvertiseConfigured", "KafkaConfigTest.testDuplicateListeners", "KafkaConfigTest.testControlPlaneListenerName", "KafkaConfigTest.testControllerListenerNames", "KafkaConfigTest.testControlPlaneListenerNameNotAllowedWithKRaft", "KafkaConfigTest.testControllerListenerDefinedForKRaftController", "KafkaConfigTest.testControllerListenerDefinedForKRaftBroker", "KafkaConfigTest.testPortInQuorumVotersNotRequiredToMatchFirstControllerListenerPortForThisKRaftController", "KafkaConfigTest.testSeparateControllerListenerDefinedForKRaftBrokerController", "KafkaConfigTest.testControllerListenerNameMapsToPlaintextByDefaultForKRaft", "KafkaConfigTest.testMultipleControllerListenerNamesMapToPlaintextByDefaultForKRaft", "KafkaConfigTest.testControllerListenerNameDoesNotMapToPlaintextByDefaultForNonKRaft", "KafkaConfigTest.testBadListenerProtocol", "KafkaConfigTest.testListenerNamesWithAdvertisedListenerUnset", "KafkaConfigTest.testListenerAndAdvertisedListenerNames", "KafkaConfigTest.testListenerNameMissingFromListenerSecurityProtocolMap", "KafkaConfigTest.testInterBrokerListenerNameMissingFromListenerSecurityProtocolMap", "KafkaConfigTest.testInterBrokerListenerNameAndSecurityProtocolSet", "KafkaConfigTest.testCaseInsensitiveListenerProtocol", "KafkaConfigTest.testListenerDefaults", "KafkaConfigTest.testVersionConfiguration", "KafkaConfigTest.testUncleanLeaderElectionDefault", "KafkaConfigTest.testUncleanElectionDisabled", "KafkaConfigTest.testUncleanElectionEnabled", "KafkaConfigTest.testUncleanElectionInvalid", "KafkaConfigTest.testLogRollTimeMsProvided", "KafkaConfigTest.testLogRollTimeBothMsAndHoursProvided", "KafkaConfigTest.testLogRollTimeNoConfigProvided", "KafkaConfigTest.testDefaultCompressionType", "KafkaConfigTest.testValidCompressionType", "KafkaConfigTest.testInvalidCompressionType", "KafkaConfigTest.testInvalidInterBrokerSecurityProtocol", "KafkaConfigTest.testEqualAdvertisedListenersProtocol", "KafkaConfigTest.testInvalidAdvertisedListenersProtocol", "KafkaConfigTest.testInterBrokerVersionMessageFormatCompatibility", "KafkaConfigTest.testFromPropsInvalid", "KafkaConfigTest.testDynamicLogConfigs", "KafkaConfigTest.testSpecificProperties", "KafkaConfigTest.testNonroutableAdvertisedListeners", "KafkaConfigTest.testMaxConnectionsPerIpProp", "KafkaConfigTest.testDistinctControllerAndAdvertisedListenersAllowedForKRaftBroker", "KafkaConfigTest.testControllerListenersCannotBeAdvertisedForKRaftBroker", "KafkaConfigTest.testAdvertisedListenersDisallowedForKRaftControllerOnlyRole", "KafkaConfigTest.testControllerQuorumVoterStringsToNodes", "KafkaConfigTest.testInvalidQuorumVoterConfig", "KafkaConfigTest.testValidQuorumVotersConfig", "KafkaConfigTest.testAcceptsLargeNodeIdForRaftBasedCase", "KafkaConfigTest.testRejectsNegativeNodeIdForRaftBasedBrokerCaseWithAutoGenEnabled", "KafkaConfigTest.testRejectsNegativeNodeIdForRaftBasedControllerCaseWithAutoGenEnabled", "KafkaConfigTest.testRejectsNegativeNodeIdForRaftBasedCaseWithAutoGenDisabled", "KafkaConfigTest.testRejectsLargeNodeIdForZkBasedCaseWithAutoGenEnabled", "KafkaConfigTest.testAcceptsNegativeOneNodeIdForZkBasedCaseWithAutoGenEnabled", "KafkaConfigTest.testRejectsNegativeTwoNodeIdForZkBasedCaseWithAutoGenEnabled", "KafkaConfigTest.testAcceptsLargeNodeIdForZkBasedCaseWithAutoGenDisabled", "KafkaConfigTest.testRejectsNegativeNodeIdForZkBasedCaseWithAutoGenDisabled", "KafkaConfigTest.testZookeeperConnectRequiredIfEmptyProcessRoles", "KafkaConfigTest.testZookeeperConnectNotRequiredIfNonEmptyProcessRoles", "KafkaConfigTest.testCustomMetadataLogDir", "KafkaConfigTest.testDefaultMetadataLogDir", "KafkaConfigTest.testPopulateSynonymsOnEmptyMap", "KafkaConfigTest.testPopulateSynonymsOnMapWithoutNodeId", "KafkaConfigTest.testPopulateSynonymsOnMapWithoutBrokerId", "KafkaConfigTest.testNodeIdMustNotBeDifferentThanBrokerId", "KafkaConfigTest.testNodeIdOrBrokerIdMustBeSetWithKraft", "KafkaConfigTest.testNodeIdIsInferredByBrokerIdWithKraft", "KafkaConfigTest.testBrokerIdIsInferredByNodeIdWithKraft", "KafkaConfigTest.testSaslJwksEndpointRetryDefaults", "KafkaConfigTest.testInvalidAuthorizerClassName", "KafkaConfigTest.testInvalidSecurityInterBrokerProtocol", "KafkaConfigTest.testEarlyStartListenersDefault", "KafkaConfigTest.testEarlyStartListeners", "KafkaConfigTest.testEarlyStartListenersMustBeListeners", "KafkaConfigTest.testIgnoreUserInterBrokerProtocolVersionKRaft", "KafkaConfigTest.testInvalidInterBrokerProtocolVersionKRaft", "KafkaConfigTest.testDefaultInterBrokerProtocolVersionKRaft", "EpochDrivenReplicationProtocolAcceptanceTest.shouldFollowLeaderEpochBasicWorkflow", "EpochDrivenReplicationProtocolAcceptanceTest.shouldNotAllowDivergentLogs", "EpochDrivenReplicationProtocolAcceptanceTest.offsetsShouldNotGoBackwards", "EpochDrivenReplicationProtocolAcceptanceTest.shouldSurviveFastLeaderChange", "EpochDrivenReplicationProtocolAcceptanceTest.logsShouldNotDivergeOnUncleanLeaderElections", "LeaderEpochFileCacheTest.testPreviousEpoch", "LeaderEpochFileCacheTest.shouldAddEpochAndMessageOffsetToCach", "LeaderEpochFileCacheTest.shouldReturnLogEndOffsetIfLatestEpochRequeste", "LeaderEpochFileCacheTest.shouldReturnUndefinedOffsetIfUndefinedEpochRequeste", "LeaderEpochFileCacheTest.shouldNotOverwriteLogEndOffsetForALeaderEpochOnceItHasBeenAssigne", "LeaderEpochFileCacheTest.shouldEnforceMonotonicallyIncreasingStartOffset", "LeaderEpochFileCacheTest.shouldNotOverwriteOffsetForALeaderEpochOnceItHasBeenAssigne", "LeaderEpochFileCacheTest.shouldReturnUnsupportedIfNoEpochRecorded", "LeaderEpochFileCacheTest.shouldReturnUnsupportedIfNoEpochRecordedAndUndefinedEpochRequested", "LeaderEpochFileCacheTest.shouldReturnFirstEpochIfRequestedEpochLessThanFirstEpoch", "LeaderEpochFileCacheTest.shouldTruncateIfMatchingEpochButEarlierStartingOffset", "LeaderEpochFileCacheTest.shouldGetFirstOffsetOfSubsequentEpochWhenOffsetRequestedForPreviousEpoc", "LeaderEpochFileCacheTest.shouldReturnNextAvailableEpochIfThereIsNoExactEpochForTheOneRequested", "LeaderEpochFileCacheTest.shouldNotUpdateEpochAndStartOffsetIfItDidNotChang", "LeaderEpochFileCacheTest.shouldReturnInvalidOffsetIfEpochIsRequestedWhichIsNotCurrentlyTracked", "LeaderEpochFileCacheTest.shouldSupportEpochsThatDoNotStartFromZero", "LeaderEpochFileCacheTest.shouldPersistEpochsBetweenInstances", "LeaderEpochFileCacheTest.shouldEnforceMonotonicallyIncreasingEpochs", "LeaderEpochFileCacheTest.shouldEnforceOffsetsIncreaseMonotonicall", "LeaderEpochFileCacheTest.shouldIncreaseAndTrackEpochsAsLeadersChangeManyTimes", "LeaderEpochFileCacheTest.shouldIncreaseAndTrackEpochsAsFollowerReceivesManyMessages", "LeaderEpochFileCacheTest.shouldDropEntriesOnEpochBoundaryWhenRemovingLatestEntries", "LeaderEpochFileCacheTest.shouldPreserveResetOffsetOnClearEarliestIfOneExists", "LeaderEpochFileCacheTest.shouldUpdateSavedOffsetWhenOffsetToClearToIsBetweenEpochs", "LeaderEpochFileCacheTest.shouldNotClearAnythingIfOffsetToEarly", "LeaderEpochFileCacheTest.shouldNotClearAnythingIfOffsetToFirstOffset", "LeaderEpochFileCacheTest.shouldRetainLatestEpochOnClearAllEarliest", "LeaderEpochFileCacheTest.shouldUpdateOffsetBetweenEpochBoundariesOnClearEarliest", "LeaderEpochFileCacheTest.shouldUpdateOffsetBetweenEpochBoundariesOnClearEarliest2", "LeaderEpochFileCacheTest.shouldRetainLatestEpochOnClearAllEarliestAndUpdateItsOffset", "LeaderEpochFileCacheTest.shouldDropEntriesBetweenEpochBoundaryWhenRemovingNewest", "LeaderEpochFileCacheTest.shouldClearAllEntries", "LeaderEpochFileCacheTest.shouldNotResetEpochHistoryHeadIfUndefinedPassed", "LeaderEpochFileCacheTest.shouldNotResetEpochHistoryTailIfUndefinedPassed", "LeaderEpochFileCacheTest.shouldFetchLatestEpochOfEmptyCache", "LeaderEpochFileCacheTest.shouldFetchEndOffsetOfEmptyCache", "LeaderEpochFileCacheTest.shouldClearEarliestOnEmptyCache", "LeaderEpochFileCacheTest.shouldClearLatestOnEmptyCache", "LeaderEpochIntegrationTest.shouldAddCurrentLeaderEpochToMessagesAsTheyAreWrittenToLeader", "LeaderEpochIntegrationTest.shouldSendLeaderEpochRequestAndGetAResponse", "LeaderEpochIntegrationTest.shouldIncreaseLeaderEpochBetweenLeaderRestarts", "OffsetsForLeaderEpochTest.shouldGetEpochsFromReplica", "OffsetsForLeaderEpochTest.shouldReturnNoLeaderForPartitionIfThrown", "OffsetsForLeaderEpochTest.shouldReturnUnknownTopicOrPartitionIfThrown", "LeaderEpochCheckpointFileWithFailureHandlerTest.shouldPersistAndOverwriteAndReloadFile", "LeaderEpochCheckpointFileWithFailureHandlerTest.shouldRetainValuesEvenIfCheckpointIsRecreated", "OffsetCheckpointFileWithFailureHandlerTest.shouldPersistAndOverwriteAndReloadFile", "OffsetCheckpointFileWithFailureHandlerTest.shouldHandleMultipleLines", "OffsetCheckpointFileWithFailureHandlerTest.shouldReturnEmptyMapForEmptyFile", "OffsetCheckpointFileWithFailureHandlerTest.shouldThrowIfVersionIsNotRecognised", "OffsetCheckpointFileWithFailureHandlerTest.testLazyOffsetCheckpoint", "OffsetCheckpointFileWithFailureHandlerTest.testLazyOffsetCheckpointFileInvalidLogDir", "MockConfigRepositoryTest.testEmptyRepository", "MockConfigRepositoryTest.testSetTopicConfig", "BrokerMetadataListenerTest.testCreateAndClose", "BrokerMetadataListenerTest.testPublish", "BrokerMetadataListenerTest.testHandleCommitsWithNoSnapshotterDefined", "BrokerMetadataListenerTest.testCreateSnapshot", "BrokerMetadataListenerTest.testNotSnapshotAfterMetadataVersionChangeBeforePublishing", "BrokerMetadataListenerTest.testSnapshotAfterMetadataVersionChangeWhenStarting", "BrokerMetadataListenerTest.testSnapshotAfterMetadataVersionChange", "BrokerMetadataListenerTest.testNoSnapshotAfterError", "BrokerMetadataPublisherTest.testGetTopicDelta", "BrokerMetadataPublisherTest.testFindStrayReplicas", "BrokerMetadataPublisherTest.testReloadUpdatedFilesWithoutConfigChange", "BrokerMetadataPublisherTest.testExceptionInUpdateCoordinator", "BrokerMetadataSnapshotterTest.testCreateAndClose", "BrokerMetadataSnapshotterTest.testCreateSnapshot", "BrokerMetadataSnapshotterTest.testRecordListConsumer", "ZkConfigRepositoryTest.testZkConfigRepository", "ZkConfigRepositoryTest.testUnsupportedTypes", "QuotaUtilsTest.testThrottleTimeObservedRateEqualsQuota", "QuotaUtilsTest.testThrottleTimeObservedRateBelowQuota", "QuotaUtilsTest.testThrottleTimeObservedRateAboveQuota", "QuotaUtilsTest.testBoundedThrottleTimeObservedRateEqualsQuota", "QuotaUtilsTest.testBoundedThrottleTimeObservedRateBelowQuota", "QuotaUtilsTest.testBoundedThrottleTimeObservedRateAboveQuotaBelowLimit", "QuotaUtilsTest.testBoundedThrottleTimeObservedRateAboveQuotaAboveLimit", "QuotaUtilsTest.testThrottleTimeThrowsExceptionIfProvidedNonRateMetric", "QuotaUtilsTest.testBoundedThrottleTimeThrowsExceptionIfProvidedNonRateMetric", "PasswordEncoderTest.testEncodeDecode", "PasswordEncoderTest.testEncoderConfigChange", "PasswordEncoderTest.testEncodeDecodeAlgorithms", "CoreUtilsTest.testSwallow", "CoreUtilsTest.testTryAll", "CoreUtilsTest.testCircularIterator", "CoreUtilsTest.testReadBytes", "CoreUtilsTest.testAbs", "CoreUtilsTest.testReplaceSuffix", "CoreUtilsTest.testReadInt", "CoreUtilsTest.testCsvList", "CoreUtilsTest.testCsvMap", "CoreUtilsTest.testInLock", "CoreUtilsTest.testUrlSafeBase64EncodeUUID", "CoreUtilsTest.testGenerateUuidAsBase64", "CoreUtilsTest.testAtomicGetOrUpdate", "ReplicationUtilsTest.testUpdateLeaderAndIsr", "TopicFilterTest.testIncludeLists", "CommandLineUtilsTest.testParseEmptyArg", "CommandLineUtilsTest.testParseEmptyArgWithNoDelimiter", "CommandLineUtilsTest.testParseEmptyArgAsValid", "CommandLineUtilsTest.testParseSingleArg", "CommandLineUtilsTest.testParseArgs", "CommandLineUtilsTest.testParseArgsWithMultipleDelimiters", "CommandLineUtilsTest.testMaybeMergeOptionsOverwriteExisting", "CommandLineUtilsTest.testMaybeMergeOptionsDefaultOverwriteExisting", "CommandLineUtilsTest.testMaybeMergeOptionsDefaultValueIfNotExist", "CommandLineUtilsTest.testMaybeMergeOptionsNotOverwriteExisting", "ThrottlerTest.testThrottleDesiredRate", "ThrottlerTest.testUpdateThrottleDesiredRate", "SchedulerTest.testMockSchedulerNonPeriodicTask", "SchedulerTest.testMockSchedulerPeriodicTask", "SchedulerTest.testReentrantTaskInMockScheduler", "SchedulerTest.testNonPeriodicTask", "SchedulerTest.testPeriodicTask", "SchedulerTest.testRestart", "SchedulerTest.testUnscheduleProducerTask", "SchedulerTest.testMockSchedulerLocking", "PoolTest.testRemoveAll", "ShutdownableThreadTest.testShutdownWhenCalledAfterThreadStart", "JsonTest.testJsonParse", "JsonTest.testEncodeAsString", "JsonTest.testEncodeAsBytes", "JsonTest.testParseT", "JsonTest.testParseToWithInvalidJso", "TimerTaskListTest.testAll", "TimerTest.testAlreadyExpiredTask", "TimerTest.testTaskExpiration", "JsonValueTest.testAsJsonObject", "JsonValueTest.testAsJsonObjectOption", "JsonValueTest.testAsJsonArray", "JsonValueTest.testAsJsonArrayOption", "JsonValueTest.testJsonObjectGet", "JsonValueTest.testJsonObjectApply", "JsonValueTest.testJsonObjectIterator", "JsonValueTest.testJsonArrayIterator", "JsonValueTest.testJsonValueEquals", "JsonValueTest.testJsonValueHashCode", "JsonValueTest.testJsonValueToString", "JsonValueTest.testDecodeBoolean", "JsonValueTest.testDecodeString", "JsonValueTest.testDecodeInt", "JsonValueTest.testDecodeLong", "JsonValueTest.testDecodeDouble", "JsonValueTest.testDecodeSeq", "JsonValueTest.testDecodeMap", "JsonValueTest.testDecodeOption", "ZooKeeperClientTest.testUnresolvableConnectString", "ZooKeeperClientTest.testConnectionTimeout", "ZooKeeperClientTest.testConnection", "ZooKeeperClientTest.testConnectionViaNettyClient", "ZooKeeperClientTest.testDeleteNonExistentZNode", "ZooKeeperClientTest.testDeleteExistingZNode", "ZooKeeperClientTest.testExistsNonExistentZNode", "ZooKeeperClientTest.testExistsExistingZNode", "ZooKeeperClientTest.testGetDataNonExistentZNode", "ZooKeeperClientTest.testGetDataExistingZNode", "ZooKeeperClientTest.testSetDataNonExistentZNode", "ZooKeeperClientTest.testSetDataExistingZNode", "ZooKeeperClientTest.testGetAclNonExistentZNode", "ZooKeeperClientTest.testGetAclExistingZNode", "ZooKeeperClientTest.testSetAclNonExistentZNode", "ZooKeeperClientTest.testGetChildrenNonExistentZNode", "ZooKeeperClientTest.testGetChildrenExistingZNode", "ZooKeeperClientTest.testGetChildrenExistingZNodeWithChildren", "ZooKeeperClientTest.testPipelinedGetData", "ZooKeeperClientTest.testMixedPipeline", "ZooKeeperClientTest.testZNodeChangeHandlerForCreation", "ZooKeeperClientTest.testZNodeChangeHandlerForDeletion", "ZooKeeperClientTest.testZNodeChangeHandlerForDataChange", "ZooKeeperClientTest.testBlockOnRequestCompletionFromStateChangeHandler", "ZooKeeperClientTest.testExceptionInBeforeInitializingSession", "ZooKeeperClientTest.testZNodeChildChangeHandlerForChildChange", "ZooKeeperClientTest.testZNodeChildChangeHandlerForChildChangeNotTriggered", "ZooKeeperClientTest.testStateChangeHandlerForAuthFailure", "ZooKeeperClientTest.testConnectionLossRequestTermination", "ZooKeeperClientTest.testSessionExpiry", "ZooKeeperClientTest.testSessionExpiryDuringClose", "ZooKeeperClientTest.testReinitializeAfterAuthFailure", "ZooKeeperClientTest.testZooKeeperStateChangeRateMetrics", "ZooKeeperClientTest.testZooKeeperSessionStateMetric", "TopicDeletionManagerTest.testInitialization", "TopicDeletionManagerTest.testBasicDeletion", "TopicDeletionManagerTest.testDeletionWithBrokerOffline", "TopicDeletionManagerTest.testBrokerFailureAfterDeletionStarted", "ControllerContextTest.testUpdatePartitionFullReplicaAssignmentUpdatesReplicaAssignment", "ControllerContextTest.testPartitionReplicaAssignmentReturnsEmptySeqIfTopicOrPartitionDoesNotExist", "ControllerContextTest.testPartitionFullReplicaAssignmentReturnsEmptyAssignmentIfTopicOrPartitionDoesNotExist", "ControllerContextTest.testPartitionReplicaAssignmentForTopicReturnsEmptyMapIfTopicDoesNotExist", "ControllerContextTest.testPartitionReplicaAssignmentForTopicReturnsExpectedReplicaAssignments", "ControllerContextTest.testPartitionReplicaAssignment", "ControllerContextTest.testReassignToIdempotence", "ControllerContextTest.testReassignTo", "ControllerContextTest.testPreferredReplicaImbalanceMetric", "ControllerContextTest.testPreferredReplicaImbalanceMetricOnConcurrentTopicDeletion", "ControllerFailoverTest.testHandleIllegalStateException", "ReplicaStateMachineTest.testStartupOnlinePartition", "ReplicaStateMachineTest.testStartupOfflinePartition", "ReplicaStateMachineTest.testStartupWithReplicaWithoutLeader", "ReplicaStateMachineTest.testNonexistentReplicaToNewReplicaTransition", "ReplicaStateMachineTest.testInvalidNonexistentReplicaToOnlineReplicaTransition", "ReplicaStateMachineTest.testInvalidNonexistentReplicaToOfflineReplicaTransition", "ReplicaStateMachineTest.testInvalidNonexistentReplicaToReplicaDeletionStartedTransition", "ReplicaStateMachineTest.testInvalidNonexistentReplicaToReplicaDeletionIneligibleTransition", "ReplicaStateMachineTest.testInvalidNonexistentReplicaToReplicaDeletionSuccessfulTransition", "ReplicaStateMachineTest.testInvalidNewReplicaToNonexistentReplicaTransition", "ReplicaStateMachineTest.testNewReplicaToOnlineReplicaTransition", "ReplicaStateMachineTest.testNewReplicaToOfflineReplicaTransition", "ReplicaStateMachineTest.testInvalidNewReplicaToReplicaDeletionStartedTransition", "ReplicaStateMachineTest.testInvalidNewReplicaToReplicaDeletionIneligibleTransition", "ReplicaStateMachineTest.testInvalidNewReplicaToReplicaDeletionSuccessfulTransition", "ReplicaStateMachineTest.testInvalidOnlineReplicaToNonexistentReplicaTransition", "ReplicaStateMachineTest.testInvalidOnlineReplicaToNewReplicaTransition", "ReplicaStateMachineTest.testOnlineReplicaToOnlineReplicaTransition", "ReplicaStateMachineTest.testOnlineReplicaToOfflineReplicaTransition", "ReplicaStateMachineTest.testInvalidOnlineReplicaToReplicaDeletionStartedTransition", "ReplicaStateMachineTest.testInvalidOnlineReplicaToReplicaDeletionIneligibleTransition", "ReplicaStateMachineTest.testInvalidOnlineReplicaToReplicaDeletionSuccessfulTransition", "ReplicaStateMachineTest.testInvalidOfflineReplicaToNonexistentReplicaTransition", "ReplicaStateMachineTest.testInvalidOfflineReplicaToNewReplicaTransition", "ReplicaStateMachineTest.testOfflineReplicaToOnlineReplicaTransition", "ReplicaStateMachineTest.testOfflineReplicaToReplicaDeletionStartedTransition", "ReplicaStateMachineTest.testOfflineReplicaToReplicaDeletionIneligibleTransition", "ReplicaStateMachineTest.testInvalidOfflineReplicaToReplicaDeletionSuccessfulTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionStartedToNonexistentReplicaTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionStartedToNewReplicaTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionStartedToOnlineReplicaTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionStartedToOfflineReplicaTransition", "ReplicaStateMachineTest.testReplicaDeletionStartedToReplicaDeletionIneligibleTransition", "ReplicaStateMachineTest.testReplicaDeletionStartedToReplicaDeletionSuccessfulTransition", "ReplicaStateMachineTest.testReplicaDeletionSuccessfulToNonexistentReplicaTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionSuccessfulToNewReplicaTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionSuccessfulToOnlineReplicaTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionSuccessfulToOfflineReplicaTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionSuccessfulToReplicaDeletionStartedTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionSuccessfulToReplicaDeletionIneligibleTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionIneligibleToNonexistentReplicaTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionIneligibleToNewReplicaTransition", "ReplicaStateMachineTest.testReplicaDeletionIneligibleToOnlineReplicaTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionIneligibleToReplicaDeletionStartedTransition", "ReplicaStateMachineTest.testInvalidReplicaDeletionIneligibleToReplicaDeletionSuccessfulTransition", "PartitionStateMachineTest.testNonexistentPartitionToNewPartitionTransition", "PartitionStateMachineTest.testInvalidNonexistentPartitionToOnlinePartitionTransition", "PartitionStateMachineTest.testInvalidNonexistentPartitionToOfflinePartitionTransition", "PartitionStateMachineTest.testNewPartitionToOnlinePartitionTransition", "PartitionStateMachineTest.testNewPartitionToOnlinePartitionTransitionZooKeeperClientExceptionFromCreateStates", "PartitionStateMachineTest.testNewPartitionToOnlinePartitionTransitionErrorCodeFromCreateStates", "PartitionStateMachineTest.testNewPartitionToOfflinePartitionTransition", "PartitionStateMachineTest.testInvalidNewPartitionToNonexistentPartitionTransition", "PartitionStateMachineTest.testOnlinePartitionToOnlineTransition", "PartitionStateMachineTest.testOnlinePartitionToOnlineTransitionForControlledShutdown", "PartitionStateMachineTest.testOnlinePartitionToOfflineTransition", "PartitionStateMachineTest.testInvalidOnlinePartitionToNonexistentPartitionTransition", "PartitionStateMachineTest.testInvalidOnlinePartitionToNewPartitionTransition", "PartitionStateMachineTest.testOfflinePartitionToOnlinePartitionTransition", "PartitionStateMachineTest.testOfflinePartitionToOnlinePartitionTransitionZooKeeperClientExceptionFromStateLookup", "PartitionStateMachineTest.testOfflinePartitionToOnlinePartitionTransitionErrorCodeFromStateLookup", "PartitionStateMachineTest.testOfflinePartitionToNonexistentPartitionTransition", "PartitionStateMachineTest.testInvalidOfflinePartitionToNewPartitionTransition", "PartitionStateMachineTest.testUpdatingOfflinePartitionsCount", "PartitionStateMachineTest.testNoOfflinePartitionsChangeForTopicsBeingDeleted", "PartitionStateMachineTest.testUpdatingOfflinePartitionsCountDuringTopicDeletion", "PartitionLeaderElectionAlgorithmsTest.testOfflinePartitionLeaderElection", "PartitionLeaderElectionAlgorithmsTest.testOfflinePartitionLeaderElectionLastIsrOfflineUncleanLeaderElectionDisabled", "PartitionLeaderElectionAlgorithmsTest.testOfflinePartitionLeaderElectionLastIsrOfflineUncleanLeaderElectionEnabled", "PartitionLeaderElectionAlgorithmsTest.testReassignPartitionLeaderElection", "PartitionLeaderElectionAlgorithmsTest.testReassignPartitionLeaderElectionWithNoLiveIsr", "PartitionLeaderElectionAlgorithmsTest.testReassignPartitionLeaderElectionWithEmptyIsr", "PartitionLeaderElectionAlgorithmsTest.testPreferredReplicaPartitionLeaderElection", "PartitionLeaderElectionAlgorithmsTest.testPreferredReplicaPartitionLeaderElectionPreferredReplicaInIsrNotLive", "PartitionLeaderElectionAlgorithmsTest.testPreferredReplicaPartitionLeaderElectionPreferredReplicaNotInIsrLive", "PartitionLeaderElectionAlgorithmsTest.testPreferredReplicaPartitionLeaderElectionPreferredReplicaNotInIsrNotLive", "PartitionLeaderElectionAlgorithmsTest.testControlledShutdownPartitionLeaderElection", "PartitionLeaderElectionAlgorithmsTest.testControlledShutdownPartitionLeaderElectionLastIsrShuttingDown", "PartitionLeaderElectionAlgorithmsTest.testControlledShutdownPartitionLeaderElectionAllIsrSimultaneouslyShutdown", "ControllerIntegrationTest.testEmptyCluster", "ControllerIntegrationTest.testControllerEpochPersistsWhenAllBrokersDown", "ControllerIntegrationTest.testControllerMoveIncrementsControllerEpoch", "ControllerIntegrationTest.testMetadataPropagationOnControlPlane", "ControllerIntegrationTest.testMetadataPropagationOnBrokerChange", "ControllerIntegrationTest.testMetadataPropagationForOfflineReplicas", "ControllerIntegrationTest.testMetadataPropagationOnBrokerShutdownWithNoReplicas", "ControllerIntegrationTest.testTopicCreation", "ControllerIntegrationTest.testTopicCreationWithOfflineReplica", "ControllerIntegrationTest.testTopicPartitionExpansion", "ControllerIntegrationTest.testTopicPartitionExpansionWithOfflineReplica", "ControllerIntegrationTest.testPartitionReassignment", "ControllerIntegrationTest.testPartitionReassignmentToBrokerWithOfflineLogDir", "ControllerIntegrationTest.testPartitionReassignmentWithOfflineReplicaHaltingProgress", "ControllerIntegrationTest.testPartitionReassignmentResumesAfterReplicaComesOnline", "ControllerIntegrationTest.testPreferredReplicaLeaderElection", "ControllerIntegrationTest.testBackToBackPreferredReplicaLeaderElections", "ControllerIntegrationTest.testPreferredReplicaLeaderElectionWithOfflinePreferredReplica", "ControllerIntegrationTest.testAutoPreferredReplicaLeaderElection", "ControllerIntegrationTest.testLeaderAndIsrWhenEntireIsrOfflineAndUncleanLeaderElectionDisabled", "ControllerIntegrationTest.testLeaderAndIsrWhenEntireIsrOfflineAndUncleanLeaderElectionEnabled", "ControllerIntegrationTest.testControlledShutdown", "ControllerIntegrationTest.testControllerRejectControlledShutdownRequestWithStaleBrokerEpoch", "ControllerIntegrationTest.testControllerMoveOnTopicCreation", "ControllerIntegrationTest.testControllerMoveOnTopicDeletion", "ControllerIntegrationTest.testControllerMoveOnPreferredReplicaElection", "ControllerIntegrationTest.testControllerMoveOnPartitionReassignment", "ControllerIntegrationTest.testControllerFeatureZNodeSetupWhenFeatureVersioningIsEnabledWithNonExistingFeatureZNode", "ControllerIntegrationTest.testControllerFeatureZNodeSetupWhenFeatureVersioningIsEnabledWithDisabledExistingFeatureZNode", "ControllerIntegrationTest.testControllerFeatureZNodeSetupWhenFeatureVersioningIsEnabledWithEnabledExistingFeatureZNode", "ControllerIntegrationTest.testControllerFeatureZNodeSetupWhenFeatureVersioningIsDisabledWithNonExistingFeatureZNode", "ControllerIntegrationTest.testControllerFeatureZNodeSetupWhenFeatureVersioningIsDisabledWithDisabledExistingFeatureZNode", "ControllerIntegrationTest.testControllerFeatureZNodeSetupWhenFeatureVersioningIsDisabledWithEnabledExistingFeatureZNode", "ControllerIntegrationTest.testControllerDetectsBouncedBrokers", "ControllerIntegrationTest.testPreemptionOnControllerShutdown", "ControllerIntegrationTest.testPreemptionWithCallbacks", "ControllerIntegrationTest.testAlterPartitionVersion2KeepWorkingWhenControllerDowngradeToPre28IBP", "ControllerIntegrationTest.testIdempotentAlterPartition", "ControllerIntegrationTest.testAlterPartitionErrors", "ControllerIntegrationTest.testAlterPartitionErrorsAfterUncleanElection", "ControllerIntegrationTest.testTopicIdsAreAdded", "ControllerIntegrationTest.testTopicIdsAreNotAdded", "ControllerIntegrationTest.testTopicIdMigrationAndHandling", "ControllerIntegrationTest.testTopicIdMigrationAndHandlingWithOlderVersion", "ControllerIntegrationTest.testTopicIdPersistsThroughControllerReelection", "ControllerIntegrationTest.testNoTopicIdPersistsThroughControllerReelection", "ControllerIntegrationTest.testTopicIdPersistsThroughControllerRestart", "ControllerIntegrationTest.testTopicIdCreatedOnUpgrade", "ControllerIntegrationTest.testTopicIdCreatedOnUpgradeMultiBrokerScenario", "ControllerIntegrationTest.testTopicIdUpgradeAfterReassigningPartitions", "ControllerChannelManagerTest.testLeaderAndIsrRequestSent", "ControllerChannelManagerTest.testLeaderAndIsrRequestIsNew", "ControllerChannelManagerTest.testLeaderAndIsrRequestSentToLiveOrShuttingDownBrokers", "ControllerChannelManagerTest.testLeaderAndIsrInterBrokerProtocolVersion", "ControllerChannelManagerTest.testUpdateMetadataRequestSent", "ControllerChannelManagerTest.testUpdateMetadataDoesNotIncludePartitionsWithoutLeaderAndIsr", "ControllerChannelManagerTest.testUpdateMetadataRequestDuringTopicDeletion", "ControllerChannelManagerTest.testUpdateMetadataIncludesLiveOrShuttingDownBrokers", "ControllerChannelManagerTest.testUpdateMetadataInterBrokerProtocolVersion", "ControllerChannelManagerTest.testStopReplicaRequestSent", "ControllerChannelManagerTest.testStopReplicaRequestWithAlreadyDefinedDeletedPartition", "ControllerChannelManagerTest.testStopReplicaRequestsWhileTopicQueuedForDeletion", "ControllerChannelManagerTest.testStopReplicaRequestsWhileTopicDeletionStarted", "ControllerChannelManagerTest.testStopReplicaRequestWithoutDeletePartitionWhileTopicDeletionStarted", "ControllerChannelManagerTest.testMixedDeleteAndNotDeleteStopReplicaRequests", "ControllerChannelManagerTest.testStopReplicaGroupsByBroker", "ControllerChannelManagerTest.testStopReplicaSentOnlyToLiveAndShuttingDownBrokers", "ControllerChannelManagerTest.testStopReplicaInterBrokerProtocolVersion", "ControllerEventManagerTest.testMetricsCleanedOnClose", "ControllerEventManagerTest.testEventWithoutRateMetrics", "ControllerEventManagerTest.testEventQueueTime", "ControllerEventManagerTest.testEventQueueTimeResetOnTimeout", "ControllerEventManagerTest.testSuccessfulEvent", "ControllerEventManagerTest.testEventThatThrowsException", "ZkNodeChangeNotificationListenerTest.testProcessNotification", "ZkNodeChangeNotificationListenerTest.testSwallowsProcessorException", "RaftManagerTest.testNodeIdPresentIfBrokerRoleOnly", "RaftManagerTest.testNodeIdPresentIfControllerRoleOnly", "RaftManagerTest.testNodeIdPresentIfColocated", "RaftManagerTest.testShutdownIoThread", "RaftManagerTest.testUncaughtExceptionInIoThread", "KafkaNetworkChannelTest.testSendToUnknownDestination", "KafkaNetworkChannelTest.testSendToBlackedOutDestination", "KafkaNetworkChannelTest.testWakeupClientOnSend", "KafkaNetworkChannelTest.testSendAndDisconnect", "KafkaNetworkChannelTest.testSendAndFailAuthentication", "KafkaNetworkChannelTest.testSendAndReceiveOutboundRequest", "KafkaNetworkChannelTest.testUnsupportedVersionError", "ApiUtilsTest.testShortStringNonASCII", "ApiUtilsTest.testShortStringASCII", "OffsetMapTest.testBasicValidation", "OffsetMapTest.testClear", "OffsetMapTest.testGetWhenFull", "TimeIndexTest.testLookUp", "TimeIndexTest.testEntry", "TimeIndexTest.testEntryOverflow", "TimeIndexTest.testTruncate", "TimeIndexTest.testAppend", "TimeIndexTest.testSanityCheck", "LogSegmentTest.testReadOnEmptySegment", "LogSegmentTest.testReadBeforeFirstOffset", "LogSegmentTest.testReadAfterLast", "LogSegmentTest.testReadFromGap", "LogSegmentTest.testTruncate", "LogSegmentTest.testTruncateEmptySegment", "LogSegmentTest.testReloadLargestTimestampAndNextOffsetAfterTruncation", "LogSegmentTest.testTruncateFull", "LogSegmentTest.testFindOffsetByTimestamp", "LogSegmentTest.testNextOffsetCalculation", "LogSegmentTest.testChangeFileSuffixes", "LogSegmentTest.testRecoveryFixesCorruptIndex", "LogSegmentTest.testRecoverTransactionIndex", "LogSegmentTest.testRecoveryRebuildsEpochCache", "LogSegmentTest.testRecoveryFixesCorruptTimeIndex", "LogSegmentTest.testRecoveryWithCorruptMessage", "LogSegmentTest.testCreateWithInitFileSizeAppendMessage", "LogSegmentTest.testCreateWithInitFileSizeClearShutdown", "LogSegmentTest.shouldTruncateEvenIfOffsetPointsToAGapInTheLog", "LogSegmentTest.testAppendFromFile", "LocalLogTest.testLogDeleteSegmentsSuccess", "LocalLogTest.testRollEmptyActiveSegment", "LocalLogTest.testLogDeleteDirSuccessWhenEmptyAndFailureWhenNonEmpty", "LocalLogTest.testUpdateConfig", "LocalLogTest.testLogDirRenameToNewDir", "LocalLogTest.testLogDirRenameToExistingDir", "LocalLogTest.testLogFlush", "LocalLogTest.testLogAppend", "LocalLogTest.testLogCloseSuccess", "LocalLogTest.testLogCloseIdempotent", "LocalLogTest.testLogCloseFailureWhenInMemoryBufferClosed", "LocalLogTest.testLogCloseHandlers", "LocalLogTest.testLogCloseHandlersIdempotent", "LocalLogTest.testRemoveAndDeleteSegmentsSync", "LocalLogTest.testRemoveAndDeleteSegmentsAsync", "LocalLogTest.testDeleteSegmentFilesSync", "LocalLogTest.testDeleteSegmentFilesAsync", "LocalLogTest.testDeletableSegmentsFilter", "LocalLogTest.testDeletableSegmentsIteration", "LocalLogTest.testCreateAndDeleteSegment", "LocalLogTest.testTruncateFullyAndStartAt", "LocalLogTest.testTruncateTo", "LocalLogTest.testNonActiveSegmentsFrom", "LocalLogTest.testParseTopicPartitionName", "LocalLogTest.testParseTopicPartitionNameWithPeriodForDeletedTopic", "LocalLogTest.testParseTopicPartitionNameForEmptyName", "LocalLogTest.testParseTopicPartitionNameForNull", "LocalLogTest.testParseTopicPartitionNameForMissingSeparator", "LocalLogTest.testParseTopicPartitionNameForMissingTopic", "LocalLogTest.testParseTopicPartitionNameForMissingPartition", "LocalLogTest.testParseTopicPartitionNameForInvalidPartition", "LocalLogTest.testParseTopicPartitionNameForExistingInvalidDir", "LocalLogTest.testLogDeleteDirName", "LocalLogTest.testOffsetFromFile", "LocalLogTest.testRollSegmentThatAlreadyExists", "LocalLogTest.testNewSegmentsAfterRoll", "LocalLogTest.testRollSegmentErrorWhenNextOffsetIsIllegal", "LogCleanerIntegrationTest.testMarksPartitionsAsOfflineAndPopulatesUncleanableMetrics", "LogCleanerIntegrationTest.testMaxLogCompactionLag", "LogCleanerIntegrationTest.testIsThreadFailed", "LogLoaderTest.testLogRecoveryIsCalledUponBrokerCrash", "LogLoaderTest.testProducerSnapshotsRecoveryAfterUncleanShutdownV1", "LogLoaderTest.testProducerSnapshotsRecoveryAfterUncleanShutdownCurrentMessageFormat", "LogLoaderTest.testSkipLoadingIfEmptyProducerStateBeforeTruncation", "LogLoaderTest.testRecoverAfterNonMonotonicCoordinatorEpochWrite", "LogLoaderTest.testSkipTruncateAndReloadIfOldMessageFormatAndNoCleanShutdown", "LogLoaderTest.testSkipTruncateAndReloadIfOldMessageFormatAndCleanShutdown", "LogLoaderTest.testSkipTruncateAndReloadIfNewMessageFormatAndCleanShutdown", "LogLoaderTest.testLoadProducersAfterDeleteRecordsMidSegment", "LogLoaderTest.testLoadingLogKeepsLargestStrayProducerStateSnapshot", "LogLoaderTest.testLoadProducersAfterDeleteRecordsOnSegment", "LogLoaderTest.testLogRecoversToCorrectOffset", "LogLoaderTest.testIndexRebuild", "LogLoaderTest.testRebuildTimeIndexForOldMessages", "LogLoaderTest.testCorruptIndexRebuild", "LogLoaderTest.testBogusIndexSegmentsAreRemoved", "LogLoaderTest.testReopenThenTruncate", "LogLoaderTest.testOpenDeletesObsoleteFiles", "LogLoaderTest.testCorruptLog", "LogLoaderTest.testOverCompactedLogRecovery", "LogLoaderTest.testLeaderEpochCacheClearedAfterStaticMessageFormatDowngrade", "LogLoaderTest.testOverCompactedLogRecoveryMultiRecord", "LogLoaderTest.testOverCompactedLogRecoveryMultiRecordV1", "LogLoaderTest.testRecoveryOfSegmentWithOffsetOverflow", "LogLoaderTest.testRecoveryAfterCrashDuringSplitPhase1", "LogLoaderTest.testRecoveryAfterCrashDuringSplitPhase2", "LogLoaderTest.testRecoveryAfterCrashDuringSplitPhase3", "LogLoaderTest.testRecoveryAfterCrashDuringSplitPhase4", "LogLoaderTest.testRecoveryAfterCrashDuringSplitPhase5", "LogLoaderTest.testCleanShutdownFile", "LogLoaderTest.testLogRecoversForLeaderEpoch", "LogLoaderTest.testFullTransactionIndexRecovery", "LogLoaderTest.testRecoverOnlyLastSegment", "LogLoaderTest.testRecoverLastSegmentWithNoSnapshots", "LogLoaderTest.testLogEndLessThanStartAfterReopen", "LogLoaderTest.testCorruptedLogRecoveryDoesNotDeleteProducerStateSnapshotsPostRecovery", "LogLoaderTest.testRecoverWithEmptyActiveSegment", "LogValidatorTest.testOnlyOneBatch", "LogValidatorTest.testAllowMultiBatch", "LogValidatorTest.testValidationOfBatchesWithNonSequentialInnerOffsets", "LogValidatorTest.testMisMatchMagic", "LogValidatorTest.testLogAppendTimeNonCompressedV1", "LogValidatorTest.testLogAppendTimeNonCompressedV2", "LogValidatorTest.testLogAppendTimeWithRecompressionV1", "LogValidatorTest.testLogAppendTimeWithRecompressionV2", "LogValidatorTest.testLogAppendTimeWithoutRecompressionV1", "LogValidatorTest.testInvalidOffsetRangeAndRecordCount", "LogValidatorTest.testLogAppendTimeWithoutRecompressionV2", "LogValidatorTest.testNonCompressedV1", "LogValidatorTest.testNonCompressedV2", "LogValidatorTest.testRecompressionV1", "LogValidatorTest.testRecompressionV2", "LogValidatorTest.testCreateTimeUpConversionV0ToV1", "LogValidatorTest.testCreateTimeUpConversionV0ToV2", "LogValidatorTest.testCreateTimeUpConversionV1ToV2", "LogValidatorTest.testCompressedV1", "LogValidatorTest.testCompressedV2", "LogValidatorTest.testInvalidCreateTimeNonCompressedV1", "LogValidatorTest.testInvalidCreateTimeNonCompressedV2", "LogValidatorTest.testInvalidCreateTimeCompressedV1", "LogValidatorTest.testInvalidCreateTimeCompressedV2", "LogValidatorTest.testAbsoluteOffsetAssignmentNonCompressed", "LogValidatorTest.testAbsoluteOffsetAssignmentCompressed", "LogValidatorTest.testRelativeOffsetAssignmentNonCompressedV1", "LogValidatorTest.testRelativeOffsetAssignmentNonCompressedV2", "LogValidatorTest.testRelativeOffsetAssignmentCompressedV1", "LogValidatorTest.testRelativeOffsetAssignmentCompressedV2", "LogValidatorTest.testOffsetAssignmentAfterUpConversionV0ToV1NonCompressed", "LogValidatorTest.testOffsetAssignmentAfterUpConversionV0ToV2NonCompressed", "LogValidatorTest.testOffsetAssignmentAfterUpConversionV0ToV1Compressed", "LogValidatorTest.testOffsetAssignmentAfterUpConversionV0ToV2Compressed", "LogValidatorTest.testControlRecordsNotAllowedFromClients", "LogValidatorTest.testControlRecordsNotCompressed", "LogValidatorTest.testOffsetAssignmentAfterDownConversionV1ToV0NonCompressed", "LogValidatorTest.testOffsetAssignmentAfterDownConversionV1ToV0Compressed", "LogValidatorTest.testOffsetAssignmentAfterUpConversionV1ToV2NonCompressed", "LogValidatorTest.testOffsetAssignmentAfterUpConversionV1ToV2Compressed", "LogValidatorTest.testOffsetAssignmentAfterDownConversionV2ToV1NonCompressed", "LogValidatorTest.testOffsetAssignmentAfterDownConversionV2ToV1Compressed", "LogValidatorTest.testDownConversionOfTransactionalRecordsNotPermitted", "LogValidatorTest.testDownConversionOfIdempotentRecordsNotPermitted", "LogValidatorTest.testOffsetAssignmentAfterDownConversionV2ToV0NonCompressed", "LogValidatorTest.testOffsetAssignmentAfterDownConversionV2ToV0Compressed", "LogValidatorTest.testNonIncreasingOffsetRecordBatchHasMetricsLogged", "LogValidatorTest.testCompressedBatchWithoutRecordsNotAllowed", "LogValidatorTest.testZStdCompressedWithUnavailableIBPVersion", "LogValidatorTest.testUncompressedBatchWithoutRecordsNotAllowed", "LogValidatorTest.testRecompressedBatchWithoutRecordsNotAllowed", "LogValidatorTest.testInvalidTimestampExceptionHasBatchIndex", "LogValidatorTest.testInvalidRecordExceptionHasBatchIndex", "LogValidatorTest.testBatchWithInvalidRecordsAndInvalidTimestamp", "LogCleanerManagerTest.testGrabFilthiestCompactedLogThrowsException", "LogCleanerManagerTest.testGrabFilthiestCompactedLogReturnsLogWithDirtiestRatio", "LogCleanerManagerTest.testGrabFilthiestCompactedLogIgnoresUncleanablePartitions", "LogCleanerManagerTest.testGrabFilthiestCompactedLogIgnoresInProgressPartitions", "LogCleanerManagerTest.testGrabFilthiestCompactedLogIgnoresBothInProgressPartitionsAndUncleanablePartitions", "LogCleanerManagerTest.testDirtyOffsetResetIfLargerThanEndOffset", "LogCleanerManagerTest.testDirtyOffsetResetIfSmallerThanStartOffset", "LogCleanerManagerTest.testLogStartOffsetLargerThanActiveSegmentBaseOffset", "LogCleanerManagerTest.testDirtyOffsetLargerThanActiveSegmentBaseOffset", "LogCleanerManagerTest.testLogsWithSegmentsToDeleteShouldNotConsiderCleanupPolicyDeleteLogs", "LogCleanerManagerTest.testLogsWithSegmentsToDeleteShouldConsiderCleanupPolicyCompactDeleteLogs", "LogCleanerManagerTest.testLogsWithSegmentsToDeleteShouldConsiderCleanupPolicyCompactLogs", "LogCleanerManagerTest.testLogsUnderCleanupIneligibleForCompaction", "LogCleanerManagerTest.testUpdateCheckpointsShouldAddOffsetToPartition", "LogCleanerManagerTest.testUpdateCheckpointsShouldRemovePartitionData", "LogCleanerManagerTest.testHandleLogDirFailureShouldRemoveDirAndData", "LogCleanerManagerTest.testMaybeTruncateCheckpointShouldTruncateData", "LogCleanerManagerTest.testAlterCheckpointDirShouldRemoveDataInSrcDirAndAddInNewDir", "LogCleanerManagerTest.testConcurrentLogCleanupAndLogTruncation", "LogCleanerManagerTest.testConcurrentLogCleanupAndTopicDeletion", "LogCleanerManagerTest.testLogsWithSegmentsToDeleteShouldNotConsiderUncleanablePartitions", "LogCleanerManagerTest.testCleanableOffsetsForNone", "LogCleanerManagerTest.testCleanableOffsetsActiveSegment", "LogCleanerManagerTest.testCleanableOffsetsForTime", "LogCleanerManagerTest.testCleanableOffsetsForShortTime", "LogCleanerManagerTest.testCleanableOffsetsNeedsCheckpointReset", "LogCleanerManagerTest.testUndecidedTransactionalDataNotCleanable", "LogCleanerManagerTest.testDoneCleaning", "LogCleanerManagerTest.testDoneDeleting", "LogCleanerManagerTest.testCheckpointUpdatedForInvalidOffsetNoCleaning", "LogCleanerManagerTest.testCheckpointUpdatedForInvalidOffsetNotSelected", "OffsetIndexTest.randomLookupTest", "OffsetIndexTest.lookupExtremeCases", "OffsetIndexTest.testEntry", "OffsetIndexTest.testEntryOverflow", "OffsetIndexTest.appendTooMany", "OffsetIndexTest.appendOutOfOrder", "OffsetIndexTest.testFetchUpperBoundOffset", "OffsetIndexTest.testReopen", "OffsetIndexTest.truncate", "OffsetIndexTest.forceUnmapTest", "OffsetIndexTest.testSanityLastOffsetEqualToBaseOffset", "LogSegmentsTest.testBasicOperations", "LogSegmentsTest.testSegmentAccess", "LogSegmentsTest.testClosestMatchOperations", "LogSegmentsTest.testHigherSegments", "LogSegmentsTest.testSizeForLargeLogs", "LogCleanerTest.testCleanSegments", "LogCleanerTest.testCleanSegmentsWithConcurrentSegmentDeletion", "LogCleanerTest.testSizeTrimmedForPreallocatedAndCompactedTopic", "LogCleanerTest.testDuplicateCheckAfterCleaning", "LogCleanerTest.testMultiPassSegmentCleaningWithAbortedTransactions", "LogCleanerTest.testBasicTransactionAwareCleaning", "LogCleanerTest.testCleanWithTransactionsSpanningSegments", "LogCleanerTest.testCommitMarkerRemoval", "LogCleanerTest.testDeletedBatchesWithNoMessagesRead", "LogCleanerTest.testCommitMarkerRetentionWithEmptyBatch", "LogCleanerTest.testCleanEmptyControlBatch", "LogCleanerTest.testCommittedTransactionSpanningSegments", "LogCleanerTest.testAbortedTransactionSpanningSegments", "LogCleanerTest.testAbortMarkerRemoval", "LogCleanerTest.testEmptyBatchRemovalWithSequenceReuse", "LogCleanerTest.testAbortMarkerRetentionWithEmptyBatch", "LogCleanerTest.testLargeMessage", "LogCleanerTest.testMessageLargerThanMaxMessageSize", "LogCleanerTest.testMessageLargerThanMaxMessageSizeWithCorruptHeader", "LogCleanerTest.testCorruptMessageSizeLargerThanBytesAvailable", "LogCleanerTest.testCleaningWithDeletes", "LogCleanerTest.testLogCleanerStats", "LogCleanerTest.testLogCleanerRetainsProducerLastSequence", "LogCleanerTest.testLogCleanerRetainsLastSequenceEvenIfTransactionAborted", "LogCleanerTest.testCleaningWithKeysConflictingWithTxnMarkerKeys", "LogCleanerTest.testPartialSegmentClean", "LogCleanerTest.testCleaningWithUncleanableSection", "LogCleanerTest.testLogToClean", "LogCleanerTest.testLogToCleanWithUncleanableSection", "LogCleanerTest.testCleaningWithUnkeyedMessages", "LogCleanerTest.testCleanSegmentsWithAbort", "LogCleanerTest.testSegmentGrouping", "LogCleanerTest.testSegmentGroupingWithSparseOffsetsAndEmptySegments", "LogCleanerTest.testSegmentGroupingWithSparseOffsets", "LogCleanerTest.testSegmentGroupingFollowingLoadOfZeroIndex", "LogCleanerTest.testBuildOffsetMap", "LogCleanerTest.testSegmentWithOffsetOverflow", "LogCleanerTest.testRecoveryAfterCrash", "LogCleanerTest.testBuildOffsetMapFakeLarge", "LogCleanerTest.testBuildPartialOffsetMap", "LogCleanerTest.testCleanCorruptMessageSet", "LogCleanerTest.testClientHandlingOfCorruptMessageSet", "LogCleanerTest.testCleanTombstone", "LogCleanerTest.testCleaningBeyondMissingOffsets", "LogCleanerTest.testMaxCleanTimeSecs", "LogCleanerTest.testReconfigureLogCleanerIoMaxBytesPerSecond", "TransactionIndexTest.testPositionSetCorrectlyWhenOpened", "TransactionIndexTest.testSanityCheck", "TransactionIndexTest.testLastOffsetMustIncrease", "TransactionIndexTest.testLastOffsetCannotDecrease", "TransactionIndexTest.testCollectAbortedTransactions", "TransactionIndexTest.testTruncate", "TransactionIndexTest.testAbortedTxnSerde", "TransactionIndexTest.testRenameIndex", "UnifiedLogTest.testHighWatermarkMetadataUpdatedAfterSegmentRoll", "UnifiedLogTest.testAppendAsLeaderWithRaftLeader", "UnifiedLogTest.testAppendInfoFirstOffset", "UnifiedLogTest.testTruncateBelowFirstUnstableOffset", "UnifiedLogTest.testTruncateFullyAndStartBelowFirstUnstableOffset", "UnifiedLogTest.testHighWatermarkMaintenance", "UnifiedLogTest.testFetchUpToLogEndOffset", "UnifiedLogTest.testFetchUpToHighWatermark", "UnifiedLogTest.testActiveProducers", "UnifiedLogTest.testFetchUpToLastStableOffset", "UnifiedLogTest.testOffsetFromProducerSnapshotFile", "UnifiedLogTest.testTimeBasedLogRollDuringAppend", "UnifiedLogTest.testRollSegmentThatAlreadyExists", "UnifiedLogTest.testNonSequentialAppend", "UnifiedLogTest.testTruncateToEndOffsetClearsEpochCache", "UnifiedLogTest.testLogSegmentsCallCorrect", "UnifiedLogTest.testInitializationOfProducerSnapshotsUpgradePath", "UnifiedLogTest.testLogReinitializeAfterManualDelete", "UnifiedLogTest.testProducerExpireCheckAfterDelete", "UnifiedLogTest.testProducerIdMapOffsetUpdatedForNonIdempotentData", "UnifiedLogTest.testRebuildProducerIdMapWithCompactedData", "UnifiedLogTest.testRebuildProducerStateWithEmptyCompactedBatch", "UnifiedLogTest.testUpdateProducerIdMapWithCompactedData", "UnifiedLogTest.testProducerIdMapTruncateTo", "UnifiedLogTest.testProducerIdMapTruncateToWithNoSnapshots", "UnifiedLogTest.testRetentionDeletesProducerStateSnapshots", "UnifiedLogTest.testRetentionIdempotency", "UnifiedLogTest.testLogStartOffsetMovementDeletesSnapshots", "UnifiedLogTest.testCompactionDeletesProducerStateSnapshots", "UnifiedLogTest.testLoadingLogDeletesProducerStateSnapshotsPastLogEndOffset", "UnifiedLogTest.testProducerIdMapTruncateFullyAndStartAt", "UnifiedLogTest.testProducerIdExpirationOnSegmentDeletion", "UnifiedLogTest.testTakeSnapshotOnRollAndDeleteSnapshotOnRecoveryPointCheckpoint", "UnifiedLogTest.testProducerSnapshotAfterSegmentRollOnAppend", "UnifiedLogTest.testRebuildTransactionalState", "UnifiedLogTest.testPeriodicProducerIdExpiration", "UnifiedLogTest.testDuplicateAppends", "UnifiedLogTest.testMultipleProducerIdsPerMemoryRecord", "UnifiedLogTest.testDuplicateAppendToFollower", "UnifiedLogTest.testMultipleProducersWithDuplicatesInSingleAppend", "UnifiedLogTest.testOldProducerEpoch", "UnifiedLogTest.testDeleteSnapshotsOnIncrementLogStartOffset", "UnifiedLogTest.testTimeBasedLogRollJitter", "UnifiedLogTest.testSizeBasedLogRoll", "UnifiedLogTest.testLoadEmptyLog", "UnifiedLogTest.testAppendAndReadWithSequentialOffsets", "UnifiedLogTest.testAppendAndReadWithNonSequentialOffsets", "UnifiedLogTest.testReadAtLogGap", "UnifiedLogTest.testLogRollAfterLogHandlerClosed", "UnifiedLogTest.testReadWithMinMessage", "UnifiedLogTest.testReadWithTooSmallMaxLength", "UnifiedLogTest.testReadOutOfRange", "UnifiedLogTest.testFlushingEmptyActiveSegments", "UnifiedLogTest.testLogRolls", "UnifiedLogTest.testCompressedMessages", "UnifiedLogTest.testThatGarbageCollectingSegmentsDoesntChangeOffset", "UnifiedLogTest.testMessageSetSizeCheck", "UnifiedLogTest.testCompactedTopicConstraints", "UnifiedLogTest.testMessageSizeCheck", "UnifiedLogTest.testMessageSizeCheckInAppendAsFollower", "UnifiedLogTest.testLogFlushesPartitionMetadataOnAppend", "UnifiedLogTest.testLogFlushesPartitionMetadataOnClose", "UnifiedLogTest.testLogRecoversTopicId", "UnifiedLogTest.testNoOpWhenKeepPartitionMetadataFileIsFalse", "UnifiedLogTest.testLogFailsWhenInconsistentTopicIdSet", "UnifiedLogTest.testBuildTimeIndexWhenNotAssigningOffsets", "UnifiedLogTest.testFetchOffsetByTimestampIncludesLeaderEpoch", "UnifiedLogTest.testFetchOffsetByTimestampWithMaxTimestampIncludesTimestamp", "UnifiedLogTest.testTruncateTo", "UnifiedLogTest.testIndexResizingAtTruncation", "UnifiedLogTest.testAsyncDelete", "UnifiedLogTest.testAppendMessageWithNullPayload", "UnifiedLogTest.testAppendWithOutOfOrderOffsetsThrowsException", "UnifiedLogTest.testAppendBelowExpectedOffsetThrowsException", "UnifiedLogTest.testAppendEmptyLogBelowLogStartOffsetThrowsException", "UnifiedLogTest.testAppendWithNoTimestamp", "UnifiedLogTest.testAppendToOrReadFromLogInFailedLogDir", "UnifiedLogTest.testWriteLeaderEpochCheckpointAfterDirectoryRename", "UnifiedLogTest.testTopicIdTransfersAfterDirectoryRename", "UnifiedLogTest.testTopicIdFlushesBeforeDirectoryRename", "UnifiedLogTest.testLeaderEpochCacheClearedAfterDowngradeInAppendedMessages", "UnifiedLogTest.testLeaderEpochCacheClearedAfterDynamicMessageFormatDowngrade", "UnifiedLogTest.testLeaderEpochCacheCreatedAfterMessageFormatUpgrade", "UnifiedLogTest.testSplitOnOffsetOverflow", "UnifiedLogTest.testDegenerateSegmentSplit", "UnifiedLogTest.testDegenerateSegmentSplitWithOutOfRangeBatchLastOffset", "UnifiedLogTest.testDeleteOldSegments", "UnifiedLogTest.testLogDeletionAfterClose", "UnifiedLogTest.testLogDeletionAfterDeleteRecords", "UnifiedLogTest.shouldDeleteSizeBasedSegments", "UnifiedLogTest.shouldNotDeleteSizeBasedSegmentsWhenUnderRetentionSize", "UnifiedLogTest.shouldDeleteTimeBasedSegmentsReadyToBeDeleted", "UnifiedLogTest.shouldNotDeleteTimeBasedSegmentsWhenNoneReadyToBeDeleted", "UnifiedLogTest.shouldNotDeleteSegmentsWhenPolicyDoesNotIncludeDelete", "UnifiedLogTest.shouldDeleteSegmentsReadyToBeDeletedWhenCleanupPolicyIsCompactAndDelete", "UnifiedLogTest.shouldDeleteStartOffsetBreachedSegmentsWhenPolicyDoesNotIncludeDelete", "UnifiedLogTest.shouldApplyEpochToMessageOnAppendIfLeader", "UnifiedLogTest.followerShouldSaveEpochInformationFromReplicatedMessagesToTheEpochCache", "UnifiedLogTest.shouldTruncateLeaderEpochsWhenDeletingSegments", "UnifiedLogTest.shouldUpdateOffsetForLeaderEpochsWhenDeletingSegments", "UnifiedLogTest.shouldTruncateLeaderEpochCheckpointFileWhenTruncatingLog", "UnifiedLogTest.testFirstUnstableOffsetNoTransactionalData", "UnifiedLogTest.testFirstUnstableOffsetWithTransactionalData", "UnifiedLogTest.testReadCommittedWithConcurrentHighWatermarkUpdates", "UnifiedLogTest.testTransactionIndexUpdated", "UnifiedLogTest.testTransactionIndexUpdatedThroughReplication", "UnifiedLogTest.testZombieCoordinatorFenced", "UnifiedLogTest.testZombieCoordinatorFencedEmptyTransaction", "UnifiedLogTest.testEndTxnWithFencedProducerEpoch", "UnifiedLogTest.testLastStableOffsetDoesNotExceedLogStartOffsetMidSegment", "UnifiedLogTest.testLastStableOffsetDoesNotExceedLogStartOffsetAfterSegmentDeletion", "UnifiedLogTest.testAppendToTransactionIndexFailure", "UnifiedLogTest.testOffsetSnapshot", "UnifiedLogTest.testLastStableOffsetWithMixedProducerData", "UnifiedLogTest.testAbortedTransactionSpanningMultipleSegments", "UnifiedLogTest.testLoadPartitionDirWithNoSegmentsShouldNotThrow", "UnifiedLogTest.testSegmentDeletionWithHighWatermarkInitialization", "UnifiedLogTest.testCannotDeleteSegmentsAtOrAboveHighWatermark", "UnifiedLogTest.testCannotIncrementLogStartOffsetPastHighWatermark", "UnifiedLogTest.testRenamingDirWithoutReinitialization", "ProducerStateManagerTest.testBasicIdMapping", "ProducerStateManagerTest.testAppendTxnMarkerWithNoProducerState", "ProducerStateManagerTest.testProducerSequenceWrapAround", "ProducerStateManagerTest.testProducerSequenceWithWrapAroundBatchRecord", "ProducerStateManagerTest.testProducerSequenceInvalidWrapAround", "ProducerStateManagerTest.testNoValidationOnFirstEntryWhenLoadingLog", "ProducerStateManagerTest.testControlRecordBumpsProducerEpoch", "ProducerStateManagerTest.testTxnFirstOffsetMetadataCached", "ProducerStateManagerTest.testSkipEmptyTransactions", "ProducerStateManagerTest.testHasLateTransaction", "ProducerStateManagerTest.testHasLateTransactionInitializedAfterReload", "ProducerStateManagerTest.testHasLateTransactionUpdatedAfterPartialTruncation", "ProducerStateManagerTest.testHasLateTransactionUpdatedAfterFullTruncation", "ProducerStateManagerTest.testLastStableOffsetCompletedTxn", "ProducerStateManagerTest.testPrepareUpdateDoesNotMutate", "ProducerStateManagerTest.updateProducerTransactionState", "ProducerStateManagerTest.testOutOfSequenceAfterControlRecordEpochBump", "ProducerStateManagerTest.testNonTransactionalAppendWithOngoingTransaction", "ProducerStateManagerTest.testTruncateAndReloadRemovesOutOfRangeSnapshots", "ProducerStateManagerTest.testTakeSnapshot", "ProducerStateManagerTest.testRecoverFromSnapshotUnfinishedTransaction", "ProducerStateManagerTest.testRecoverFromSnapshotFinishedTransaction", "ProducerStateManagerTest.testRecoverFromSnapshotEmptyTransaction", "ProducerStateManagerTest.testProducerStateAfterFencingAbortMarker", "ProducerStateManagerTest.testRemoveExpiredPidsOnReload", "ProducerStateManagerTest.testAcceptAppendWithoutProducerStateOnReplica", "ProducerStateManagerTest.testAcceptAppendWithSequenceGapsOnReplica", "ProducerStateManagerTest.testDeleteSnapshotsBefore", "ProducerStateManagerTest.testTruncateFullyAndStartAt", "ProducerStateManagerTest.testFirstUnstableOffsetAfterTruncation", "ProducerStateManagerTest.testLoadFromSnapshotRetainsNonExpiredProducers", "ProducerStateManagerTest.testSkipSnapshotIfOffsetUnchanged", "ProducerStateManagerTest.testPidExpirationTimeout", "ProducerStateManagerTest.testFirstUnstableOffset", "ProducerStateManagerTest.testProducersWithOngoingTransactionsDontExpire", "ProducerStateManagerTest.testSequenceNotValidatedForGroupMetadataTopic", "ProducerStateManagerTest.testOldEpochForControlRecord", "ProducerStateManagerTest.testCoordinatorFencing", "ProducerStateManagerTest.testCoordinatorFencedAfterReload", "ProducerStateManagerTest.testLoadFromEmptySnapshotFile", "ProducerStateManagerTest.testLoadFromTruncatedSnapshotFile", "ProducerStateManagerTest.testLoadFromCorruptSnapshotFile", "ProducerStateManagerTest.testAppendEmptyControlBatch", "ProducerStateManagerTest.testRemoveStraySnapshotsKeepCleanShutdownSnapshot", "ProducerStateManagerTest.testRemoveAllStraySnapshots", "ProducerStateManagerTest.testRemoveAndMarkSnapshotForDeletion", "ProducerStateManagerTest.testRemoveAndMarkSnapshotForDeletionAlreadyDeleted", "LogConfigTest.ensureNoStaticInitializationOrderDependency", "LogConfigTest.testKafkaConfigToProps", "LogConfigTest.testFromPropsEmpty", "LogConfigTest.testFromPropsInvalid", "LogConfigTest.testInvalidCompactionLagConfig", "LogConfigTest.shouldValidateThrottledReplicasConfig", "LogConfigTest.testToHtmlTable", "LogConfigTest.testToHtml", "LogConfigTest.testToEnrichedRst", "LogConfigTest.testToRst", "LogConfigTest.testGetConfigValue", "LogConfigTest.testOverriddenConfigsAsLoggableString", "LogConfigTest.testLocalLogRetentionDerivedProps", "LogConfigTest.testLocalLogRetentionDerivedDefaultProps", "LogConfigTest.testLocalLogRetentionProps", "LogConfigTest.testInvalidLocalLogRetentionProps", "LogManagerTest.testCreateLog", "LogManagerTest.testHandlingExceptionsDuringShutdown", "LogManagerTest.testCreateLogWithInvalidLogDir", "LogManagerTest.testCreateLogWithLogDirFallback", "LogManagerTest.testGetNonExistentLog", "LogManagerTest.testCleanupExpiredSegments", "LogManagerTest.testCleanupSegmentsToMaintainSize", "LogManagerTest.testDoesntCleanLogsWithCompactDeletePolicy", "LogManagerTest.testDoesntCleanLogsWithCompactPolicy", "LogManagerTest.testTimeBasedFlush", "LogManagerTest.testLeastLoadedAssignment", "LogManagerTest.testTwoLogManagersUsingSameDirFails", "LogManagerTest.testCheckpointRecoveryPoints", "LogManagerTest.testRecoveryDirectoryMappingWithTrailingSlash", "LogManagerTest.testRecoveryDirectoryMappingWithRelativeDirectory", "LogManagerTest.testFileReferencesAfterAsyncDelete", "LogManagerTest.testCreateAndDeleteOverlyLongTopic", "LogManagerTest.testCheckpointForOnlyAffectedLogs", "LogManagerTest.testTopicConfigChangeUpdatesLogConfig", "LogManagerTest.testConfigChangeGetsCleanedUp", "LogManagerTest.testBrokerConfigChangeDeliveredToAllLogs", "LogManagerTest.testTopicConfigChangeStopCleaningIfCompactIsRemoved", "LogManagerTest.testConfigChangesWithNoLogGettingInitialized", "LogManagerTest.testLogRecoveryMetrics", "LogManagerTest.testLogRecoveryMetricsShouldBeRemovedAfterLogRecovered", "LogManagerTest.testMetricsExistWhenLogIsRecreatedBeforeDeletion", "LogManagerTest.testMetricsAreRemovedWhenMovingCurrentToFutureLog", "LogManagerTest.testWaitForAllToComplete", "LogConcurrencyTest.testUncommittedDataNotConsumed", "LogConcurrencyTest.testUncommittedDataNotConsumedFrequentSegmentRolls"]