From 19517a2b1cabbbc500793d50aaeb132847110a90 Mon Sep 17 00:00:00 2001
From: KobeNorris <kobenorriswu@gmail.com>
Date: Mon, 5 Dec 2022 19:47:44 -0600
Subject: [PATCH 1/2] feat: Update pom files

---
 hadoop-common-project/hadoop-common/pom.xml               | 1 +
 .../hadoop-yarn-server-timelineservice/pom.xml            | 8 ++++++++
 hadoop-yarn-project/hadoop-yarn/pom.xml                   | 1 +
 pom.xml                                                   | 7 +++++++
 4 files changed, 17 insertions(+)

diff --git a/hadoop-common-project/hadoop-common/pom.xml b/hadoop-common-project/hadoop-common/pom.xml
index 530e18e4b83..984eceb74ff 100644
--- a/hadoop-common-project/hadoop-common/pom.xml
+++ b/hadoop-common-project/hadoop-common/pom.xml
@@ -911,6 +911,7 @@
           <plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-surefire-plugin</artifactId>
+            <version>3.0.0-M4</version>
             <configuration>
               <forkCount>${testsThreadCount}</forkCount>
               <reuseForks>false</reuseForks>
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/pom.xml b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/pom.xml
index 1aca83c617b..bf017a1711f 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/pom.xml
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/pom.xml
@@ -146,6 +146,14 @@
 
   <build>
     <plugins>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-surefire-plugin</artifactId>
+        <version>3.0.0-M4</version>
+        <configuration>
+          <reportFormat>plain</reportFormat>
+        </configuration>
+      </plugin>
       <plugin>
         <artifactId>maven-jar-plugin</artifactId>
         <executions>
diff --git a/hadoop-yarn-project/hadoop-yarn/pom.xml b/hadoop-yarn-project/hadoop-yarn/pom.xml
index ddc4e875279..b7c85a1dad8 100644
--- a/hadoop-yarn-project/hadoop-yarn/pom.xml
+++ b/hadoop-yarn-project/hadoop-yarn/pom.xml
@@ -62,6 +62,7 @@
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-surefire-plugin</artifactId>
+        <version>3.0.0-M4</version>
         <configuration>
           <properties>
             <property>
diff --git a/pom.xml b/pom.xml
index f4e435c7493..f1611bfab1a 100644
--- a/pom.xml
+++ b/pom.xml
@@ -142,6 +142,13 @@ xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/x
   <build>
     <pluginManagement>
       <plugins>
+       <plugin>
+          <groupId>org.apache.maven.plugins</groupId>
+          <artifactId>maven-surefire-plugin</artifactId>
+          <configuration>
+            <reportFormat>plain</reportFormat>
+          </configuration>
+        </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-dependency-plugin</artifactId>
-- 
2.25.1


From 1982ee85c338a1f4b3dd4c01aa0618155142dcdd Mon Sep 17 00:00:00 2001
From: KobeNorris <kobenorriswu@gmail.com>
Date: Mon, 5 Dec 2022 20:12:27 -0600
Subject: [PATCH 2/2] feat: Instrumentalize Configuration file

---
 .../org/apache/hadoop/conf/Configuration.java | 71 ++++++++++++++++---
 1 file changed, 61 insertions(+), 10 deletions(-)

diff --git a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
index 818ef37eb79..5cc2421d118 100755
--- a/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
+++ b/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java
@@ -786,6 +786,7 @@ private void handleDeprecation() {
     // Add default resources
     addDefaultResource("core-default.xml");
     addDefaultResource("core-site.xml");
+    // addDefaultResource("core-ctest.xml");
 
     // print deprecation warning if hadoop-site.xml is found in classpath
     ClassLoader cL = Thread.currentThread().getContextClassLoader();
@@ -800,6 +801,7 @@ private void handleDeprecation() {
           "respectively");
       addDefaultResource("hadoop-site.xml");
     }
+    // LOG.warn("1 Loaded");
   }
 
   private Properties properties;
@@ -1224,6 +1226,21 @@ String getProperty(String key) {
     }
   }
 
+  /**
+   * Get the appliance stack trace information of the current thread
+   * 
+   * @return the appliance stack trace information of the current thread.
+   */
+  private String getStackTrace() {
+    // String stacktrace = " ";
+    // for (StackTraceElement element : Thread.currentThread().getStackTrace()) {
+    //   // stacktrace = stacktrace.concat(element.getClassName() + "\t");
+    //   stacktrace = stacktrace.concat(element.getClassName() + '#' + element.getMethodName() + ' ');
+    // }
+    // return stacktrace;
+    return "";
+  }
+
   /**
    * Get the value of the <code>name</code> property, <code>null</code> if
    * no such property exists. If the key is deprecated, it returns the value of
@@ -1240,11 +1257,15 @@ String getProperty(String key) {
    *         or null if no such property exists.
    */
   public String get(String name) {
+    String ctestParam = name; // CTEST
     String[] names = handleDeprecation(deprecationContext.get(), name);
     String result = null;
     for(String n : names) {
+      ctestParam = n; // CTEST
       result = substituteVars(getProps().getProperty(n));
     }
+    // LOG.warn("[CTEST][GET-PARAM] " + ctestParam + getStackTrace()); //CTEST
+    LOG.warn("[CTEST][GET-PARAM-KEY-VALUE] " + ctestParam + ":" + result); //CTEST
     return result;
   }
 
@@ -1332,11 +1353,14 @@ public String getTrimmed(String name, String defaultValue) {
    *         its replacing property and null if no such property exists.
    */
   public String getRaw(String name) {
+    String ctestParam = name; //CTEST
     String[] names = handleDeprecation(deprecationContext.get(), name);
     String result = null;
     for(String n : names) {
+      ctestParam = n; //CTEST
       result = getProps().getProperty(n);
     }
+    LOG.warn("[CTEST][GET-PARAM] " + ctestParam + getStackTrace()); //CTEST
     return result;
   }
 
@@ -1383,6 +1407,20 @@ public String getRaw(String name) {
   public void set(String name, String value) {
     set(name, value, null);
   }
+
+  /** 
+   * Set the <code>value</code> of the <code>name</code> property. If 
+   * <code>name</code> is deprecated or there is a deprecated name associated to it,
+   * it sets the value to both names. Name will be trimmed before put into
+   * configuration.
+   * 
+   * @param name property name.
+   * @param value property value.
+   * @param value property source.
+   */
+  public void set(String name, String value, String source) {
+    set(name, value, source, true);
+  }
   
   /** 
    * Set the <code>value</code> of the <code>name</code> property. If 
@@ -1393,10 +1431,12 @@ public void set(String name, String value) {
    * @param name property name.
    * @param value property value.
    * @param source the place that this configuration value came from 
+   * @param log_enabled whether logging is enabled
    * (For debugging).
    * @throws IllegalArgumentException when the value or name is null.
    */
-  public void set(String name, String value, String source) {
+  // public void set(String name, String value, String source) {
+  public void set(String name, String value, String source, boolean log_enabled) {
     Preconditions.checkArgument(
         name != null,
         "Property name must not be null");
@@ -1408,6 +1448,8 @@ public void set(String name, String value, String source) {
     if (deprecations.getDeprecatedKeyMap().isEmpty()) {
       getProps();
     }
+    // if(log_enabled) LOG.warn("[CTEST][SET-PARAM] " + name); //CTEST
+    if(log_enabled) LOG.warn("[CTEST][SET-PARAM] " + name + getStackTrace()); //CTEST
     getOverlay().setProperty(name, value);
     getProps().setProperty(name, value);
     String newSource = (source == null ? "programmatically" : source);
@@ -1416,11 +1458,13 @@ public void set(String name, String value, String source) {
       putIntoUpdatingResource(name, new String[] {newSource});
       String[] altNames = getAlternativeNames(name);
       if(altNames != null) {
-        for(String n: altNames) {
-          if(!n.equals(name)) {
-            getOverlay().setProperty(n, value);
-            getProps().setProperty(n, value);
-            putIntoUpdatingResource(n, new String[] {newSource});
+        for(String paramName: altNames) {
+          if(!paramName.equals(name)) {
+            // if(log_enabled) LOG.warn("[CTEST][SET-PARAM] " + paramName); //CTEST
+            if(log_enabled) LOG.warn("[CTEST][SET-PARAM] " + paramName + getStackTrace()); //CTEST
+            getOverlay().setProperty(paramName, value);
+            getProps().setProperty(paramName, value);
+            putIntoUpdatingResource(paramName, new String[] {newSource});
           }
         }
       }
@@ -1428,10 +1472,12 @@ public void set(String name, String value, String source) {
     else {
       String[] names = handleDeprecation(deprecationContext.get(), name);
       String altSource = "because " + name + " is deprecated";
-      for(String n : names) {
-        getOverlay().setProperty(n, value);
-        getProps().setProperty(n, value);
-        putIntoUpdatingResource(n, new String[] {altSource});
+      for(String paramName : names) {
+        // if(log_enabled) LOG.warn("[CTEST][SET-PARAM] " + paramName); //CTEST
+        if(log_enabled) LOG.warn("[CTEST][SET-PARAM] " + paramName + getStackTrace()); //CTEST
+        getOverlay().setProperty(paramName, value);
+        getProps().setProperty(paramName, value);
+        putIntoUpdatingResource(paramName, new String[] {altSource});
       }
     }
   }
@@ -1501,11 +1547,15 @@ private synchronized Properties getOverlay() {
    *         doesn't exist.                    
    */
   public String get(String name, String defaultValue) {
+    String ctestParam = name; //CTEST
     String[] names = handleDeprecation(deprecationContext.get(), name);
     String result = null;
     for(String n : names) {
+      ctestParam = n; //CTEST
       result = substituteVars(getProps().getProperty(n, defaultValue));
     }
+    LOG.warn("[CTEST][GET-PARAM] " + ctestParam + getStackTrace()); //CTEST
+    // System.out.print("CTEST --------------------------- " + ctestParam);
     return result;
   }
 
@@ -3034,6 +3084,7 @@ private void loadResources(Properties properties,
     if(loadDefaults && fullReload) {
       for (String resource : defaultResources) {
         loadResource(properties, new Resource(resource, false), quiet);
+        LOG.warn("Current dir:" + System.getProperty("user.dir"));
       }
     }
     
-- 
2.25.1

